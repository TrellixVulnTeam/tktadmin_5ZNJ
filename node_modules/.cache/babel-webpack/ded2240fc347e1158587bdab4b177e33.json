{"ast":null,"code":"import _inherits from \"/home/danielbertoni/angular/tktadmin/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/home/danielbertoni/angular/tktadmin/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _createClass from \"/home/danielbertoni/angular/tktadmin/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _classCallCheck from \"/home/danielbertoni/angular/tktadmin/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport { validateEvents, getMonthView as _getMonthView, getWeekViewHeader as _getWeekViewHeader, getWeekView as _getWeekView, getDayView as _getDayView, getDayViewHourGrid as _getDayViewHourGrid } from 'calendar-utils';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nimport * as ɵngcc2 from 'angular-draggable-droppable';\nimport * as ɵngcc3 from 'angular-resizable-element';\n\nfunction CalendarEventActionsComponent_span_0_a_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r4 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"a\", 3);\n    ɵngcc0.ɵɵlistener(\"mwlClick\", function CalendarEventActionsComponent_span_0_a_1_Template_a_mwlClick_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r4);\n      var action_r2 = ctx.$implicit;\n      var ctx_r3 = ɵngcc0.ɵɵnextContext(2);\n      return action_r2.onClick({\n        event: ctx_r3.event\n      });\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var action_r2 = ctx.$implicit;\n    ɵngcc0.ɵɵproperty(\"ngClass\", action_r2.cssClass)(\"innerHtml\", action_r2.label, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction CalendarEventActionsComponent_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 1);\n    ɵngcc0.ɵɵtemplate(1, CalendarEventActionsComponent_span_0_a_1_Template, 1, 2, \"a\", 2);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ctx_r0.event.actions)(\"ngForTrackBy\", ctx_r0.trackByIndex);\n  }\n}\n\nfunction CalendarEventTitleComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"a\", 2);\n    ɵngcc0.ɵɵpipe(1, \"calendarEventTitle\");\n  }\n\n  if (rf & 2) {\n    var event_r3 = ctx.event;\n    var view_r4 = ctx.view;\n    ɵngcc0.ɵɵproperty(\"innerHTML\", ɵngcc0.ɵɵpipeBind3(1, 1, event_r3.title, view_r4, event_r3), ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction CalendarEventTitleComponent_ng_template_2_Template(rf, ctx) {}\n\nvar _c0 = function _c0(a0, a1) {\n  return {\n    event: a0,\n    view: a1\n  };\n};\n\nfunction CalendarTooltipWindowComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵelement(1, \"div\", 3);\n    ɵngcc0.ɵɵelement(2, \"div\", 4);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var contents_r3 = ctx.contents;\n    var placement_r4 = ctx.placement;\n    ɵngcc0.ɵɵproperty(\"ngClass\", \"cal-tooltip-\" + placement_r4);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"innerHtml\", contents_r3, ɵngcc0.ɵɵsanitizeHtml);\n  }\n}\n\nfunction CalendarTooltipWindowComponent_ng_template_2_Template(rf, ctx) {}\n\nvar _c1 = function _c1(a0, a1, a2) {\n  return {\n    contents: a0,\n    placement: a1,\n    event: a2\n  };\n};\n\nfunction CalendarMonthViewComponent_div_3_mwl_calendar_month_cell_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r5 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"mwl-calendar-month-cell\", 7);\n    ɵngcc0.ɵɵlistener(\"click\", function CalendarMonthViewComponent_div_3_mwl_calendar_month_cell_2_Template_mwl_calendar_month_cell_click_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var day_r3 = ctx.$implicit;\n      var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r4.handleDayClick($event, day_r3);\n    })(\"highlightDay\", function CalendarMonthViewComponent_div_3_mwl_calendar_month_cell_2_Template_mwl_calendar_month_cell_highlightDay_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r6 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r6.toggleDayHighlight($event.event, true);\n    })(\"unhighlightDay\", function CalendarMonthViewComponent_div_3_mwl_calendar_month_cell_2_Template_mwl_calendar_month_cell_unhighlightDay_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r7.toggleDayHighlight($event.event, false);\n    })(\"dragEnter\", function CalendarMonthViewComponent_div_3_mwl_calendar_month_cell_2_Template_mwl_calendar_month_cell_dragEnter_0_listener() {\n      var day_r3 = ctx.$implicit;\n      return day_r3.dragOver = true;\n    })(\"dragLeave\", function CalendarMonthViewComponent_div_3_mwl_calendar_month_cell_2_Template_mwl_calendar_month_cell_dragLeave_0_listener() {\n      var day_r3 = ctx.$implicit;\n      return day_r3.dragOver = false;\n    })(\"drop\", function CalendarMonthViewComponent_div_3_mwl_calendar_month_cell_2_Template_mwl_calendar_month_cell_drop_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var day_r3 = ctx.$implicit;\n      var ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n      day_r3.dragOver = false;\n      return ctx_r10.eventDropped(day_r3, $event.dropData.event);\n    })(\"eventClicked\", function CalendarMonthViewComponent_div_3_mwl_calendar_month_cell_2_Template_mwl_calendar_month_cell_eventClicked_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r5);\n      var ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r11.eventClicked.emit({\n        event: $event.event\n      });\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var day_r3 = ctx.$implicit;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵclassProp(\"cal-drag-over\", day_r3.dragOver);\n    ɵngcc0.ɵɵproperty(\"ngClass\", day_r3 == null ? null : day_r3.cssClass)(\"day\", day_r3)(\"openDay\", ctx_r2.openDay)(\"locale\", ctx_r2.locale)(\"tooltipPlacement\", ctx_r2.tooltipPlacement)(\"tooltipAppendToBody\", ctx_r2.tooltipAppendToBody)(\"tooltipTemplate\", ctx_r2.tooltipTemplate)(\"customTemplate\", ctx_r2.cellTemplate);\n  }\n}\n\nfunction CalendarMonthViewComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r13 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\");\n    ɵngcc0.ɵɵelementStart(1, \"div\", 4);\n    ɵngcc0.ɵɵtemplate(2, CalendarMonthViewComponent_div_3_mwl_calendar_month_cell_2_Template, 1, 10, \"mwl-calendar-month-cell\", 5);\n    ɵngcc0.ɵɵpipe(3, \"slice\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementStart(4, \"mwl-calendar-open-day-events\", 6);\n    ɵngcc0.ɵɵlistener(\"eventClicked\", function CalendarMonthViewComponent_div_3_Template_mwl_calendar_open_day_events_eventClicked_4_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r13);\n      var ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ctx_r12.eventClicked.emit({\n        event: $event.event\n      });\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var rowIndex_r1 = ctx.$implicit;\n    var ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", ɵngcc0.ɵɵpipeBind3(3, 6, ctx_r0.view.days, rowIndex_r1, rowIndex_r1 + ctx_r0.view.totalDaysVisibleInWeek))(\"ngForTrackBy\", ctx_r0.trackByDate);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"isOpen\", ctx_r0.openRowIndex === rowIndex_r1)(\"events\", ctx_r0.openDay == null ? null : ctx_r0.openDay.events)(\"customTemplate\", ctx_r0.openDayEventsTemplate)(\"eventTitleTemplate\", ctx_r0.eventTitleTemplate);\n  }\n}\n\nfunction CalendarMonthViewHeaderComponent_ng_template_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵpipe(2, \"calendarDate\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var day_r6 = ctx.$implicit;\n    var locale_r4 = ɵngcc0.ɵɵnextContext().locale;\n    ɵngcc0.ɵɵclassProp(\"cal-past\", day_r6.isPast)(\"cal-today\", day_r6.isToday)(\"cal-future\", day_r6.isFuture)(\"cal-weekend\", day_r6.isWeekend);\n    ɵngcc0.ɵɵproperty(\"ngClass\", day_r6.cssClass);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind3(2, 10, day_r6.date, \"monthViewColumnHeader\", locale_r4), \" \");\n  }\n}\n\nfunction CalendarMonthViewHeaderComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(1, CalendarMonthViewHeaderComponent_ng_template_0_div_1_Template, 3, 14, \"div\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var days_r3 = ctx.days;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", days_r3)(\"ngForTrackBy\", ctx_r1.trackByWeekDayHeaderDate);\n  }\n}\n\nfunction CalendarMonthViewHeaderComponent_ng_template_2_Template(rf, ctx) {}\n\nvar _c2 = function _c2(a0, a1) {\n  return {\n    days: a0,\n    locale: a1\n  };\n};\n\nfunction CalendarMonthCellComponent_ng_template_0_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"span\", 6);\n    ɵngcc0.ɵɵtext(1);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var day_r3 = ɵngcc0.ɵɵnextContext().day;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵtextInterpolate(day_r3.badgeTotal);\n  }\n}\n\nvar _c3 = function _c3(a0) {\n  return {\n    event: a0\n  };\n};\n\nvar _c4 = function _c4(a0, a1) {\n  return {\n    x: a0,\n    y: a1\n  };\n};\n\nfunction CalendarMonthCellComponent_ng_template_0_div_5_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r19 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 9);\n    ɵngcc0.ɵɵlistener(\"mouseenter\", function CalendarMonthCellComponent_ng_template_0_div_5_div_1_Template_div_mouseenter_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r19);\n      var event_r16 = ctx.$implicit;\n      var highlightDay_r7 = ɵngcc0.ɵɵnextContext(2).highlightDay;\n      return highlightDay_r7.emit({\n        event: event_r16\n      });\n    })(\"mouseleave\", function CalendarMonthCellComponent_ng_template_0_div_5_div_1_Template_div_mouseleave_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r19);\n      var event_r16 = ctx.$implicit;\n      var unhighlightDay_r8 = ɵngcc0.ɵɵnextContext(2).unhighlightDay;\n      return unhighlightDay_r8.emit({\n        event: event_r16\n      });\n    })(\"mwlClick\", function CalendarMonthCellComponent_ng_template_0_div_5_div_1_Template_div_mwlClick_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r19);\n      var event_r16 = ctx.$implicit;\n      var eventClicked_r9 = ɵngcc0.ɵɵnextContext(2).eventClicked;\n      return eventClicked_r9.emit({\n        event: event_r16\n      });\n    });\n    ɵngcc0.ɵɵpipe(1, \"calendarEventTitle\");\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var event_r16 = ctx.$implicit;\n    var ctx_r24 = ɵngcc0.ɵɵnextContext(2);\n    var tooltipPlacement_r6 = ctx_r24.tooltipPlacement;\n    var tooltipTemplate_r10 = ctx_r24.tooltipTemplate;\n    var tooltipAppendToBody_r11 = ctx_r24.tooltipAppendToBody;\n    ɵngcc0.ɵɵstyleProp(\"background-color\", event_r16.color == null ? null : event_r16.color.primary);\n    ɵngcc0.ɵɵproperty(\"ngClass\", event_r16 == null ? null : event_r16.cssClass)(\"mwlCalendarTooltip\", ɵngcc0.ɵɵpipeBind3(1, 10, event_r16.title, \"monthTooltip\", event_r16))(\"tooltipPlacement\", tooltipPlacement_r6)(\"tooltipEvent\", event_r16)(\"tooltipTemplate\", tooltipTemplate_r10)(\"tooltipAppendToBody\", tooltipAppendToBody_r11)(\"dropData\", ɵngcc0.ɵɵpureFunction1(14, _c3, event_r16))(\"dragAxis\", ɵngcc0.ɵɵpureFunction2(16, _c4, event_r16.draggable, event_r16.draggable));\n  }\n}\n\nfunction CalendarMonthCellComponent_ng_template_0_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(1, CalendarMonthCellComponent_ng_template_0_div_5_div_1_Template, 2, 19, \"div\", 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var day_r3 = ɵngcc0.ɵɵnextContext().day;\n    var ctx_r13 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", day_r3.events)(\"ngForTrackBy\", ctx_r13.trackByEventId);\n  }\n}\n\nfunction CalendarMonthCellComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(1, CalendarMonthCellComponent_ng_template_0_span_1_Template, 2, 1, \"span\", 3);\n    ɵngcc0.ɵɵelementStart(2, \"span\", 4);\n    ɵngcc0.ɵɵtext(3);\n    ɵngcc0.ɵɵpipe(4, \"calendarDate\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtemplate(5, CalendarMonthCellComponent_ng_template_0_div_5_Template, 2, 2, \"div\", 5);\n  }\n\n  if (rf & 2) {\n    var day_r3 = ctx.day;\n    var locale_r5 = ctx.locale;\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngIf\", day_r3.badgeTotal > 0);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind3(4, 3, day_r3.date, \"monthViewDayNumber\", locale_r5));\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngIf\", day_r3.events.length > 0);\n  }\n}\n\nfunction CalendarMonthCellComponent_ng_template_2_Template(rf, ctx) {}\n\nvar _c5 = function _c5(a0, a1, a2, a3, a4, a5, a6, a7, a8) {\n  return {\n    day: a0,\n    openDay: a1,\n    locale: a2,\n    tooltipPlacement: a3,\n    highlightDay: a4,\n    unhighlightDay: a5,\n    eventClicked: a6,\n    tooltipTemplate: a7,\n    tooltipAppendToBody: a8\n  };\n};\n\nfunction CalendarOpenDayEventsComponent_ng_template_0_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r9 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 3);\n    ɵngcc0.ɵɵelement(1, \"span\", 4);\n    ɵngcc0.ɵɵtext(2, \" \");\n    ɵngcc0.ɵɵelementStart(3, \"mwl-calendar-event-title\", 5);\n    ɵngcc0.ɵɵlistener(\"mwlClick\", function CalendarOpenDayEventsComponent_ng_template_0_div_0_Template_mwl_calendar_event_title_mwlClick_3_listener() {\n      ɵngcc0.ɵɵrestoreView(_r9);\n      var event_r6 = ctx.$implicit;\n      var eventClicked_r4 = ɵngcc0.ɵɵnextContext().eventClicked;\n      return eventClicked_r4.emit({\n        event: event_r6\n      });\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵtext(4, \" \");\n    ɵngcc0.ɵɵelement(5, \"mwl-calendar-event-actions\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var event_r6 = ctx.$implicit;\n    var ctx_r5 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵproperty(\"ngClass\", event_r6 == null ? null : event_r6.cssClass)(\"dropData\", ɵngcc0.ɵɵpureFunction1(8, _c3, event_r6))(\"dragAxis\", ɵngcc0.ɵɵpureFunction2(10, _c4, event_r6.draggable, event_r6.draggable));\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵstyleProp(\"background-color\", event_r6.color == null ? null : event_r6.color.primary);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"event\", event_r6)(\"customTemplate\", ctx_r5.eventTitleTemplate);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"event\", event_r6);\n  }\n}\n\nfunction CalendarOpenDayEventsComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵtemplate(0, CalendarOpenDayEventsComponent_ng_template_0_div_0_Template, 6, 13, \"div\", 2);\n  }\n\n  if (rf & 2) {\n    var events_r3 = ctx.events;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"ngForOf\", events_r3)(\"ngForTrackBy\", ctx_r1.trackByEventId);\n  }\n}\n\nfunction CalendarOpenDayEventsComponent_div_2_ng_template_1_Template(rf, ctx) {}\n\nvar _c6 = function _c6(a0, a1) {\n  return {\n    events: a0,\n    eventClicked: a1\n  };\n};\n\nfunction CalendarOpenDayEventsComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7);\n    ɵngcc0.ɵɵtemplate(1, CalendarOpenDayEventsComponent_div_2_ng_template_1_Template, 0, 0, \"ng-template\", 8);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n\n    var _r0 = ɵngcc0.ɵɵreference(1);\n\n    ɵngcc0.ɵɵproperty(\"@collapse\", undefined);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r2.customTemplate || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(3, _c6, ctx_r2.events, ctx_r2.eventClicked));\n  }\n}\n\nvar _c7 = function _c7(a0, a1) {\n  return {\n    left: a0,\n    right: a1\n  };\n};\n\nvar _c8 = function _c8(a0) {\n  return {\n    x: a0,\n    y: false\n  };\n};\n\nvar _c9 = function _c9(a0) {\n  return {\n    x: a0\n  };\n};\n\nfunction CalendarWeekViewComponent_div_3_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r8 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 7, 8);\n    ɵngcc0.ɵɵlistener(\"resizeStart\", function CalendarWeekViewComponent_div_3_div_2_Template_div_resizeStart_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var weekEvent_r5 = ctx.$implicit;\n      var ctx_r7 = ɵngcc0.ɵɵnextContext(2);\n\n      var _r0 = ɵngcc0.ɵɵreference(1);\n\n      return ctx_r7.resizeStarted(_r0, weekEvent_r5, $event);\n    })(\"resizing\", function CalendarWeekViewComponent_div_3_div_2_Template_div_resizing_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var weekEvent_r5 = ctx.$implicit;\n      var ctx_r9 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r9.resizing(weekEvent_r5, $event, ctx_r9.dayColumnWidth);\n    })(\"resizeEnd\", function CalendarWeekViewComponent_div_3_div_2_Template_div_resizeEnd_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var weekEvent_r5 = ctx.$implicit;\n      var ctx_r10 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r10.resizeEnded(weekEvent_r5);\n    })(\"dragPointerDown\", function CalendarWeekViewComponent_div_3_div_2_Template_div_dragPointerDown_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r8);\n\n      var _r6 = ɵngcc0.ɵɵreference(1);\n\n      var ctx_r11 = ɵngcc0.ɵɵnextContext(2);\n\n      var _r0 = ɵngcc0.ɵɵreference(1);\n\n      return ctx_r11.dragStart(_r0, _r6);\n    })(\"dragEnd\", function CalendarWeekViewComponent_div_3_div_2_Template_div_dragEnd_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var weekEvent_r5 = ctx.$implicit;\n      var ctx_r12 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r12.eventDragged(weekEvent_r5, $event.x, ctx_r12.dayColumnWidth);\n    });\n    ɵngcc0.ɵɵelementStart(2, \"mwl-calendar-week-view-event\", 9);\n    ɵngcc0.ɵɵlistener(\"eventClicked\", function CalendarWeekViewComponent_div_3_div_2_Template_mwl_calendar_week_view_event_eventClicked_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r8);\n      var weekEvent_r5 = ctx.$implicit;\n      var ctx_r13 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r13.eventClicked.emit({\n        event: weekEvent_r5.event\n      });\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var weekEvent_r5 = ctx.$implicit;\n    var ctx_r4 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"width\", 100 / ctx_r4.days.length * weekEvent_r5.span + \"%\")(\"margin-left\", 100 / ctx_r4.days.length * weekEvent_r5.offset + \"%\");\n    ɵngcc0.ɵɵclassProp(\"cal-draggable\", weekEvent_r5.event.draggable)(\"cal-starts-within-week\", !weekEvent_r5.startsBeforeWeek)(\"cal-ends-within-week\", !weekEvent_r5.endsAfterWeek);\n    ɵngcc0.ɵɵproperty(\"ngClass\", weekEvent_r5.event == null ? null : weekEvent_r5.event.cssClass)(\"resizeEdges\", ɵngcc0.ɵɵpureFunction2(23, _c7, weekEvent_r5.event == null ? null : weekEvent_r5.event.resizable == null ? null : weekEvent_r5.event.resizable.beforeStart, weekEvent_r5.event == null ? null : weekEvent_r5.event.resizable == null ? null : weekEvent_r5.event.resizable.afterEnd))(\"resizeSnapGrid\", ɵngcc0.ɵɵpureFunction2(26, _c7, ctx_r4.dayColumnWidth, ctx_r4.dayColumnWidth))(\"validateResize\", ctx_r4.validateResize)(\"dragAxis\", ɵngcc0.ɵɵpureFunction1(29, _c8, weekEvent_r5.event.draggable && ctx_r4.currentResizes.size === 0))(\"dragSnapGrid\", ɵngcc0.ɵɵpureFunction1(31, _c9, ctx_r4.dayColumnWidth))(\"validateDrag\", ctx_r4.validateDrag);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"weekEvent\", weekEvent_r5)(\"tooltipPlacement\", ctx_r4.tooltipPlacement)(\"tooltipTemplate\", ctx_r4.tooltipTemplate)(\"tooltipAppendToBody\", ctx_r4.tooltipAppendToBody)(\"customTemplate\", ctx_r4.eventTemplate)(\"eventTitleTemplate\", ctx_r4.eventTitleTemplate);\n  }\n}\n\nfunction CalendarWeekViewComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4, 5);\n    ɵngcc0.ɵɵtemplate(2, CalendarWeekViewComponent_div_3_div_2_Template, 3, 33, \"div\", 6);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var eventRow_r2 = ctx.$implicit;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", eventRow_r2.row)(\"ngForTrackBy\", ctx_r1.trackByEventId);\n  }\n}\n\nfunction CalendarWeekViewHeaderComponent_ng_template_0_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r11 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 4);\n    ɵngcc0.ɵɵlistener(\"mwlClick\", function CalendarWeekViewHeaderComponent_ng_template_0_div_1_Template_div_mwlClick_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      var day_r8 = ctx.$implicit;\n      var dayHeaderClicked_r5 = ɵngcc0.ɵɵnextContext().dayHeaderClicked;\n      return dayHeaderClicked_r5.emit({\n        day: day_r8\n      });\n    })(\"dragEnter\", function CalendarWeekViewHeaderComponent_ng_template_0_div_1_Template_div_dragEnter_0_listener() {\n      var day_r8 = ctx.$implicit;\n      return day_r8.dragOver = true;\n    })(\"dragLeave\", function CalendarWeekViewHeaderComponent_ng_template_0_div_1_Template_div_dragLeave_0_listener() {\n      var day_r8 = ctx.$implicit;\n      return day_r8.dragOver = false;\n    })(\"drop\", function CalendarWeekViewHeaderComponent_ng_template_0_div_1_Template_div_drop_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r11);\n      var day_r8 = ctx.$implicit;\n      var eventDropped_r6 = ɵngcc0.ɵɵnextContext().eventDropped;\n      day_r8.dragOver = false;\n      return eventDropped_r6.emit({\n        event: $event.dropData.event,\n        newStart: day_r8.date\n      });\n    });\n    ɵngcc0.ɵɵelementStart(1, \"b\");\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵpipe(3, \"calendarDate\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelement(4, \"br\");\n    ɵngcc0.ɵɵelementStart(5, \"span\");\n    ɵngcc0.ɵɵtext(6);\n    ɵngcc0.ɵɵpipe(7, \"calendarDate\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var day_r8 = ctx.$implicit;\n    var locale_r4 = ɵngcc0.ɵɵnextContext().locale;\n    ɵngcc0.ɵɵclassProp(\"cal-past\", day_r8.isPast)(\"cal-today\", day_r8.isToday)(\"cal-future\", day_r8.isFuture)(\"cal-weekend\", day_r8.isWeekend)(\"cal-drag-over\", day_r8.dragOver);\n    ɵngcc0.ɵɵproperty(\"ngClass\", day_r8.cssClass);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind3(3, 13, day_r8.date, \"weekViewColumnHeader\", locale_r4));\n    ɵngcc0.ɵɵadvance(4);\n    ɵngcc0.ɵɵtextInterpolate(ɵngcc0.ɵɵpipeBind3(7, 17, day_r8.date, \"weekViewColumnSubHeader\", locale_r4));\n  }\n}\n\nfunction CalendarWeekViewHeaderComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵtemplate(1, CalendarWeekViewHeaderComponent_ng_template_0_div_1_Template, 8, 21, \"div\", 3);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var days_r3 = ctx.days;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", days_r3)(\"ngForTrackBy\", ctx_r1.trackByWeekDayHeaderDate);\n  }\n}\n\nfunction CalendarWeekViewHeaderComponent_ng_template_2_Template(rf, ctx) {}\n\nvar _c10 = function _c10(a0, a1, a2, a3) {\n  return {\n    days: a0,\n    locale: a1,\n    dayHeaderClicked: a2,\n    eventDropped: a3\n  };\n};\n\nfunction CalendarWeekViewEventComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵpipe(1, \"calendarEventTitle\");\n    ɵngcc0.ɵɵelement(2, \"mwl-calendar-event-actions\", 3);\n    ɵngcc0.ɵɵtext(3, \" \");\n    ɵngcc0.ɵɵelementStart(4, \"mwl-calendar-event-title\", 4);\n    ɵngcc0.ɵɵlistener(\"mwlClick\", function CalendarWeekViewEventComponent_ng_template_0_Template_mwl_calendar_event_title_mwlClick_4_listener() {\n      var eventClicked_r5 = ctx.eventClicked;\n      return eventClicked_r5.emit();\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var weekEvent_r3 = ctx.weekEvent;\n    var tooltipPlacement_r4 = ctx.tooltipPlacement;\n    var tooltipTemplate_r6 = ctx.tooltipTemplate;\n    var tooltipAppendToBody_r7 = ctx.tooltipAppendToBody;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"background-color\", weekEvent_r3.event.color == null ? null : weekEvent_r3.event.color.secondary)(\"border-color\", weekEvent_r3.event.color == null ? null : weekEvent_r3.event.color.primary);\n    ɵngcc0.ɵɵproperty(\"mwlCalendarTooltip\", ɵngcc0.ɵɵpipeBind3(1, 12, weekEvent_r3.event.title, \"weekTooltip\", weekEvent_r3.event))(\"tooltipPlacement\", tooltipPlacement_r4)(\"tooltipEvent\", weekEvent_r3.event)(\"tooltipTemplate\", tooltipTemplate_r6)(\"tooltipAppendToBody\", tooltipAppendToBody_r7);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"event\", weekEvent_r3.event);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"event\", weekEvent_r3.event)(\"customTemplate\", ctx_r1.eventTitleTemplate);\n  }\n}\n\nfunction CalendarWeekViewEventComponent_ng_template_2_Template(rf, ctx) {}\n\nvar _c11 = function _c11(a0, a1, a2, a3, a4) {\n  return {\n    weekEvent: a0,\n    tooltipPlacement: a1,\n    eventClicked: a2,\n    tooltipTemplate: a3,\n    tooltipAppendToBody: a4\n  };\n};\n\nfunction CalendarDayViewComponent_mwl_calendar_all_day_event_2_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r6 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"mwl-calendar-all-day-event\", 7);\n    ɵngcc0.ɵɵlistener(\"eventClicked\", function CalendarDayViewComponent_mwl_calendar_all_day_event_2_Template_mwl_calendar_all_day_event_eventClicked_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r6);\n      var event_r4 = ctx.$implicit;\n      var ctx_r5 = ɵngcc0.ɵɵnextContext();\n      return ctx_r5.eventClicked.emit({\n        event: event_r4\n      });\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var event_r4 = ctx.$implicit;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵproperty(\"event\", event_r4)(\"customTemplate\", ctx_r1.allDayEventTemplate)(\"eventTitleTemplate\", ctx_r1.eventTitleTemplate);\n  }\n}\n\nvar _c12 = function _c12(a0, a1) {\n  return {\n    top: a0,\n    bottom: a1\n  };\n};\n\nvar _c13 = function _c13(a1) {\n  return {\n    x: false,\n    y: a1\n  };\n};\n\nvar _c14 = function _c14(a0) {\n  return {\n    y: a0\n  };\n};\n\nfunction CalendarDayViewComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r10 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"div\", 8, 9);\n    ɵngcc0.ɵɵlistener(\"resizeStart\", function CalendarDayViewComponent_div_5_Template_div_resizeStart_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var dayEvent_r7 = ctx.$implicit;\n      var ctx_r9 = ɵngcc0.ɵɵnextContext();\n\n      var _r0 = ɵngcc0.ɵɵreference(1);\n\n      return ctx_r9.resizeStarted(dayEvent_r7, $event, _r0);\n    })(\"resizing\", function CalendarDayViewComponent_div_5_Template_div_resizing_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var dayEvent_r7 = ctx.$implicit;\n      var ctx_r11 = ɵngcc0.ɵɵnextContext();\n      return ctx_r11.resizing(dayEvent_r7, $event);\n    })(\"resizeEnd\", function CalendarDayViewComponent_div_5_Template_div_resizeEnd_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var dayEvent_r7 = ctx.$implicit;\n      var ctx_r12 = ɵngcc0.ɵɵnextContext();\n      return ctx_r12.resizeEnded(dayEvent_r7);\n    })(\"dragPointerDown\", function CalendarDayViewComponent_div_5_Template_div_dragPointerDown_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n\n      var _r8 = ɵngcc0.ɵɵreference(1);\n\n      var ctx_r13 = ɵngcc0.ɵɵnextContext();\n\n      var _r0 = ɵngcc0.ɵɵreference(1);\n\n      return ctx_r13.dragStart(_r8, _r0);\n    })(\"dragEnd\", function CalendarDayViewComponent_div_5_Template_div_dragEnd_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var dayEvent_r7 = ctx.$implicit;\n      var ctx_r14 = ɵngcc0.ɵɵnextContext();\n      return ctx_r14.eventDragged(dayEvent_r7, $event.y);\n    });\n    ɵngcc0.ɵɵelementStart(2, \"mwl-calendar-day-view-event\", 10);\n    ɵngcc0.ɵɵlistener(\"eventClicked\", function CalendarDayViewComponent_div_5_Template_mwl_calendar_day_view_event_eventClicked_2_listener() {\n      ɵngcc0.ɵɵrestoreView(_r10);\n      var dayEvent_r7 = ctx.$implicit;\n      var ctx_r15 = ɵngcc0.ɵɵnextContext();\n      return ctx_r15.eventClicked.emit({\n        event: dayEvent_r7.event\n      });\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var dayEvent_r7 = ctx.$implicit;\n    var ctx_r2 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"margin-top\", dayEvent_r7.top, \"px\")(\"height\", dayEvent_r7.height, \"px\")(\"margin-left\", dayEvent_r7.left + 70, \"px\")(\"width\", dayEvent_r7.width - 1, \"px\");\n    ɵngcc0.ɵɵclassProp(\"cal-draggable\", dayEvent_r7.event.draggable)(\"cal-starts-within-day\", !dayEvent_r7.startsBeforeDay)(\"cal-ends-within-day\", !dayEvent_r7.endsAfterDay);\n    ɵngcc0.ɵɵproperty(\"ngClass\", dayEvent_r7.event.cssClass)(\"resizeEdges\", ɵngcc0.ɵɵpureFunction2(27, _c12, dayEvent_r7.event == null ? null : dayEvent_r7.event.resizable == null ? null : dayEvent_r7.event.resizable.beforeStart, dayEvent_r7.event == null ? null : dayEvent_r7.event.resizable == null ? null : dayEvent_r7.event.resizable.afterEnd))(\"resizeSnapGrid\", ɵngcc0.ɵɵpureFunction2(30, _c12, ctx_r2.eventSnapSize, ctx_r2.eventSnapSize))(\"validateResize\", ctx_r2.validateResize)(\"dragAxis\", ɵngcc0.ɵɵpureFunction1(33, _c13, dayEvent_r7.event.draggable && ctx_r2.currentResizes.size === 0))(\"dragSnapGrid\", ɵngcc0.ɵɵpureFunction1(35, _c14, ctx_r2.eventSnapSize))(\"validateDrag\", ctx_r2.validateDrag);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"dayEvent\", dayEvent_r7)(\"tooltipPlacement\", ctx_r2.tooltipPlacement)(\"tooltipTemplate\", ctx_r2.tooltipTemplate)(\"tooltipAppendToBody\", ctx_r2.tooltipAppendToBody)(\"customTemplate\", ctx_r2.eventTemplate)(\"eventTitleTemplate\", ctx_r2.eventTitleTemplate);\n  }\n}\n\nfunction CalendarDayViewComponent_div_6_mwl_calendar_day_view_hour_segment_1_Template(rf, ctx) {\n  if (rf & 1) {\n    var _r20 = ɵngcc0.ɵɵgetCurrentView();\n\n    ɵngcc0.ɵɵelementStart(0, \"mwl-calendar-day-view-hour-segment\", 13);\n    ɵngcc0.ɵɵlistener(\"click\", function CalendarDayViewComponent_div_6_mwl_calendar_day_view_hour_segment_1_Template_mwl_calendar_day_view_hour_segment_click_0_listener() {\n      ɵngcc0.ɵɵrestoreView(_r20);\n      var segment_r18 = ctx.$implicit;\n      var ctx_r19 = ɵngcc0.ɵɵnextContext(2);\n      return ctx_r19.hourSegmentClicked.emit({\n        date: segment_r18.date\n      });\n    })(\"dragEnter\", function CalendarDayViewComponent_div_6_mwl_calendar_day_view_hour_segment_1_Template_mwl_calendar_day_view_hour_segment_dragEnter_0_listener() {\n      var segment_r18 = ctx.$implicit;\n      return segment_r18.dragOver = true;\n    })(\"dragLeave\", function CalendarDayViewComponent_div_6_mwl_calendar_day_view_hour_segment_1_Template_mwl_calendar_day_view_hour_segment_dragLeave_0_listener() {\n      var segment_r18 = ctx.$implicit;\n      return segment_r18.dragOver = false;\n    })(\"drop\", function CalendarDayViewComponent_div_6_mwl_calendar_day_view_hour_segment_1_Template_mwl_calendar_day_view_hour_segment_drop_0_listener($event) {\n      ɵngcc0.ɵɵrestoreView(_r20);\n      var segment_r18 = ctx.$implicit;\n      var ctx_r23 = ɵngcc0.ɵɵnextContext(2);\n      segment_r18.dragOver = false;\n      return ctx_r23.eventDropped($event, segment_r18);\n    });\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var segment_r18 = ctx.$implicit;\n    var ctx_r17 = ɵngcc0.ɵɵnextContext(2);\n    ɵngcc0.ɵɵstyleProp(\"height\", ctx_r17.hourSegmentHeight, \"px\");\n    ɵngcc0.ɵɵclassProp(\"cal-drag-over\", segment_r18.dragOver);\n    ɵngcc0.ɵɵproperty(\"segment\", segment_r18)(\"segmentHeight\", ctx_r17.hourSegmentHeight)(\"locale\", ctx_r17.locale)(\"customTemplate\", ctx_r17.hourSegmentTemplate);\n  }\n}\n\nfunction CalendarDayViewComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 11);\n    ɵngcc0.ɵɵtemplate(1, CalendarDayViewComponent_div_6_mwl_calendar_day_view_hour_segment_1_Template, 1, 8, \"mwl-calendar-day-view-hour-segment\", 12);\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var hour_r16 = ctx.$implicit;\n    var ctx_r3 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"min-width\", (ctx_r3.view == null ? null : ctx_r3.view.width) + 70, \"px\");\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"ngForOf\", hour_r16.segments)(\"ngForTrackBy\", ctx_r3.trackByHourSegment);\n  }\n}\n\nfunction CalendarAllDayEventComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵelement(1, \"mwl-calendar-event-actions\", 3);\n    ɵngcc0.ɵɵtext(2, \" \");\n    ɵngcc0.ɵɵelementStart(3, \"mwl-calendar-event-title\", 4);\n    ɵngcc0.ɵɵlistener(\"mwlClick\", function CalendarAllDayEventComponent_ng_template_0_Template_mwl_calendar_event_title_mwlClick_3_listener() {\n      var eventClicked_r4 = ctx.eventClicked;\n      return eventClicked_r4.emit();\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var event_r3 = ctx.event;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"background-color\", event_r3.color == null ? null : event_r3.color.secondary)(\"border-color\", event_r3.color == null ? null : event_r3.color.primary);\n    ɵngcc0.ɵɵadvance(1);\n    ɵngcc0.ɵɵproperty(\"event\", event_r3);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"event\", event_r3)(\"customTemplate\", ctx_r1.eventTitleTemplate);\n  }\n}\n\nfunction CalendarAllDayEventComponent_ng_template_2_Template(rf, ctx) {}\n\nvar _c15 = function _c15(a0, a1) {\n  return {\n    event: a0,\n    eventClicked: a1\n  };\n};\n\nfunction CalendarDayViewHourSegmentComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵelementStart(1, \"div\", 3);\n    ɵngcc0.ɵɵtext(2);\n    ɵngcc0.ɵɵpipe(3, \"calendarDate\");\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var segment_r3 = ctx.segment;\n    var locale_r4 = ctx.locale;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"height\", ctx_r1.segmentHeight, \"px\");\n    ɵngcc0.ɵɵclassProp(\"cal-hour-start\", segment_r3.isStart)(\"cal-after-hour-start\", !segment_r3.isStart);\n    ɵngcc0.ɵɵproperty(\"ngClass\", segment_r3.cssClass);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵtextInterpolate1(\" \", ɵngcc0.ɵɵpipeBind3(3, 8, segment_r3.date, \"dayViewHour\", locale_r4), \" \");\n  }\n}\n\nfunction CalendarDayViewHourSegmentComponent_ng_template_2_Template(rf, ctx) {}\n\nvar _c16 = function _c16(a0, a1) {\n  return {\n    segment: a0,\n    locale: a1\n  };\n};\n\nfunction CalendarDayViewEventComponent_ng_template_0_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelementStart(0, \"div\", 2);\n    ɵngcc0.ɵɵpipe(1, \"calendarEventTitle\");\n    ɵngcc0.ɵɵelement(2, \"mwl-calendar-event-actions\", 3);\n    ɵngcc0.ɵɵtext(3, \" \");\n    ɵngcc0.ɵɵelementStart(4, \"mwl-calendar-event-title\", 4);\n    ɵngcc0.ɵɵlistener(\"mwlClick\", function CalendarDayViewEventComponent_ng_template_0_Template_mwl_calendar_event_title_mwlClick_4_listener() {\n      var eventClicked_r5 = ctx.eventClicked;\n      return eventClicked_r5.emit();\n    });\n    ɵngcc0.ɵɵelementEnd();\n    ɵngcc0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    var dayEvent_r3 = ctx.dayEvent;\n    var tooltipPlacement_r4 = ctx.tooltipPlacement;\n    var tooltipTemplate_r6 = ctx.tooltipTemplate;\n    var tooltipAppendToBody_r7 = ctx.tooltipAppendToBody;\n    var ctx_r1 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"background-color\", dayEvent_r3.event.color == null ? null : dayEvent_r3.event.color.secondary)(\"border-color\", dayEvent_r3.event.color == null ? null : dayEvent_r3.event.color.primary);\n    ɵngcc0.ɵɵproperty(\"mwlCalendarTooltip\", ɵngcc0.ɵɵpipeBind3(1, 12, dayEvent_r3.event.title, \"dayTooltip\", dayEvent_r3.event))(\"tooltipPlacement\", tooltipPlacement_r4)(\"tooltipEvent\", dayEvent_r3.event)(\"tooltipTemplate\", tooltipTemplate_r6)(\"tooltipAppendToBody\", tooltipAppendToBody_r7);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"event\", dayEvent_r3.event);\n    ɵngcc0.ɵɵadvance(2);\n    ɵngcc0.ɵɵproperty(\"event\", dayEvent_r3.event)(\"customTemplate\", ctx_r1.eventTitleTemplate);\n  }\n}\n\nfunction CalendarDayViewEventComponent_ng_template_2_Template(rf, ctx) {}\n\nvar _c17 = function _c17(a0, a1, a2, a3, a4) {\n  return {\n    dayEvent: a0,\n    tooltipPlacement: a1,\n    eventClicked: a2,\n    tooltipTemplate: a3,\n    tooltipAppendToBody: a4\n  };\n};\n\nexport { DAYS_OF_WEEK } from 'calendar-utils';\nimport { Component, Input, Directive, HostListener, Injector, ComponentFactoryResolver, ViewContainerRef, ElementRef, Inject, Renderer2, Output, EventEmitter, Pipe, LOCALE_ID, Injectable, InjectionToken, NgModule, ChangeDetectorRef } from '@angular/core';\nimport { DOCUMENT, DatePipe, CommonModule } from '@angular/common';\nimport { Positioning } from 'positioning';\nimport subDays from 'date-fns/sub_days/index';\nimport subWeeks from 'date-fns/sub_weeks/index';\nimport subMonths from 'date-fns/sub_months/index';\nimport addDays from 'date-fns/add_days/index';\nimport addWeeks from 'date-fns/add_weeks/index';\nimport addMonths from 'date-fns/add_months/index';\nimport startOfToday from 'date-fns/start_of_today/index';\nimport getISOWeek from 'date-fns/get_iso_week/index';\nimport { DraggableHelper, DragAndDropModule } from 'angular-draggable-droppable';\nimport 'rxjs';\nimport isSameDay from 'date-fns/is_same_day/index';\nimport setDate from 'date-fns/set_date/index';\nimport setMonth from 'date-fns/set_month/index';\nimport setYear from 'date-fns/set_year/index';\nimport getDate from 'date-fns/get_date/index';\nimport getMonth from 'date-fns/get_month/index';\nimport getYear from 'date-fns/get_year/index';\nimport differenceInSeconds from 'date-fns/difference_in_seconds/index';\nimport addSeconds from 'date-fns/add_seconds/index';\nimport { trigger, style, transition, animate } from '@angular/animations';\nimport { ResizableModule } from 'angular-resizable-element';\nimport addMinutes from 'date-fns/add_minutes/index';\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\nvar\n/** @type {?} */\nvalidateEvents$1 = function validateEvents$1(events) {\n  var\n  /** @type {?} */\n  warn = function warn() {\n    var _console;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return (_console = console).warn.apply(_console, ['angular-calendar'].concat(args));\n  };\n\n  return validateEvents(events, warn);\n};\n/**\n * @param {?} outer\n * @param {?} inner\n * @return {?}\n */\n\n\nfunction isInside(outer, inner) {\n  return outer.left <= inner.left && inner.left <= outer.right && outer.left <= inner.right && inner.right <= outer.right && outer.top <= inner.top && inner.top <= outer.bottom && outer.top <= inner.bottom && inner.bottom <= outer.bottom;\n}\n\nvar\n/** @type {?} */\ntrackByEventId = function trackByEventId(index, event) {\n  return event.id ? event.id : event;\n};\n\nvar\n/** @type {?} */\ntrackByWeekDayHeaderDate = function trackByWeekDayHeaderDate(index, day) {\n  return day.date.toISOString();\n};\n\nvar\n/** @type {?} */\ntrackByIndex = function trackByIndex(index) {\n  return index;\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar CalendarEventActionsComponent = function CalendarEventActionsComponent() {\n  _classCallCheck(this, CalendarEventActionsComponent);\n\n  this.trackByIndex = trackByIndex;\n};\n\nCalendarEventActionsComponent.ɵfac = function CalendarEventActionsComponent_Factory(t) {\n  return new (t || CalendarEventActionsComponent)();\n};\n\nCalendarEventActionsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CalendarEventActionsComponent,\n  selectors: [[\"mwl-calendar-event-actions\"]],\n  inputs: {\n    event: \"event\"\n  },\n  decls: 1,\n  vars: 1,\n  consts: [[\"class\", \"cal-event-actions\", 4, \"ngIf\"], [1, \"cal-event-actions\"], [\"class\", \"cal-event-action\", \"href\", \"javascript:;\", 3, \"ngClass\", \"innerHtml\", \"mwlClick\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"href\", \"javascript:;\", 1, \"cal-event-action\", 3, \"ngClass\", \"innerHtml\", \"mwlClick\"]],\n  template: function CalendarEventActionsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, CalendarEventActionsComponent_span_0_Template, 2, 2, \"span\", 0);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.event.actions);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc1.NgClass, ClickDirective];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nCalendarEventActionsComponent.propDecorators = {\n  \"event\": [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarEventActionsComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mwl-calendar-event-actions',\n      template: \"\\n    <span *ngIf=\\\"event.actions\\\" class=\\\"cal-event-actions\\\">\\n      <a\\n        class=\\\"cal-event-action\\\"\\n        href=\\\"javascript:;\\\"\\n        *ngFor=\\\"let action of event.actions; trackBy:trackByIndex\\\"\\n        (mwlClick)=\\\"action.onClick({event: event})\\\"\\n        [ngClass]=\\\"action.cssClass\\\"\\n        [innerHtml]=\\\"action.label\\\">\\n      </a>\\n    </span>\\n  \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    event: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar CalendarEventTitleComponent = function CalendarEventTitleComponent() {\n  _classCallCheck(this, CalendarEventTitleComponent);\n};\n\nCalendarEventTitleComponent.ɵfac = function CalendarEventTitleComponent_Factory(t) {\n  return new (t || CalendarEventTitleComponent)();\n};\n\nCalendarEventTitleComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CalendarEventTitleComponent,\n  selectors: [[\"mwl-calendar-event-title\"]],\n  inputs: {\n    event: \"event\",\n    customTemplate: \"customTemplate\",\n    view: \"view\"\n  },\n  decls: 3,\n  vars: 5,\n  consts: [[\"defaultTemplate\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"href\", \"javascript:;\", 1, \"cal-event-title\", 3, \"innerHTML\"]],\n  template: function CalendarEventTitleComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, CalendarEventTitleComponent_ng_template_0_Template, 2, 5, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, CalendarEventTitleComponent_ng_template_2_Template, 0, 0, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      var _r0 = ɵngcc0.ɵɵreference(1);\n\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.customTemplate || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(2, _c0, ctx.event, ctx.view));\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgTemplateOutlet];\n  },\n  pipes: function pipes() {\n    return [CalendarEventTitlePipe];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nCalendarEventTitleComponent.propDecorators = {\n  \"event\": [{\n    type: Input\n  }],\n  \"customTemplate\": [{\n    type: Input\n  }],\n  \"view\": [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarEventTitleComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mwl-calendar-event-title',\n      template: \"\\n    <ng-template\\n      #defaultTemplate\\n      let-event=\\\"event\\\"\\n      let-view=\\\"view\\\">\\n      <a\\n        class=\\\"cal-event-title\\\"\\n        href=\\\"javascript:;\\\"\\n        [innerHTML]=\\\"event.title | calendarEventTitle:view:event\\\">\\n      </a>\\n    </ng-template>\\n    <ng-template\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\n      [ngTemplateOutletContext]=\\\"{\\n        event: event,\\n        view: view\\n      }\\\">\\n    </ng-template>\\n  \"\n    }]\n  }], null, {\n    event: [{\n      type: Input\n    }],\n    customTemplate: [{\n      type: Input\n    }],\n    view: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar CalendarTooltipWindowComponent = function CalendarTooltipWindowComponent() {\n  _classCallCheck(this, CalendarTooltipWindowComponent);\n};\n\nCalendarTooltipWindowComponent.ɵfac = function CalendarTooltipWindowComponent_Factory(t) {\n  return new (t || CalendarTooltipWindowComponent)();\n};\n\nCalendarTooltipWindowComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CalendarTooltipWindowComponent,\n  selectors: [[\"ng-component\"]],\n  inputs: {\n    contents: \"contents\",\n    placement: \"placement\",\n    event: \"event\",\n    customTemplate: \"customTemplate\"\n  },\n  decls: 3,\n  vars: 6,\n  consts: [[\"defaultTemplate\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"cal-tooltip\", 3, \"ngClass\"], [1, \"cal-tooltip-arrow\"], [1, \"cal-tooltip-inner\", 3, \"innerHtml\"]],\n  template: function CalendarTooltipWindowComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, CalendarTooltipWindowComponent_ng_template_0_Template, 3, 2, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, CalendarTooltipWindowComponent_ng_template_2_Template, 0, 0, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      var _r0 = ɵngcc0.ɵɵreference(1);\n\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.customTemplate || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction3(2, _c1, ctx.contents, ctx.placement, ctx.event));\n    }\n  },\n  directives: [ɵngcc1.NgTemplateOutlet, ɵngcc1.NgClass],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nCalendarTooltipWindowComponent.propDecorators = {\n  \"contents\": [{\n    type: Input\n  }],\n  \"placement\": [{\n    type: Input\n  }],\n  \"event\": [{\n    type: Input\n  }],\n  \"customTemplate\": [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarTooltipWindowComponent, [{\n    type: Component,\n    args: [{\n      template: \"\\n    <ng-template\\n      #defaultTemplate\\n      let-contents=\\\"contents\\\"\\n      let-placement=\\\"placement\\\"\\n      let-event=\\\"event\\\">\\n      <div class=\\\"cal-tooltip\\\" [ngClass]=\\\"'cal-tooltip-' + placement\\\">\\n        <div class=\\\"cal-tooltip-arrow\\\"></div>\\n        <div class=\\\"cal-tooltip-inner\\\" [innerHtml]=\\\"contents\\\"></div>\\n      </div>\\n    </ng-template>\\n    <ng-template\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\n      [ngTemplateOutletContext]=\\\"{\\n        contents: contents,\\n        placement: placement,\\n        event: event\\n      }\\\">\\n    </ng-template>\\n  \"\n    }]\n  }], null, {\n    contents: [{\n      type: Input\n    }],\n    placement: [{\n      type: Input\n    }],\n    event: [{\n      type: Input\n    }],\n    customTemplate: [{\n      type: Input\n    }]\n  });\n})();\n\nvar CalendarTooltipDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} elementRef\n   * @param {?} injector\n   * @param {?} renderer\n   * @param {?} componentFactoryResolver\n   * @param {?} viewContainerRef\n   * @param {?} document\n   */\n  function CalendarTooltipDirective(elementRef, injector, renderer, componentFactoryResolver, viewContainerRef, document //tslint:disable-line\n  //tslint:disable-line\n  ) {\n    _classCallCheck(this, CalendarTooltipDirective);\n\n    this.elementRef = elementRef;\n    this.injector = injector;\n    this.renderer = renderer;\n    this.viewContainerRef = viewContainerRef;\n    this.document //tslint:disable-line\n    = document;\n    this.placement = 'top';\n    this.positioning = new Positioning();\n    this.tooltipFactory = componentFactoryResolver.resolveComponentFactory(CalendarTooltipWindowComponent);\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(CalendarTooltipDirective, [{\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.hide();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"onMouseOver\",\n    value: function onMouseOver() {\n      this.show();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"onMouseOut\",\n    value: function onMouseOut() {\n      this.hide();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"show\",\n    value: function show() {\n      var _this = this;\n\n      if (!this.tooltipRef && this.contents) {\n        this.tooltipRef = this.viewContainerRef.createComponent(this.tooltipFactory, 0, this.injector, []);\n        this.tooltipRef.instance.contents = this.contents;\n        this.tooltipRef.instance.placement = this.placement;\n        this.tooltipRef.instance.customTemplate = this.customTemplate;\n        this.tooltipRef.instance.event = this.event;\n\n        if (this.appendToBody) {\n          this.document.body.appendChild(this.tooltipRef.location.nativeElement);\n        }\n\n        requestAnimationFrame(function () {\n          _this.positionTooltip();\n        });\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      if (this.tooltipRef) {\n        this.viewContainerRef.remove(this.viewContainerRef.indexOf(this.tooltipRef.hostView));\n        this.tooltipRef = null;\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"positionTooltip\",\n    value: function positionTooltip() {\n      if (this.tooltipRef) {\n        var\n        /** @type {?} */\n        targetPosition = this.positioning.positionElements(this.elementRef.nativeElement, this.tooltipRef.location.nativeElement.children[0], this.placement, this.appendToBody);\n        var\n        /** @type {?} */\n        elm = this.tooltipRef.location.nativeElement.children[0];\n        this.renderer.setStyle(elm, 'top', \"\".concat(targetPosition.top, \"px\"));\n        this.renderer.setStyle(elm, 'left', \"\".concat(targetPosition.left, \"px\"));\n      }\n    }\n  }]);\n\n  return CalendarTooltipDirective;\n}();\n\nCalendarTooltipDirective.ɵfac = function CalendarTooltipDirective_Factory(t) {\n  return new (t || CalendarTooltipDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Injector), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ComponentFactoryResolver), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ViewContainerRef), ɵngcc0.ɵɵdirectiveInject(DOCUMENT));\n};\n\nCalendarTooltipDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CalendarTooltipDirective,\n  selectors: [[\"\", \"mwlCalendarTooltip\", \"\"]],\n  hostBindings: function CalendarTooltipDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"mouseenter\", function CalendarTooltipDirective_mouseenter_HostBindingHandler() {\n        return ctx.onMouseOver();\n      })(\"mouseleave\", function CalendarTooltipDirective_mouseleave_HostBindingHandler() {\n        return ctx.onMouseOut();\n      });\n    }\n  },\n  inputs: {\n    placement: [\"tooltipPlacement\", \"placement\"],\n    contents: [\"mwlCalendarTooltip\", \"contents\"],\n    customTemplate: [\"tooltipTemplate\", \"customTemplate\"],\n    event: [\"tooltipEvent\", \"event\"],\n    appendToBody: [\"tooltipAppendToBody\", \"appendToBody\"]\n  }\n});\n/** @nocollapse */\n\nCalendarTooltipDirective.ctorParameters = function () {\n  return [{\n    type: ElementRef\n  }, {\n    type: Injector\n  }, {\n    type: Renderer2\n  }, {\n    type: ComponentFactoryResolver\n  }, {\n    type: ViewContainerRef\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [DOCUMENT]\n    }]\n  }];\n};\n\nCalendarTooltipDirective.propDecorators = {\n  \"contents\": [{\n    type: Input,\n    args: ['mwlCalendarTooltip']\n  }],\n  \"placement\": [{\n    type: Input,\n    args: ['tooltipPlacement']\n  }],\n  \"customTemplate\": [{\n    type: Input,\n    args: ['tooltipTemplate']\n  }],\n  \"event\": [{\n    type: Input,\n    args: ['tooltipEvent']\n  }],\n  \"appendToBody\": [{\n    type: Input,\n    args: ['tooltipAppendToBody']\n  }],\n  \"onMouseOver\": [{\n    type: HostListener,\n    args: ['mouseenter']\n  }],\n  \"onMouseOut\": [{\n    type: HostListener,\n    args: ['mouseleave']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarTooltipDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[mwlCalendarTooltip]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ElementRef\n    }, {\n      type: ɵngcc0.Injector\n    }, {\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ComponentFactoryResolver\n    }, {\n      type: ɵngcc0.ViewContainerRef\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [DOCUMENT]\n      }]\n    }];\n  }, {\n    placement: [{\n      type: Input,\n      args: ['tooltipPlacement']\n    }],\n\n    /**\n     * @return {?}\n     */\n    onMouseOver: [{\n      type: HostListener,\n      args: ['mouseenter']\n    }],\n\n    /**\n     * @return {?}\n     */\n    onMouseOut: [{\n      type: HostListener,\n      args: ['mouseleave']\n    }],\n    contents: [{\n      type: Input,\n      args: ['mwlCalendarTooltip']\n    }],\n    customTemplate: [{\n      type: Input,\n      args: ['tooltipTemplate']\n    }],\n    event: [{\n      type: Input,\n      args: ['tooltipEvent']\n    }],\n    appendToBody: [{\n      type: Input,\n      args: ['tooltipAppendToBody']\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Change the view date to the previous view. For example:\n *\n * ```typescript\n * <button\n *  mwlCalendarPreviousView\n *  [(viewDate)]=\"viewDate\"\n *  [view]=\"view\">\n *  Previous\n * </button>\n * ```\n */\n\n\nvar CalendarPreviousViewDirective = /*#__PURE__*/function () {\n  function CalendarPreviousViewDirective() {\n    _classCallCheck(this, CalendarPreviousViewDirective);\n\n    /**\n     * Called when the view date is changed\n     */\n    this.viewDateChange = new EventEmitter();\n  }\n  /**\n   * @hidden\n   * @return {?}\n   */\n\n\n  _createClass(CalendarPreviousViewDirective, [{\n    key: \"onClick\",\n    value: function onClick() {\n      var\n      /** @type {?} */\n      subFn = {\n        day: subDays,\n        week: subWeeks,\n        month: subMonths\n      }[this.view];\n      this.viewDateChange.emit(subFn(this.viewDate, 1));\n    }\n  }]);\n\n  return CalendarPreviousViewDirective;\n}();\n\nCalendarPreviousViewDirective.ɵfac = function CalendarPreviousViewDirective_Factory(t) {\n  return new (t || CalendarPreviousViewDirective)();\n};\n\nCalendarPreviousViewDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CalendarPreviousViewDirective,\n  selectors: [[\"\", \"mwlCalendarPreviousView\", \"\"]],\n  hostBindings: function CalendarPreviousViewDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function CalendarPreviousViewDirective_click_HostBindingHandler() {\n        return ctx.onClick();\n      });\n    }\n  },\n  inputs: {\n    view: \"view\",\n    viewDate: \"viewDate\"\n  },\n  outputs: {\n    viewDateChange: \"viewDateChange\"\n  }\n});\n/** @nocollapse */\n\nCalendarPreviousViewDirective.propDecorators = {\n  \"view\": [{\n    type: Input\n  }],\n  \"viewDate\": [{\n    type: Input\n  }],\n  \"viewDateChange\": [{\n    type: Output\n  }],\n  \"onClick\": [{\n    type: HostListener,\n    args: ['click']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarPreviousViewDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[mwlCalendarPreviousView]'\n    }]\n  }], function () {\n    return [];\n  }, {\n    viewDateChange: [{\n      type: Output\n    }],\n\n    /**\n     * @hidden\n     * @return {?}\n     */\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    view: [{\n      type: Input\n    }],\n    viewDate: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Change the view date to the next view. For example:\n *\n * ```typescript\n * <button\n *  mwlCalendarNextView\n *  [(viewDate)]=\"viewDate\"\n *  [view]=\"view\">\n *  Next\n * </button>\n * ```\n */\n\n\nvar CalendarNextViewDirective = /*#__PURE__*/function () {\n  function CalendarNextViewDirective() {\n    _classCallCheck(this, CalendarNextViewDirective);\n\n    /**\n     * Called when the view date is changed\n     */\n    this.viewDateChange = new EventEmitter();\n  }\n  /**\n   * @hidden\n   * @return {?}\n   */\n\n\n  _createClass(CalendarNextViewDirective, [{\n    key: \"onClick\",\n    value: function onClick() {\n      var\n      /** @type {?} */\n      addFn = {\n        day: addDays,\n        week: addWeeks,\n        month: addMonths\n      }[this.view];\n      this.viewDateChange.emit(addFn(this.viewDate, 1));\n    }\n  }]);\n\n  return CalendarNextViewDirective;\n}();\n\nCalendarNextViewDirective.ɵfac = function CalendarNextViewDirective_Factory(t) {\n  return new (t || CalendarNextViewDirective)();\n};\n\nCalendarNextViewDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CalendarNextViewDirective,\n  selectors: [[\"\", \"mwlCalendarNextView\", \"\"]],\n  hostBindings: function CalendarNextViewDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function CalendarNextViewDirective_click_HostBindingHandler() {\n        return ctx.onClick();\n      });\n    }\n  },\n  inputs: {\n    view: \"view\",\n    viewDate: \"viewDate\"\n  },\n  outputs: {\n    viewDateChange: \"viewDateChange\"\n  }\n});\n/** @nocollapse */\n\nCalendarNextViewDirective.propDecorators = {\n  \"view\": [{\n    type: Input\n  }],\n  \"viewDate\": [{\n    type: Input\n  }],\n  \"viewDateChange\": [{\n    type: Output\n  }],\n  \"onClick\": [{\n    type: HostListener,\n    args: ['click']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarNextViewDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[mwlCalendarNextView]'\n    }]\n  }], function () {\n    return [];\n  }, {\n    viewDateChange: [{\n      type: Output\n    }],\n\n    /**\n     * @hidden\n     * @return {?}\n     */\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    view: [{\n      type: Input\n    }],\n    viewDate: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Change the view date to the current day. For example:\n *\n * ```typescript\n * <button\n *  mwlCalendarToday\n *  [(viewDate)]=\"viewDate\">\n *  Today\n * </button>\n * ```\n */\n\n\nvar CalendarTodayDirective = /*#__PURE__*/function () {\n  function CalendarTodayDirective() {\n    _classCallCheck(this, CalendarTodayDirective);\n\n    /**\n     * Called when the view date is changed\n     */\n    this.viewDateChange = new EventEmitter();\n  }\n  /**\n   * @hidden\n   * @return {?}\n   */\n\n\n  _createClass(CalendarTodayDirective, [{\n    key: \"onClick\",\n    value: function onClick() {\n      this.viewDateChange.emit(startOfToday());\n    }\n  }]);\n\n  return CalendarTodayDirective;\n}();\n\nCalendarTodayDirective.ɵfac = function CalendarTodayDirective_Factory(t) {\n  return new (t || CalendarTodayDirective)();\n};\n\nCalendarTodayDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: CalendarTodayDirective,\n  selectors: [[\"\", \"mwlCalendarToday\", \"\"]],\n  hostBindings: function CalendarTodayDirective_HostBindings(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵlistener(\"click\", function CalendarTodayDirective_click_HostBindingHandler() {\n        return ctx.onClick();\n      });\n    }\n  },\n  inputs: {\n    viewDate: \"viewDate\"\n  },\n  outputs: {\n    viewDateChange: \"viewDateChange\"\n  }\n});\n/** @nocollapse */\n\nCalendarTodayDirective.propDecorators = {\n  \"viewDate\": [{\n    type: Input\n  }],\n  \"viewDateChange\": [{\n    type: Output\n  }],\n  \"onClick\": [{\n    type: HostListener,\n    args: ['click']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarTodayDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[mwlCalendarToday]'\n    }]\n  }], function () {\n    return [];\n  }, {\n    viewDateChange: [{\n      type: Output\n    }],\n\n    /**\n     * @hidden\n     * @return {?}\n     */\n    onClick: [{\n      type: HostListener,\n      args: ['click']\n    }],\n    viewDate: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * This will use the angular date pipe to do all date formatting. It is the default date formatter used by the calendar.\n */\n\n\nvar CalendarAngularDateFormatter = /*#__PURE__*/function () {\n  function CalendarAngularDateFormatter() {\n    _classCallCheck(this, CalendarAngularDateFormatter);\n  }\n\n  _createClass(CalendarAngularDateFormatter, [{\n    key: \"monthViewColumnHeader\",\n    value:\n    /**\n     * The month view header week day labels\n     * @param {?} __0\n     * @return {?}\n     */\n    function monthViewColumnHeader(_ref) {\n      var date = _ref.date,\n          locale = _ref.locale;\n      return new DatePipe(locale).transform(date, 'EEEE', null, locale);\n    }\n    /**\n     * The month view cell day number\n     * @param {?} __0\n     * @return {?}\n     */\n\n  }, {\n    key: \"monthViewDayNumber\",\n    value: function monthViewDayNumber(_ref2) {\n      var date = _ref2.date,\n          locale = _ref2.locale;\n      return new DatePipe(locale).transform(date, 'd', null, locale);\n    }\n    /**\n     * The month view title\n     * @param {?} __0\n     * @return {?}\n     */\n\n  }, {\n    key: \"monthViewTitle\",\n    value: function monthViewTitle(_ref3) {\n      var date = _ref3.date,\n          locale = _ref3.locale;\n      return new DatePipe(locale).transform(date, 'MMMM y', null, locale);\n    }\n    /**\n     * The week view header week day labels\n     * @param {?} __0\n     * @return {?}\n     */\n\n  }, {\n    key: \"weekViewColumnHeader\",\n    value: function weekViewColumnHeader(_ref4) {\n      var date = _ref4.date,\n          locale = _ref4.locale;\n      return new DatePipe(locale).transform(date, 'EEEE', null, locale);\n    }\n    /**\n     * The week view sub header day and month labels\n     * @param {?} __0\n     * @return {?}\n     */\n\n  }, {\n    key: \"weekViewColumnSubHeader\",\n    value: function weekViewColumnSubHeader(_ref5) {\n      var date = _ref5.date,\n          locale = _ref5.locale;\n      return new DatePipe(locale).transform(date, 'MMM d', null, locale);\n    }\n    /**\n     * The week view title\n     * @param {?} __0\n     * @return {?}\n     */\n\n  }, {\n    key: \"weekViewTitle\",\n    value: function weekViewTitle(_ref6) {\n      var date = _ref6.date,\n          locale = _ref6.locale;\n      var\n      /** @type {?} */\n      year = new DatePipe(locale).transform(date, 'y', null, locale);\n      var\n      /** @type {?} */\n      weekNumber = getISOWeek(date);\n      return \"Week \".concat(weekNumber, \" of \").concat(year);\n    }\n    /**\n     * The time formatting down the left hand side of the day view\n     * @param {?} __0\n     * @return {?}\n     */\n\n  }, {\n    key: \"dayViewHour\",\n    value: function dayViewHour(_ref7) {\n      var date = _ref7.date,\n          locale = _ref7.locale;\n      return new DatePipe(locale).transform(date, 'h a', null, locale);\n    }\n    /**\n     * The day view title\n     * @param {?} __0\n     * @return {?}\n     */\n\n  }, {\n    key: \"dayViewTitle\",\n    value: function dayViewTitle(_ref8) {\n      var date = _ref8.date,\n          locale = _ref8.locale;\n      return new DatePipe(locale).transform(date, 'EEEE, MMMM d, y', null, locale);\n    }\n  }]);\n\n  return CalendarAngularDateFormatter;\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * This class is responsible for all formatting of dates. There are 3 implementations available, the `CalendarAngularDateFormatter` (default) which uses the angular date pipe to format dates, the `CalendarNativeDateFormatter` which will use the <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to format dates, or there is the `CalendarMomentDateFormatter` which uses <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a>.\n *\n * If you wish, you may override any of the defaults via angulars DI. For example:\n *\n * ```typescript\n * import { CalendarDateFormatter, DateFormatterParams } from 'angular-calendar';\n * import { DatePipe } from '\\@angular/common';\n *\n * class CustomDateFormatter extends CalendarDateFormatter {\n *\n *   public monthViewColumnHeader({date, locale}: DateFormatterParams): string {\n *     return new DatePipe(locale).transform(date, 'EEE', locale); // use short week days\n *   }\n *\n * }\n *\n * // in your component that uses the calendar\n * providers: [{\n *   provide: CalendarDateFormatter,\n *   useClass: CustomDateFormatter\n * }]\n * ```\n */\n\n\nvar CalendarDateFormatter = /*#__PURE__*/function (_CalendarAngularDateF) {\n  _inherits(CalendarDateFormatter, _CalendarAngularDateF);\n\n  var _super = _createSuper(CalendarDateFormatter);\n\n  function CalendarDateFormatter() {\n    _classCallCheck(this, CalendarDateFormatter);\n\n    return _super.apply(this, arguments);\n  }\n\n  return CalendarDateFormatter;\n}(CalendarAngularDateFormatter);\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * This pipe is primarily for rendering the current view title. Example usage:\n * ```typescript\n * // where `viewDate` is a `Date` and view is `'month' | 'week' | 'day'`\n * {{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}\n * ```\n */\n\n\nvar CalendarDatePipe = /*#__PURE__*/function () {\n  /**\n   * @param {?} dateFormatter\n   * @param {?} locale\n   */\n  function CalendarDatePipe(dateFormatter, locale) {\n    _classCallCheck(this, CalendarDatePipe);\n\n    this.dateFormatter = dateFormatter;\n    this.locale = locale;\n  }\n  /**\n   * @param {?} date\n   * @param {?} method\n   * @param {?=} locale\n   * @return {?}\n   */\n\n\n  _createClass(CalendarDatePipe, [{\n    key: \"transform\",\n    value: function transform(date, method) {\n      var locale = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.locale;\n      return this.dateFormatter[method]({\n        date: date,\n        locale: locale\n      });\n    }\n  }]);\n\n  return CalendarDatePipe;\n}();\n\nCalendarDatePipe.ɵfac = function CalendarDatePipe_Factory(t) {\n  return new (t || CalendarDatePipe)(ɵngcc0.ɵɵdirectiveInject(CalendarDateFormatter), ɵngcc0.ɵɵdirectiveInject(LOCALE_ID));\n};\n\nCalendarDatePipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({\n  name: \"calendarDate\",\n  type: CalendarDatePipe,\n  pure: true\n});\n/** @nocollapse */\n\nCalendarDatePipe.ctorParameters = function () {\n  return [{\n    type: CalendarDateFormatter\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [LOCALE_ID]\n    }]\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarDatePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'calendarDate'\n    }]\n  }], function () {\n    return [{\n      type: CalendarDateFormatter\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * This class is responsible for displaying all event titles within the calendar. You may override any of its methods via angulars DI to suit your requirements. For example:\n *\n * ```typescript\n * import { CalendarEventTitleFormatter, CalendarEvent } from 'angular-calendar';\n *\n * class CustomEventTitleFormatter extends CalendarEventTitleFormatter {\n *\n *   month(event: CalendarEvent): string {\n *     return `Custom prefix: ${event.title}`;\n *   }\n *\n * }\n *\n * // in your component\n * providers: [{\n *  provide: CalendarEventTitleFormatter,\n *  useClass: CustomEventTitleFormatter\n * }]\n * ```\n */\n\n\nvar CalendarEventTitleFormatter = /*#__PURE__*/function () {\n  function CalendarEventTitleFormatter() {\n    _classCallCheck(this, CalendarEventTitleFormatter);\n  }\n\n  _createClass(CalendarEventTitleFormatter, [{\n    key: \"month\",\n    value:\n    /**\n     * The month view event title.\n     * @param {?} event\n     * @return {?}\n     */\n    function month(event) {\n      return event.title;\n    }\n    /**\n     * The month view event tooltip. Return a falsey value from this to disable the tooltip.\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"monthTooltip\",\n    value: function monthTooltip(event) {\n      return event.title;\n    }\n    /**\n     * The week view event title.\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"week\",\n    value: function week(event) {\n      return event.title;\n    }\n    /**\n     * The week view event tooltip. Return a falsey value from this to disable the tooltip.\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"weekTooltip\",\n    value: function weekTooltip(event) {\n      return event.title;\n    }\n    /**\n     * The day view event title.\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"day\",\n    value: function day(event) {\n      return event.title;\n    }\n    /**\n     * The day view event tooltip. Return a falsey value from this to disable the tooltip.\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"dayTooltip\",\n    value: function dayTooltip(event) {\n      return event.title;\n    }\n  }]);\n\n  return CalendarEventTitleFormatter;\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar CalendarEventTitlePipe = /*#__PURE__*/function () {\n  /**\n   * @param {?} calendarEventTitle\n   */\n  function CalendarEventTitlePipe(calendarEventTitle) {\n    _classCallCheck(this, CalendarEventTitlePipe);\n\n    this.calendarEventTitle = calendarEventTitle;\n  }\n  /**\n   * @param {?} title\n   * @param {?} titleType\n   * @param {?} event\n   * @return {?}\n   */\n\n\n  _createClass(CalendarEventTitlePipe, [{\n    key: \"transform\",\n    value: function transform(title, titleType, event) {\n      return this.calendarEventTitle[titleType](event);\n    }\n  }]);\n\n  return CalendarEventTitlePipe;\n}();\n\nCalendarEventTitlePipe.ɵfac = function CalendarEventTitlePipe_Factory(t) {\n  return new (t || CalendarEventTitlePipe)(ɵngcc0.ɵɵdirectiveInject(CalendarEventTitleFormatter));\n};\n\nCalendarEventTitlePipe.ɵpipe = ɵngcc0.ɵɵdefinePipe({\n  name: \"calendarEventTitle\",\n  type: CalendarEventTitlePipe,\n  pure: true\n});\n/** @nocollapse */\n\nCalendarEventTitlePipe.ctorParameters = function () {\n  return [{\n    type: CalendarEventTitleFormatter\n  }];\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarEventTitlePipe, [{\n    type: Pipe,\n    args: [{\n      name: 'calendarEventTitle'\n    }]\n  }], function () {\n    return [{\n      type: CalendarEventTitleFormatter\n    }];\n  }, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar ClickDirective = /*#__PURE__*/function () {\n  /**\n   * @param {?} renderer\n   * @param {?} elm\n   */\n  function ClickDirective(renderer, elm) {\n    _classCallCheck(this, ClickDirective);\n\n    this.renderer = renderer;\n    this.elm = elm;\n    this.click = new EventEmitter();\n  }\n  /**\n   * @return {?}\n   */\n\n\n  _createClass(ClickDirective, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this2 = this;\n\n      var\n      /** @type {?} */\n      eventName = typeof window !== 'undefined' && typeof window['Hammer'] !== 'undefined' ? 'tap' : 'click';\n      this.removeListener = this.renderer.listen(this.elm.nativeElement, eventName, function (event) {\n        _this2.click.next(event);\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      this.removeListener();\n    }\n  }]);\n\n  return ClickDirective;\n}();\n\nClickDirective.ɵfac = function ClickDirective_Factory(t) {\n  return new (t || ClickDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef));\n};\n\nClickDirective.ɵdir = ɵngcc0.ɵɵdefineDirective({\n  type: ClickDirective,\n  selectors: [[\"\", \"mwlClick\", \"\"]],\n  outputs: {\n    click: \"mwlClick\"\n  }\n});\n/** @nocollapse */\n\nClickDirective.ctorParameters = function () {\n  return [{\n    type: Renderer2\n  }, {\n    type: ElementRef\n  }];\n};\n\nClickDirective.propDecorators = {\n  \"click\": [{\n    type: Output,\n    args: ['mwlClick']\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(ClickDirective, [{\n    type: Directive,\n    args: [{\n      selector: '[mwlClick]'\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.Renderer2\n    }, {\n      type: ɵngcc0.ElementRef\n    }];\n  }, {\n    click: [{\n      type: Output,\n      args: ['mwlClick']\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar CalendarUtils = /*#__PURE__*/function () {\n  function CalendarUtils() {\n    _classCallCheck(this, CalendarUtils);\n  }\n\n  _createClass(CalendarUtils, [{\n    key: \"getMonthView\",\n    value:\n    /**\n     * @param {?} args\n     * @return {?}\n     */\n    function getMonthView(args) {\n      return _getMonthView(args);\n    }\n    /**\n     * @param {?} args\n     * @return {?}\n     */\n\n  }, {\n    key: \"getWeekViewHeader\",\n    value: function getWeekViewHeader(args) {\n      return _getWeekViewHeader(args);\n    }\n    /**\n     * @param {?} args\n     * @return {?}\n     */\n\n  }, {\n    key: \"getWeekView\",\n    value: function getWeekView(args) {\n      return _getWeekView(args);\n    }\n    /**\n     * @param {?} args\n     * @return {?}\n     */\n\n  }, {\n    key: \"getDayView\",\n    value: function getDayView(args) {\n      return _getDayView(args);\n    }\n    /**\n     * @param {?} args\n     * @return {?}\n     */\n\n  }, {\n    key: \"getDayViewHourGrid\",\n    value: function getDayViewHourGrid(args) {\n      return _getDayViewHourGrid(args);\n    }\n  }]);\n\n  return CalendarUtils;\n}();\n\nCalendarUtils.ɵfac = function CalendarUtils_Factory(t) {\n  return new (t || CalendarUtils)();\n};\n\nCalendarUtils.ɵprov = ɵngcc0.ɵɵdefineInjectable({\n  token: CalendarUtils,\n  factory: CalendarUtils.ɵfac\n});\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarUtils, [{\n    type: Injectable\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar\n/** @type {?} */\nMOMENT = new InjectionToken('Moment');\n/**\n * This will use <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a> to do all date formatting. To use this class:\n *\n * ```typescript\n * import { CalendarDateFormatter, CalendarMomentDateFormatter, MOMENT } from 'angular-calendar';\n * import moment from 'moment';\n *\n * // in your component\n * provide: [{\n *   provide: MOMENT, useValue: moment\n * }, {\n *   provide: CalendarDateFormatter, useClass: CalendarMomentDateFormatter\n * }]\n *\n * ```\n */\n\nvar CalendarMomentDateFormatter = /*#__PURE__*/function () {\n  /**\n   * @hidden\n   * @param {?} moment\n   */\n  function CalendarMomentDateFormatter(moment) {\n    _classCallCheck(this, CalendarMomentDateFormatter);\n\n    this.moment = moment;\n  }\n  /**\n   * The month view header week day labels\n   * @param {?} __0\n   * @return {?}\n   */\n\n\n  _createClass(CalendarMomentDateFormatter, [{\n    key: \"monthViewColumnHeader\",\n    value: function monthViewColumnHeader(_ref9) {\n      var date = _ref9.date,\n          locale = _ref9.locale;\n      return this.moment(date).locale(locale).format('dddd');\n    }\n    /**\n     * The month view cell day number\n     * @param {?} __0\n     * @return {?}\n     */\n\n  }, {\n    key: \"monthViewDayNumber\",\n    value: function monthViewDayNumber(_ref10) {\n      var date = _ref10.date,\n          locale = _ref10.locale;\n      return this.moment(date).locale(locale).format('D');\n    }\n    /**\n     * The month view title\n     * @param {?} __0\n     * @return {?}\n     */\n\n  }, {\n    key: \"monthViewTitle\",\n    value: function monthViewTitle(_ref11) {\n      var date = _ref11.date,\n          locale = _ref11.locale;\n      return this.moment(date).locale(locale).format('MMMM YYYY');\n    }\n    /**\n     * The week view header week day labels\n     * @param {?} __0\n     * @return {?}\n     */\n\n  }, {\n    key: \"weekViewColumnHeader\",\n    value: function weekViewColumnHeader(_ref12) {\n      var date = _ref12.date,\n          locale = _ref12.locale;\n      return this.moment(date).locale(locale).format('dddd');\n    }\n    /**\n     * The week view sub header day and month labels\n     * @param {?} __0\n     * @return {?}\n     */\n\n  }, {\n    key: \"weekViewColumnSubHeader\",\n    value: function weekViewColumnSubHeader(_ref13) {\n      var date = _ref13.date,\n          locale = _ref13.locale;\n      return this.moment(date).locale(locale).format('D MMM');\n    }\n    /**\n     * The week view title\n     * @param {?} __0\n     * @return {?}\n     */\n\n  }, {\n    key: \"weekViewTitle\",\n    value: function weekViewTitle(_ref14) {\n      var date = _ref14.date,\n          locale = _ref14.locale;\n      return this.moment(date).locale(locale).format('[Week] W [of] YYYY');\n    }\n    /**\n     * The time formatting down the left hand side of the day view\n     * @param {?} __0\n     * @return {?}\n     */\n\n  }, {\n    key: \"dayViewHour\",\n    value: function dayViewHour(_ref15) {\n      var date = _ref15.date,\n          locale = _ref15.locale;\n      return this.moment(date).locale(locale).format('ha');\n    }\n    /**\n     * The day view title\n     * @param {?} __0\n     * @return {?}\n     */\n\n  }, {\n    key: \"dayViewTitle\",\n    value: function dayViewTitle(_ref16) {\n      var date = _ref16.date,\n          locale = _ref16.locale;\n      return this.moment(date).locale(locale).format('dddd, D MMMM, YYYY');\n    }\n  }]);\n\n  return CalendarMomentDateFormatter;\n}();\n/** @nocollapse */\n\n\nCalendarMomentDateFormatter.ctorParameters = function () {\n  return [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [MOMENT]\n    }]\n  }];\n};\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * This will use <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to do all date formatting.\n *\n * You will need to include a <a href=\"https://github.com/andyearnshaw/Intl.js/\">polyfill</a> for older browsers.\n */\n\n\nvar CalendarNativeDateFormatter = /*#__PURE__*/function () {\n  function CalendarNativeDateFormatter() {\n    _classCallCheck(this, CalendarNativeDateFormatter);\n  }\n\n  _createClass(CalendarNativeDateFormatter, [{\n    key: \"monthViewColumnHeader\",\n    value:\n    /**\n     * The month view header week day labels\n     * @param {?} __0\n     * @return {?}\n     */\n    function monthViewColumnHeader(_ref17) {\n      var date = _ref17.date,\n          locale = _ref17.locale;\n      return new Intl.DateTimeFormat(locale, {\n        weekday: 'long'\n      }).format(date);\n    }\n    /**\n     * The month view cell day number\n     * @param {?} __0\n     * @return {?}\n     */\n\n  }, {\n    key: \"monthViewDayNumber\",\n    value: function monthViewDayNumber(_ref18) {\n      var date = _ref18.date,\n          locale = _ref18.locale;\n      return new Intl.DateTimeFormat(locale, {\n        day: 'numeric'\n      }).format(date);\n    }\n    /**\n     * The month view title\n     * @param {?} __0\n     * @return {?}\n     */\n\n  }, {\n    key: \"monthViewTitle\",\n    value: function monthViewTitle(_ref19) {\n      var date = _ref19.date,\n          locale = _ref19.locale;\n      return new Intl.DateTimeFormat(locale, {\n        year: 'numeric',\n        month: 'long'\n      }).format(date);\n    }\n    /**\n     * The week view header week day labels\n     * @param {?} __0\n     * @return {?}\n     */\n\n  }, {\n    key: \"weekViewColumnHeader\",\n    value: function weekViewColumnHeader(_ref20) {\n      var date = _ref20.date,\n          locale = _ref20.locale;\n      return new Intl.DateTimeFormat(locale, {\n        weekday: 'long'\n      }).format(date);\n    }\n    /**\n     * The week view sub header day and month labels\n     * @param {?} __0\n     * @return {?}\n     */\n\n  }, {\n    key: \"weekViewColumnSubHeader\",\n    value: function weekViewColumnSubHeader(_ref21) {\n      var date = _ref21.date,\n          locale = _ref21.locale;\n      return new Intl.DateTimeFormat(locale, {\n        day: 'numeric',\n        month: 'short'\n      }).format(date);\n    }\n    /**\n     * The week view title\n     * @param {?} __0\n     * @return {?}\n     */\n\n  }, {\n    key: \"weekViewTitle\",\n    value: function weekViewTitle(_ref22) {\n      var date = _ref22.date,\n          locale = _ref22.locale;\n      var\n      /** @type {?} */\n      year = new Intl.DateTimeFormat(locale, {\n        year: 'numeric'\n      }).format(date);\n      var\n      /** @type {?} */\n      weekNumber = getISOWeek(date);\n      return \"Week \".concat(weekNumber, \" of \").concat(year);\n    }\n    /**\n     * The time formatting down the left hand side of the day view\n     * @param {?} __0\n     * @return {?}\n     */\n\n  }, {\n    key: \"dayViewHour\",\n    value: function dayViewHour(_ref23) {\n      var date = _ref23.date,\n          locale = _ref23.locale;\n      return new Intl.DateTimeFormat(locale, {\n        hour: 'numeric'\n      }).format(date);\n    }\n    /**\n     * The day view title\n     * @param {?} __0\n     * @return {?}\n     */\n\n  }, {\n    key: \"dayViewTitle\",\n    value: function dayViewTitle(_ref24) {\n      var date = _ref24.date,\n          locale = _ref24.locale;\n      return new Intl.DateTimeFormat(locale, {\n        day: 'numeric',\n        month: 'long',\n        year: 'numeric',\n        weekday: 'long'\n      }).format(date);\n    }\n  }]);\n\n  return CalendarNativeDateFormatter;\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Import this module to if you're just using a singular view and want to save on bundle size. Example usage:\n *\n * ```typescript\n * import { CalendarCommonModule } from 'angular-calendar/modules/common';\n * import { CalendarMonthModule } from 'angular-calendar/modules/month';\n *\n * \\@NgModule({\n *   imports: [\n *     CalendarCommonModule.forRoot(),\n *     CalendarMonthModule\n *   ]\n * })\n * class MyModule {}\n * ```\n *\n */\n\n\nvar CalendarCommonModule = /*#__PURE__*/function () {\n  function CalendarCommonModule() {\n    _classCallCheck(this, CalendarCommonModule);\n  }\n\n  _createClass(CalendarCommonModule, null, [{\n    key: \"forRoot\",\n    value:\n    /**\n     * @param {?=} config\n     * @return {?}\n     */\n    function forRoot() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return {\n        ngModule: CalendarCommonModule,\n        providers: [DraggableHelper, config.eventTitleFormatter || CalendarEventTitleFormatter, config.dateFormatter || CalendarDateFormatter, config.utils || CalendarUtils]\n      };\n    }\n  }]);\n\n  return CalendarCommonModule;\n}();\n\nCalendarCommonModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: CalendarCommonModule\n});\nCalendarCommonModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function CalendarCommonModule_Factory(t) {\n    return new (t || CalendarCommonModule)();\n  },\n  imports: [[CommonModule]]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CalendarCommonModule, {\n    declarations: function declarations() {\n      return [CalendarEventActionsComponent, CalendarEventTitleComponent, CalendarTooltipWindowComponent, CalendarTooltipDirective, CalendarPreviousViewDirective, CalendarNextViewDirective, CalendarTodayDirective, CalendarDatePipe, CalendarEventTitlePipe, ClickDirective];\n    },\n    imports: function imports() {\n      return [CommonModule];\n    },\n    exports: function exports() {\n      return [CalendarEventActionsComponent, CalendarEventTitleComponent, CalendarTooltipWindowComponent, CalendarTooltipDirective, CalendarPreviousViewDirective, CalendarNextViewDirective, CalendarTodayDirective, CalendarDatePipe, CalendarEventTitlePipe, ClickDirective];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarCommonModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [CalendarEventActionsComponent, CalendarEventTitleComponent, CalendarTooltipWindowComponent, CalendarTooltipDirective, CalendarPreviousViewDirective, CalendarNextViewDirective, CalendarTodayDirective, CalendarDatePipe, CalendarEventTitlePipe, ClickDirective],\n      imports: [CommonModule],\n      exports: [CalendarEventActionsComponent, CalendarEventTitleComponent, CalendarTooltipWindowComponent, CalendarTooltipDirective, CalendarPreviousViewDirective, CalendarNextViewDirective, CalendarTodayDirective, CalendarDatePipe, CalendarEventTitlePipe, ClickDirective],\n      entryComponents: [CalendarTooltipWindowComponent]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Shows all events on a given month. Example usage:\n *\n * ```typescript\n * <mwl-calendar-month-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-month-view>\n * ```\n */\n\n\nvar CalendarMonthViewComponent = /*#__PURE__*/function () {\n  /**\n   * @hidden\n   * @param {?} cdr\n   * @param {?} utils\n   * @param {?} locale\n   */\n  function CalendarMonthViewComponent(cdr, utils, locale) {\n    _classCallCheck(this, CalendarMonthViewComponent);\n\n    this.cdr = cdr;\n    this.utils = utils;\n    /**\n     * An array of events to display on view.\n     * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n     */\n\n    this.events = [];\n    /**\n     * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n     */\n\n    this.excludeDays = [];\n    /**\n     * Whether the events list for the day of the `viewDate` option is visible or not\n     */\n\n    this.activeDayIsOpen = false;\n    /**\n     * The placement of the event tooltip\n     */\n\n    this.tooltipPlacement = 'top';\n    /**\n     * Whether to append tooltips to the body or next to the trigger element\n     */\n\n    this.tooltipAppendToBody = true;\n    /**\n     * An output that will be called before the view is rendered for the current month.\n     * If you add the `cssClass` property to a day in the body it will add that class to the cell element in the template\n     */\n\n    this.beforeViewRender = new EventEmitter();\n    /**\n     * Called when the day cell is clicked\n     */\n\n    this.dayClicked = new EventEmitter();\n    /**\n     * Called when the event title is clicked\n     */\n\n    this.eventClicked = new EventEmitter();\n    /**\n     * Called when an event is dragged and dropped\n     */\n\n    this.eventTimesChanged = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.trackByIndex = trackByIndex;\n    /**\n     * @hidden\n     */\n\n    this.trackByDate = function (index, day) {\n      return day.date.toISOString();\n    };\n\n    this.locale = locale;\n  }\n  /**\n   * @hidden\n   * @return {?}\n   */\n\n\n  _createClass(CalendarMonthViewComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this3 = this;\n\n      if (this.refresh) {\n        this.refreshSubscription = this.refresh.subscribe(function () {\n          _this3.refreshAll();\n\n          _this3.cdr.markForCheck();\n        });\n      }\n    }\n    /**\n     * @hidden\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.viewDate || changes.excludeDays || changes.weekendDays) {\n        this.refreshHeader();\n      }\n\n      if (changes.events) {\n        validateEvents$1(this.events);\n      }\n\n      if (changes.viewDate || changes.events || changes.excludeDays || changes.weekendDays) {\n        this.refreshBody();\n      }\n\n      if (changes.activeDayIsOpen || changes.viewDate || changes.events || changes.excludeDays) {\n        this.checkActiveDayIsOpen();\n      }\n    }\n    /**\n     * @hidden\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.refreshSubscription) {\n        this.refreshSubscription.unsubscribe();\n      }\n    }\n    /**\n     * @hidden\n     * @param {?} event\n     * @param {?} isHighlighted\n     * @return {?}\n     */\n\n  }, {\n    key: \"toggleDayHighlight\",\n    value: function toggleDayHighlight(event, isHighlighted) {\n      this.view.days.forEach(function (day) {\n        if (isHighlighted && day.events.indexOf(event) > -1) {\n          day.backgroundColor = event.color && event.color.secondary || '#D1E8FF';\n        } else {\n          delete day.backgroundColor;\n        }\n      });\n    }\n    /**\n     * @hidden\n     * @param {?} day\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"eventDropped\",\n    value: function eventDropped(day, event) {\n      var\n      /** @type {?} */\n      year = getYear(day.date);\n      var\n      /** @type {?} */\n      month = getMonth(day.date);\n      var\n      /** @type {?} */\n      date = getDate(day.date);\n      var\n      /** @type {?} */\n      newStart = setDate(setMonth(setYear(event.start, year), month), date);\n      var\n      /** @type {?} */\n      newEnd;\n\n      if (event.end) {\n        var\n        /** @type {?} */\n        secondsDiff = differenceInSeconds(newStart, event.start);\n        newEnd = addSeconds(event.end, secondsDiff);\n      }\n\n      this.eventTimesChanged.emit({\n        event: event,\n        newStart: newStart,\n        newEnd: newEnd,\n        day: day\n      });\n    }\n    /**\n     * @hidden\n     * @param {?} clickEvent\n     * @param {?} day\n     * @return {?}\n     */\n\n  }, {\n    key: \"handleDayClick\",\n    value: function handleDayClick(clickEvent, day) {\n      // when using hammerjs, stopPropagation doesn't work. See https://github.com/mattlewis92/angular-calendar/issues/318\n      if (!clickEvent.target.classList.contains('cal-event')) {\n        this.dayClicked.emit({\n          day: day\n        });\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"refreshHeader\",\n    value: function refreshHeader() {\n      this.columnHeaders = this.utils.getWeekViewHeader({\n        viewDate: this.viewDate,\n        weekStartsOn: this.weekStartsOn,\n        excluded: this.excludeDays,\n        weekendDays: this.weekendDays\n      });\n      this.emitBeforeViewRender();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"refreshBody\",\n    value: function refreshBody() {\n      this.view = this.utils.getMonthView({\n        events: this.events,\n        viewDate: this.viewDate,\n        weekStartsOn: this.weekStartsOn,\n        excluded: this.excludeDays,\n        weekendDays: this.weekendDays\n      });\n      this.emitBeforeViewRender();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"checkActiveDayIsOpen\",\n    value: function checkActiveDayIsOpen() {\n      var _this4 = this;\n\n      if (this.activeDayIsOpen === true) {\n        this.openDay = this.view.days.find(function (day) {\n          return isSameDay(day.date, _this4.viewDate);\n        });\n        var\n        /** @type {?} */\n        index = this.view.days.indexOf(this.openDay);\n        this.openRowIndex = Math.floor(index / this.view.totalDaysVisibleInWeek) * this.view.totalDaysVisibleInWeek;\n      } else {\n        this.openRowIndex = null;\n        this.openDay = null;\n      }\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"refreshAll\",\n    value: function refreshAll() {\n      this.columnHeaders = null;\n      this.view = null;\n      this.refreshHeader();\n      this.refreshBody();\n      this.checkActiveDayIsOpen();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"emitBeforeViewRender\",\n    value: function emitBeforeViewRender() {\n      if (this.columnHeaders && this.view) {\n        this.beforeViewRender.emit({\n          header: this.columnHeaders,\n          body: this.view.days,\n          period: this.view.period\n        });\n      }\n    }\n  }]);\n\n  return CalendarMonthViewComponent;\n}();\n\nCalendarMonthViewComponent.ɵfac = function CalendarMonthViewComponent_Factory(t) {\n  return new (t || CalendarMonthViewComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(CalendarUtils), ɵngcc0.ɵɵdirectiveInject(LOCALE_ID));\n};\n\nCalendarMonthViewComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CalendarMonthViewComponent,\n  selectors: [[\"mwl-calendar-month-view\"]],\n  inputs: {\n    events: \"events\",\n    excludeDays: \"excludeDays\",\n    activeDayIsOpen: \"activeDayIsOpen\",\n    tooltipPlacement: \"tooltipPlacement\",\n    tooltipAppendToBody: \"tooltipAppendToBody\",\n    locale: \"locale\",\n    viewDate: \"viewDate\",\n    refresh: \"refresh\",\n    tooltipTemplate: \"tooltipTemplate\",\n    weekStartsOn: \"weekStartsOn\",\n    headerTemplate: \"headerTemplate\",\n    cellTemplate: \"cellTemplate\",\n    openDayEventsTemplate: \"openDayEventsTemplate\",\n    eventTitleTemplate: \"eventTitleTemplate\",\n    weekendDays: \"weekendDays\"\n  },\n  outputs: {\n    beforeViewRender: \"beforeViewRender\",\n    dayClicked: \"dayClicked\",\n    eventClicked: \"eventClicked\",\n    eventTimesChanged: \"eventTimesChanged\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 4,\n  vars: 4,\n  consts: [[1, \"cal-month-view\"], [3, \"days\", \"locale\", \"customTemplate\"], [1, \"cal-days\"], [4, \"ngFor\", \"ngForTrackByIndex\", \"ngForOf\"], [1, \"cal-cell-row\"], [\"mwlDroppable\", \"\", 3, \"cal-drag-over\", \"ngClass\", \"day\", \"openDay\", \"locale\", \"tooltipPlacement\", \"tooltipAppendToBody\", \"tooltipTemplate\", \"customTemplate\", \"click\", \"highlightDay\", \"unhighlightDay\", \"dragEnter\", \"dragLeave\", \"drop\", \"eventClicked\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"isOpen\", \"events\", \"customTemplate\", \"eventTitleTemplate\", \"eventClicked\"], [\"mwlDroppable\", \"\", 3, \"ngClass\", \"day\", \"openDay\", \"locale\", \"tooltipPlacement\", \"tooltipAppendToBody\", \"tooltipTemplate\", \"customTemplate\", \"click\", \"highlightDay\", \"unhighlightDay\", \"dragEnter\", \"dragLeave\", \"drop\", \"eventClicked\"]],\n  template: function CalendarMonthViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n      ɵngcc0.ɵɵelement(1, \"mwl-calendar-month-view-header\", 1);\n      ɵngcc0.ɵɵelementStart(2, \"div\", 2);\n      ɵngcc0.ɵɵtemplate(3, CalendarMonthViewComponent_div_3_Template, 5, 10, \"div\", 3);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"days\", ctx.columnHeaders)(\"locale\", ctx.locale)(\"customTemplate\", ctx.headerTemplate);\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.view.rowOffsets);\n    }\n  },\n  directives: function directives() {\n    return [CalendarMonthViewHeaderComponent, ɵngcc1.NgForOf, CalendarOpenDayEventsComponent, CalendarMonthCellComponent, ɵngcc2.ɵb, ɵngcc1.NgClass];\n  },\n  pipes: function pipes() {\n    return [ɵngcc1.SlicePipe];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nCalendarMonthViewComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: CalendarUtils\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [LOCALE_ID]\n    }]\n  }];\n};\n\nCalendarMonthViewComponent.propDecorators = {\n  \"viewDate\": [{\n    type: Input\n  }],\n  \"events\": [{\n    type: Input\n  }],\n  \"excludeDays\": [{\n    type: Input\n  }],\n  \"activeDayIsOpen\": [{\n    type: Input\n  }],\n  \"refresh\": [{\n    type: Input\n  }],\n  \"locale\": [{\n    type: Input\n  }],\n  \"tooltipPlacement\": [{\n    type: Input\n  }],\n  \"tooltipTemplate\": [{\n    type: Input\n  }],\n  \"tooltipAppendToBody\": [{\n    type: Input\n  }],\n  \"weekStartsOn\": [{\n    type: Input\n  }],\n  \"headerTemplate\": [{\n    type: Input\n  }],\n  \"cellTemplate\": [{\n    type: Input\n  }],\n  \"openDayEventsTemplate\": [{\n    type: Input\n  }],\n  \"eventTitleTemplate\": [{\n    type: Input\n  }],\n  \"weekendDays\": [{\n    type: Input\n  }],\n  \"beforeViewRender\": [{\n    type: Output\n  }],\n  \"dayClicked\": [{\n    type: Output\n  }],\n  \"eventClicked\": [{\n    type: Output\n  }],\n  \"eventTimesChanged\": [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarMonthViewComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mwl-calendar-month-view',\n      template: \"\\n    <div class=\\\"cal-month-view\\\">\\n      <mwl-calendar-month-view-header\\n        [days]=\\\"columnHeaders\\\"\\n        [locale]=\\\"locale\\\"\\n        [customTemplate]=\\\"headerTemplate\\\">\\n      </mwl-calendar-month-view-header>\\n      <div class=\\\"cal-days\\\">\\n        <div *ngFor=\\\"let rowIndex of view.rowOffsets; trackByIndex\\\">\\n          <div class=\\\"cal-cell-row\\\">\\n            <mwl-calendar-month-cell\\n              *ngFor=\\\"let day of (view.days | slice : rowIndex : rowIndex + (view.totalDaysVisibleInWeek)); trackBy:trackByDate\\\"\\n              [class.cal-drag-over]=\\\"day.dragOver\\\"\\n              [ngClass]=\\\"day?.cssClass\\\"\\n              [day]=\\\"day\\\"\\n              [openDay]=\\\"openDay\\\"\\n              [locale]=\\\"locale\\\"\\n              [tooltipPlacement]=\\\"tooltipPlacement\\\"\\n              [tooltipAppendToBody]=\\\"tooltipAppendToBody\\\"\\n              [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n              [customTemplate]=\\\"cellTemplate\\\"\\n              (click)=\\\"handleDayClick($event, day)\\\"\\n              (highlightDay)=\\\"toggleDayHighlight($event.event, true)\\\"\\n              (unhighlightDay)=\\\"toggleDayHighlight($event.event, false)\\\"\\n              mwlDroppable\\n              (dragEnter)=\\\"day.dragOver = true\\\"\\n              (dragLeave)=\\\"day.dragOver = false\\\"\\n              (drop)=\\\"day.dragOver = false; eventDropped(day, $event.dropData.event)\\\"\\n              (eventClicked)=\\\"eventClicked.emit({event: $event.event})\\\">\\n            </mwl-calendar-month-cell>\\n          </div>\\n          <mwl-calendar-open-day-events\\n            [isOpen]=\\\"openRowIndex === rowIndex\\\"\\n            [events]=\\\"openDay?.events\\\"\\n            [customTemplate]=\\\"openDayEventsTemplate\\\"\\n            [eventTitleTemplate]=\\\"eventTitleTemplate\\\"\\n            (eventClicked)=\\\"eventClicked.emit({event: $event.event})\\\">\\n          </mwl-calendar-open-day-events>\\n        </div>\\n      </div>\\n    </div>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: CalendarUtils\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, {\n    events: [{\n      type: Input\n    }],\n    excludeDays: [{\n      type: Input\n    }],\n    activeDayIsOpen: [{\n      type: Input\n    }],\n    tooltipPlacement: [{\n      type: Input\n    }],\n    tooltipAppendToBody: [{\n      type: Input\n    }],\n    beforeViewRender: [{\n      type: Output\n    }],\n    dayClicked: [{\n      type: Output\n    }],\n    eventClicked: [{\n      type: Output\n    }],\n    eventTimesChanged: [{\n      type: Output\n    }],\n    locale: [{\n      type: Input\n    }],\n    viewDate: [{\n      type: Input\n    }],\n    refresh: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    weekStartsOn: [{\n      type: Input\n    }],\n    headerTemplate: [{\n      type: Input\n    }],\n    cellTemplate: [{\n      type: Input\n    }],\n    openDayEventsTemplate: [{\n      type: Input\n    }],\n    eventTitleTemplate: [{\n      type: Input\n    }],\n    weekendDays: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar CalendarMonthViewHeaderComponent = function CalendarMonthViewHeaderComponent() {\n  _classCallCheck(this, CalendarMonthViewHeaderComponent);\n\n  this.trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\n};\n\nCalendarMonthViewHeaderComponent.ɵfac = function CalendarMonthViewHeaderComponent_Factory(t) {\n  return new (t || CalendarMonthViewHeaderComponent)();\n};\n\nCalendarMonthViewHeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CalendarMonthViewHeaderComponent,\n  selectors: [[\"mwl-calendar-month-view-header\"]],\n  inputs: {\n    days: \"days\",\n    locale: \"locale\",\n    customTemplate: \"customTemplate\"\n  },\n  decls: 3,\n  vars: 5,\n  consts: [[\"defaultTemplate\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"cal-cell-row\", \"cal-header\"], [\"class\", \"cal-cell\", 3, \"cal-past\", \"cal-today\", \"cal-future\", \"cal-weekend\", \"ngClass\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"cal-cell\", 3, \"ngClass\"]],\n  template: function CalendarMonthViewHeaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, CalendarMonthViewHeaderComponent_ng_template_0_Template, 2, 2, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, CalendarMonthViewHeaderComponent_ng_template_2_Template, 0, 0, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      var _r0 = ɵngcc0.ɵɵreference(1);\n\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.customTemplate || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(2, _c2, ctx.days, ctx.locale));\n    }\n  },\n  directives: [ɵngcc1.NgTemplateOutlet, ɵngcc1.NgForOf, ɵngcc1.NgClass],\n  pipes: [CalendarDatePipe],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nCalendarMonthViewHeaderComponent.propDecorators = {\n  \"days\": [{\n    type: Input\n  }],\n  \"locale\": [{\n    type: Input\n  }],\n  \"customTemplate\": [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarMonthViewHeaderComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mwl-calendar-month-view-header',\n      template: \"\\n    <ng-template\\n      #defaultTemplate\\n      let-days=\\\"days\\\"\\n      let-locale=\\\"locale\\\">\\n      <div class=\\\"cal-cell-row cal-header\\\">\\n        <div\\n          class=\\\"cal-cell\\\"\\n          *ngFor=\\\"let day of days; trackBy:trackByWeekDayHeaderDate\\\"\\n          [class.cal-past]=\\\"day.isPast\\\"\\n          [class.cal-today]=\\\"day.isToday\\\"\\n          [class.cal-future]=\\\"day.isFuture\\\"\\n          [class.cal-weekend]=\\\"day.isWeekend\\\"\\n          [ngClass]=\\\"day.cssClass\\\">\\n          {{ day.date | calendarDate:'monthViewColumnHeader':locale }}\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\n      [ngTemplateOutletContext]=\\\"{days: days, locale: locale}\\\">\\n    </ng-template>\\n  \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    days: [{\n      type: Input\n    }],\n    locale: [{\n      type: Input\n    }],\n    customTemplate: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar CalendarMonthCellComponent = function CalendarMonthCellComponent() {\n  _classCallCheck(this, CalendarMonthCellComponent);\n\n  this.highlightDay = new EventEmitter();\n  this.unhighlightDay = new EventEmitter();\n  this.eventClicked = new EventEmitter();\n  this.trackByEventId = trackByEventId;\n};\n\nCalendarMonthCellComponent.ɵfac = function CalendarMonthCellComponent_Factory(t) {\n  return new (t || CalendarMonthCellComponent)();\n};\n\nCalendarMonthCellComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CalendarMonthCellComponent,\n  selectors: [[\"mwl-calendar-month-cell\"]],\n  hostAttrs: [1, \"cal-cell\", \"cal-day-cell\"],\n  hostVars: 18,\n  hostBindings: function CalendarMonthCellComponent_HostBindings(rf, ctx) {\n    if (rf & 2) {\n      ɵngcc0.ɵɵstyleProp(\"background-color\", ctx.day.backgroundColor);\n      ɵngcc0.ɵɵclassProp(\"cal-past\", ctx.day.isPast)(\"cal-today\", ctx.day.isToday)(\"cal-future\", ctx.day.isFuture)(\"cal-weekend\", ctx.day.isWeekend)(\"cal-in-month\", ctx.day.inMonth)(\"cal-out-month\", !ctx.day.inMonth)(\"cal-has-events\", ctx.day.events.length > 0)(\"cal-open\", ctx.day === ctx.openDay);\n    }\n  },\n  inputs: {\n    day: \"day\",\n    openDay: \"openDay\",\n    locale: \"locale\",\n    tooltipPlacement: \"tooltipPlacement\",\n    tooltipAppendToBody: \"tooltipAppendToBody\",\n    customTemplate: \"customTemplate\",\n    tooltipTemplate: \"tooltipTemplate\"\n  },\n  outputs: {\n    highlightDay: \"highlightDay\",\n    unhighlightDay: \"unhighlightDay\",\n    eventClicked: \"eventClicked\"\n  },\n  decls: 3,\n  vars: 12,\n  consts: [[\"defaultTemplate\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"cal-cell-top\"], [\"class\", \"cal-day-badge\", 4, \"ngIf\"], [1, \"cal-day-number\"], [\"class\", \"cal-events\", 4, \"ngIf\"], [1, \"cal-day-badge\"], [1, \"cal-events\"], [\"class\", \"cal-event\", \"mwlDraggable\", \"\", 3, \"backgroundColor\", \"ngClass\", \"mwlCalendarTooltip\", \"tooltipPlacement\", \"tooltipEvent\", \"tooltipTemplate\", \"tooltipAppendToBody\", \"dropData\", \"dragAxis\", \"mouseenter\", \"mouseleave\", \"mwlClick\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"mwlDraggable\", \"\", 1, \"cal-event\", 3, \"ngClass\", \"mwlCalendarTooltip\", \"tooltipPlacement\", \"tooltipEvent\", \"tooltipTemplate\", \"tooltipAppendToBody\", \"dropData\", \"dragAxis\", \"mouseenter\", \"mouseleave\", \"mwlClick\"]],\n  template: function CalendarMonthCellComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, CalendarMonthCellComponent_ng_template_0_Template, 6, 7, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, CalendarMonthCellComponent_ng_template_2_Template, 0, 0, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      var _r0 = ɵngcc0.ɵɵreference(1);\n\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.customTemplate || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunctionV(2, _c5, [ctx.day, ctx.openDay, ctx.locale, ctx.tooltipPlacement, ctx.highlightDay, ctx.unhighlightDay, ctx.eventClicked, ctx.tooltipTemplate, ctx.tooltipAppendToBody]));\n    }\n  },\n  directives: [ɵngcc1.NgTemplateOutlet, ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc2.ɵa, ɵngcc1.NgClass, CalendarTooltipDirective, ClickDirective],\n  pipes: [CalendarDatePipe, CalendarEventTitlePipe],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nCalendarMonthCellComponent.propDecorators = {\n  \"day\": [{\n    type: Input\n  }],\n  \"openDay\": [{\n    type: Input\n  }],\n  \"locale\": [{\n    type: Input\n  }],\n  \"tooltipPlacement\": [{\n    type: Input\n  }],\n  \"tooltipAppendToBody\": [{\n    type: Input\n  }],\n  \"customTemplate\": [{\n    type: Input\n  }],\n  \"tooltipTemplate\": [{\n    type: Input\n  }],\n  \"highlightDay\": [{\n    type: Output\n  }],\n  \"unhighlightDay\": [{\n    type: Output\n  }],\n  \"eventClicked\": [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarMonthCellComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mwl-calendar-month-cell',\n      template: \"\\n    <ng-template\\n      #defaultTemplate\\n      let-day=\\\"day\\\"\\n      let-openDay=\\\"openDay\\\"\\n      let-locale=\\\"locale\\\"\\n      let-tooltipPlacement=\\\"tooltipPlacement\\\"\\n      let-highlightDay=\\\"highlightDay\\\"\\n      let-unhighlightDay=\\\"unhighlightDay\\\"\\n      let-eventClicked=\\\"eventClicked\\\"\\n      let-tooltipTemplate=\\\"tooltipTemplate\\\"\\n      let-tooltipAppendToBody=\\\"tooltipAppendToBody\\\">\\n      <div class=\\\"cal-cell-top\\\">\\n        <span class=\\\"cal-day-badge\\\" *ngIf=\\\"day.badgeTotal > 0\\\">{{ day.badgeTotal }}</span>\\n        <span class=\\\"cal-day-number\\\">{{ day.date | calendarDate:'monthViewDayNumber':locale }}</span>\\n      </div>\\n      <div class=\\\"cal-events\\\" *ngIf=\\\"day.events.length > 0\\\">\\n        <div\\n          class=\\\"cal-event\\\"\\n          *ngFor=\\\"let event of day.events; trackBy:trackByEventId\\\"\\n          [style.backgroundColor]=\\\"event.color?.primary\\\"\\n          [ngClass]=\\\"event?.cssClass\\\"\\n          (mouseenter)=\\\"highlightDay.emit({event: event})\\\"\\n          (mouseleave)=\\\"unhighlightDay.emit({event: event})\\\"\\n          [mwlCalendarTooltip]=\\\"event.title | calendarEventTitle:'monthTooltip':event\\\"\\n          [tooltipPlacement]=\\\"tooltipPlacement\\\"\\n          [tooltipEvent]=\\\"event\\\"\\n          [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n          [tooltipAppendToBody]=\\\"tooltipAppendToBody\\\"\\n          mwlDraggable\\n          [dropData]=\\\"{event: event}\\\"\\n          [dragAxis]=\\\"{x: event.draggable, y: event.draggable}\\\"\\n          (mwlClick)=\\\"eventClicked.emit({ event: event })\\\">\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\n      [ngTemplateOutletContext]=\\\"{\\n        day: day,\\n        openDay: openDay,\\n        locale: locale,\\n        tooltipPlacement: tooltipPlacement,\\n        highlightDay: highlightDay,\\n        unhighlightDay: unhighlightDay,\\n        eventClicked: eventClicked,\\n        tooltipTemplate: tooltipTemplate,\\n        tooltipAppendToBody: tooltipAppendToBody\\n      }\\\">\\n    </ng-template>\\n  \",\n      host: {\n        class: 'cal-cell cal-day-cell',\n        '[class.cal-past]': 'day.isPast',\n        '[class.cal-today]': 'day.isToday',\n        '[class.cal-future]': 'day.isFuture',\n        '[class.cal-weekend]': 'day.isWeekend',\n        '[class.cal-in-month]': 'day.inMonth',\n        '[class.cal-out-month]': '!day.inMonth',\n        '[class.cal-has-events]': 'day.events.length > 0',\n        '[class.cal-open]': 'day === openDay',\n        '[style.backgroundColor]': 'day.backgroundColor'\n      }\n    }]\n  }], function () {\n    return [];\n  }, {\n    highlightDay: [{\n      type: Output\n    }],\n    unhighlightDay: [{\n      type: Output\n    }],\n    eventClicked: [{\n      type: Output\n    }],\n    day: [{\n      type: Input\n    }],\n    openDay: [{\n      type: Input\n    }],\n    locale: [{\n      type: Input\n    }],\n    tooltipPlacement: [{\n      type: Input\n    }],\n    tooltipAppendToBody: [{\n      type: Input\n    }],\n    customTemplate: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar CalendarOpenDayEventsComponent = function CalendarOpenDayEventsComponent() {\n  _classCallCheck(this, CalendarOpenDayEventsComponent);\n\n  this.isOpen = false;\n  this.eventClicked = new EventEmitter();\n  this.trackByEventId = trackByEventId;\n};\n\nCalendarOpenDayEventsComponent.ɵfac = function CalendarOpenDayEventsComponent_Factory(t) {\n  return new (t || CalendarOpenDayEventsComponent)();\n};\n\nCalendarOpenDayEventsComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CalendarOpenDayEventsComponent,\n  selectors: [[\"mwl-calendar-open-day-events\"]],\n  inputs: {\n    isOpen: \"isOpen\",\n    events: \"events\",\n    customTemplate: \"customTemplate\",\n    eventTitleTemplate: \"eventTitleTemplate\"\n  },\n  outputs: {\n    eventClicked: \"eventClicked\"\n  },\n  decls: 3,\n  vars: 1,\n  consts: [[\"defaultTemplate\", \"\"], [\"class\", \"cal-open-day-events\", 4, \"ngIf\"], [\"mwlDraggable\", \"\", 3, \"ngClass\", \"dropData\", \"dragAxis\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"mwlDraggable\", \"\", 3, \"ngClass\", \"dropData\", \"dragAxis\"], [1, \"cal-event\"], [\"view\", \"month\", 3, \"event\", \"customTemplate\", \"mwlClick\"], [3, \"event\"], [1, \"cal-open-day-events\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"]],\n  template: function CalendarOpenDayEventsComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, CalendarOpenDayEventsComponent_ng_template_0_Template, 1, 2, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, CalendarOpenDayEventsComponent_div_2_Template, 2, 6, \"div\", 1);\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngIf\", ctx.isOpen);\n    }\n  },\n  directives: [ɵngcc1.NgIf, ɵngcc1.NgForOf, ɵngcc2.ɵa, ɵngcc1.NgClass, CalendarEventTitleComponent, ClickDirective, CalendarEventActionsComponent, ɵngcc1.NgTemplateOutlet],\n  encapsulation: 2,\n  data: {\n    animation: [trigger('collapse', [transition('void => *', [style({\n      height: 0,\n      overflow: 'hidden'\n    }), animate('150ms', style({\n      height: '*'\n    }))]), transition('* => void', [style({\n      height: '*',\n      overflow: 'hidden'\n    }), animate('150ms', style({\n      height: 0\n    }))])])]\n  }\n});\n/** @nocollapse */\n\nCalendarOpenDayEventsComponent.propDecorators = {\n  \"isOpen\": [{\n    type: Input\n  }],\n  \"events\": [{\n    type: Input\n  }],\n  \"customTemplate\": [{\n    type: Input\n  }],\n  \"eventTitleTemplate\": [{\n    type: Input\n  }],\n  \"eventClicked\": [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarOpenDayEventsComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mwl-calendar-open-day-events',\n      template: \"\\n    <ng-template\\n      #defaultTemplate\\n      let-events=\\\"events\\\"\\n      let-eventClicked=\\\"eventClicked\\\">\\n      <div\\n        *ngFor=\\\"let event of events; trackBy:trackByEventId\\\"\\n        [ngClass]=\\\"event?.cssClass\\\"\\n        mwlDraggable\\n        [dropData]=\\\"{event: event}\\\"\\n        [dragAxis]=\\\"{x: event.draggable, y: event.draggable}\\\">\\n        <span\\n          class=\\\"cal-event\\\"\\n          [style.backgroundColor]=\\\"event.color?.primary\\\">\\n        </span>\\n        &ngsp;\\n        <mwl-calendar-event-title\\n          [event]=\\\"event\\\"\\n          [customTemplate]=\\\"eventTitleTemplate\\\"\\n          view=\\\"month\\\"\\n          (mwlClick)=\\\"eventClicked.emit({event: event})\\\">\\n        </mwl-calendar-event-title>\\n        &ngsp;\\n        <mwl-calendar-event-actions [event]=\\\"event\\\"></mwl-calendar-event-actions>\\n      </div>\\n    </ng-template>\\n    <div class=\\\"cal-open-day-events\\\" [@collapse] *ngIf=\\\"isOpen\\\">\\n      <ng-template\\n        [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\n        [ngTemplateOutletContext]=\\\"{\\n          events: events,\\n          eventClicked: eventClicked\\n        }\\\">\\n      </ng-template>\\n    </div>\\n  \",\n      animations: [trigger('collapse', [transition('void => *', [style({\n        height: 0,\n        overflow: 'hidden'\n      }), animate('150ms', style({\n        height: '*'\n      }))]), transition('* => void', [style({\n        height: '*',\n        overflow: 'hidden'\n      }), animate('150ms', style({\n        height: 0\n      }))])])]\n    }]\n  }], function () {\n    return [];\n  }, {\n    isOpen: [{\n      type: Input\n    }],\n    eventClicked: [{\n      type: Output\n    }],\n    events: [{\n      type: Input\n    }],\n    customTemplate: [{\n      type: Input\n    }],\n    eventTitleTemplate: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar CalendarMonthModule = function CalendarMonthModule() {\n  _classCallCheck(this, CalendarMonthModule);\n};\n\nCalendarMonthModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: CalendarMonthModule\n});\nCalendarMonthModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function CalendarMonthModule_Factory(t) {\n    return new (t || CalendarMonthModule)();\n  },\n  imports: [[CommonModule, DragAndDropModule, CalendarCommonModule], DragAndDropModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CalendarMonthModule, {\n    declarations: function declarations() {\n      return [CalendarMonthViewComponent, CalendarMonthCellComponent, CalendarOpenDayEventsComponent, CalendarMonthViewHeaderComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, DragAndDropModule, CalendarCommonModule];\n    },\n    exports: function exports() {\n      return [DragAndDropModule, CalendarMonthViewComponent, CalendarMonthCellComponent, CalendarOpenDayEventsComponent, CalendarMonthViewHeaderComponent];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarMonthModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, DragAndDropModule, CalendarCommonModule],\n      declarations: [CalendarMonthViewComponent, CalendarMonthCellComponent, CalendarOpenDayEventsComponent, CalendarMonthViewHeaderComponent],\n      exports: [DragAndDropModule, CalendarMonthViewComponent, CalendarMonthCellComponent, CalendarOpenDayEventsComponent, CalendarMonthViewHeaderComponent]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar CalendarDragHelper = /*#__PURE__*/function () {\n  /**\n   * @param {?} dragContainerElement\n   * @param {?} draggableElement\n   */\n  function CalendarDragHelper(dragContainerElement, draggableElement) {\n    _classCallCheck(this, CalendarDragHelper);\n\n    this.dragContainerElement = dragContainerElement;\n    this.startPosition = draggableElement.getBoundingClientRect();\n  }\n  /**\n   * @param {?} __0\n   * @return {?}\n   */\n\n\n  _createClass(CalendarDragHelper, [{\n    key: \"validateDrag\",\n    value: function validateDrag(_ref25) {\n      var x = _ref25.x,\n          y = _ref25.y;\n      var\n      /** @type {?} */\n      newRect = Object.assign({}, this.startPosition, {\n        left: this.startPosition.left + x,\n        right: this.startPosition.right + x,\n        top: this.startPosition.top + y,\n        bottom: this.startPosition.bottom + y\n      });\n      return isInside(this.dragContainerElement.getBoundingClientRect(), newRect);\n    }\n  }]);\n\n  return CalendarDragHelper;\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar CalendarResizeHelper = /*#__PURE__*/function () {\n  /**\n   * @param {?} resizeContainerElement\n   * @param {?=} minWidth\n   */\n  function CalendarResizeHelper(resizeContainerElement, minWidth) {\n    _classCallCheck(this, CalendarResizeHelper);\n\n    this.resizeContainerElement = resizeContainerElement;\n    this.minWidth = minWidth;\n  }\n  /**\n   * @param {?} __0\n   * @return {?}\n   */\n\n\n  _createClass(CalendarResizeHelper, [{\n    key: \"validateResize\",\n    value: function validateResize(_ref26) {\n      var rectangle = _ref26.rectangle;\n\n      if (this.minWidth && rectangle.width < this.minWidth) {\n        return false;\n      }\n\n      return isInside(this.resizeContainerElement.getBoundingClientRect(), rectangle);\n    }\n  }]);\n\n  return CalendarResizeHelper;\n}();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * Shows all events on a given week. Example usage:\n *\n * ```typescript\n * <mwl-calendar-week-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-week-view>\n * ```\n */\n\n\nvar CalendarWeekViewComponent = /*#__PURE__*/function () {\n  /**\n   * @hidden\n   * @param {?} cdr\n   * @param {?} utils\n   * @param {?} locale\n   */\n  function CalendarWeekViewComponent(cdr, utils, locale) {\n    _classCallCheck(this, CalendarWeekViewComponent);\n\n    this.cdr = cdr;\n    this.utils = utils;\n    /**\n     * An array of events to display on view\n     * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n     */\n\n    this.events = [];\n    /**\n     * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n     */\n\n    this.excludeDays = [];\n    /**\n     * The placement of the event tooltip\n     */\n\n    this.tooltipPlacement = 'bottom';\n    /**\n     * Whether to append tooltips to the body or next to the trigger element\n     */\n\n    this.tooltipAppendToBody = true;\n    /**\n     * The precision to display events.\n     * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding\n     */\n\n    this.precision = 'days';\n    /**\n     * Called when a header week day is clicked. Adding a `cssClass` property on `$event.day` will add that class to the header element\n     */\n\n    this.dayHeaderClicked = new EventEmitter();\n    /**\n     * Called when the event title is clicked\n     */\n\n    this.eventClicked = new EventEmitter();\n    /**\n     * Called when an event is resized or dragged and dropped\n     */\n\n    this.eventTimesChanged = new EventEmitter();\n    /**\n     * An output that will be called before the view is rendered for the current week.\n     * If you add the `cssClass` property to a day in the header it will add that class to the cell element in the template\n     */\n\n    this.beforeViewRender = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.currentResizes = new Map();\n    /**\n     * @hidden\n     */\n\n    this.trackByIndex = trackByIndex;\n    /**\n     * @hidden\n     */\n\n    this.trackByEventId = function (index, weekEvent) {\n      return weekEvent.event.id ? weekEvent.event.id : weekEvent;\n    };\n\n    this.locale = locale;\n  }\n  /**\n   * @hidden\n   * @return {?}\n   */\n\n\n  _createClass(CalendarWeekViewComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this5 = this;\n\n      if (this.refresh) {\n        this.refreshSubscription = this.refresh.subscribe(function () {\n          _this5.refreshAll();\n\n          _this5.cdr.markForCheck();\n        });\n      }\n    }\n    /**\n     * @hidden\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.viewDate || changes.excludeDays || changes.weekendDays) {\n        this.refreshHeader();\n      }\n\n      if (changes.events) {\n        validateEvents$1(this.events);\n      }\n\n      if (changes.events || changes.viewDate || changes.excludeDays) {\n        this.refreshBody();\n      }\n    }\n    /**\n     * @hidden\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.refreshSubscription) {\n        this.refreshSubscription.unsubscribe();\n      }\n    }\n    /**\n     * @hidden\n     * @param {?} weekViewContainer\n     * @param {?} weekEvent\n     * @param {?} resizeEvent\n     * @return {?}\n     */\n\n  }, {\n    key: \"resizeStarted\",\n    value: function resizeStarted(weekViewContainer, weekEvent, resizeEvent) {\n      this.currentResizes.set(weekEvent, {\n        originalOffset: weekEvent.offset,\n        originalSpan: weekEvent.span,\n        edge: typeof resizeEvent.edges.left !== 'undefined' ? 'left' : 'right'\n      });\n      this.dayColumnWidth = this.getDayColumnWidth(weekViewContainer);\n      var\n      /** @type {?} */\n      resizeHelper = new CalendarResizeHelper(weekViewContainer, this.dayColumnWidth);\n\n      this.validateResize = function (_ref27) {\n        var rectangle = _ref27.rectangle;\n        return resizeHelper.validateResize({\n          rectangle: rectangle\n        });\n      };\n\n      this.cdr.markForCheck();\n    }\n    /**\n     * @hidden\n     * @param {?} weekEvent\n     * @param {?} resizeEvent\n     * @param {?} dayWidth\n     * @return {?}\n     */\n\n  }, {\n    key: \"resizing\",\n    value: function resizing(weekEvent, resizeEvent, dayWidth) {\n      var\n      /** @type {?} */\n      currentResize = this.currentResizes.get(weekEvent);\n\n      if (resizeEvent.edges.left) {\n        var\n        /** @type {?} */\n        diff = Math.round(+resizeEvent.edges.left / dayWidth);\n        weekEvent.offset = currentResize.originalOffset + diff;\n        weekEvent.span = currentResize.originalSpan - diff;\n      } else if (resizeEvent.edges.right) {\n        var\n        /** @type {?} */\n        _diff = Math.round(+resizeEvent.edges.right / dayWidth);\n\n        weekEvent.span = currentResize.originalSpan + _diff;\n      }\n    }\n    /**\n     * @hidden\n     * @param {?} weekEvent\n     * @return {?}\n     */\n\n  }, {\n    key: \"resizeEnded\",\n    value: function resizeEnded(weekEvent) {\n      var\n      /** @type {?} */\n      currentResize = this.currentResizes.get(weekEvent);\n      var\n      /** @type {?} */\n      daysDiff;\n\n      if (currentResize.edge === 'left') {\n        daysDiff = weekEvent.offset - currentResize.originalOffset;\n      } else {\n        daysDiff = weekEvent.span - currentResize.originalSpan;\n      }\n\n      weekEvent.offset = currentResize.originalOffset;\n      weekEvent.span = currentResize.originalSpan;\n      var\n      /** @type {?} */\n      newStart = weekEvent.event.start;\n      var\n      /** @type {?} */\n      newEnd = weekEvent.event.end;\n\n      if (currentResize.edge === 'left') {\n        newStart = addDays(newStart, daysDiff);\n      } else if (newEnd) {\n        newEnd = addDays(newEnd, daysDiff);\n      }\n\n      this.eventTimesChanged.emit({\n        newStart: newStart,\n        newEnd: newEnd,\n        event: weekEvent.event\n      });\n      this.currentResizes.delete(weekEvent);\n    }\n    /**\n     * @hidden\n     * @param {?} weekEvent\n     * @param {?} draggedByPx\n     * @param {?} dayWidth\n     * @return {?}\n     */\n\n  }, {\n    key: \"eventDragged\",\n    value: function eventDragged(weekEvent, draggedByPx, dayWidth) {\n      var\n      /** @type {?} */\n      daysDragged = draggedByPx / dayWidth;\n      var\n      /** @type {?} */\n      newStart = addDays(weekEvent.event.start, daysDragged);\n      var\n      /** @type {?} */\n      newEnd;\n\n      if (weekEvent.event.end) {\n        newEnd = addDays(weekEvent.event.end, daysDragged);\n      }\n\n      this.eventTimesChanged.emit({\n        newStart: newStart,\n        newEnd: newEnd,\n        event: weekEvent.event\n      });\n    }\n    /**\n     * @hidden\n     * @param {?} eventRowContainer\n     * @return {?}\n     */\n\n  }, {\n    key: \"getDayColumnWidth\",\n    value: function getDayColumnWidth(eventRowContainer) {\n      return Math.floor(eventRowContainer.offsetWidth / this.days.length);\n    }\n    /**\n     * @hidden\n     * @param {?} weekViewContainer\n     * @param {?} event\n     * @return {?}\n     */\n\n  }, {\n    key: \"dragStart\",\n    value: function dragStart(weekViewContainer, event) {\n      var _this6 = this;\n\n      this.dayColumnWidth = this.getDayColumnWidth(weekViewContainer);\n      var\n      /** @type {?} */\n      dragHelper = new CalendarDragHelper(weekViewContainer, event);\n\n      this.validateDrag = function (_ref28) {\n        var x = _ref28.x,\n            y = _ref28.y;\n        return _this6.currentResizes.size === 0 && dragHelper.validateDrag({\n          x: x,\n          y: y\n        });\n      };\n\n      this.cdr.markForCheck();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"refreshHeader\",\n    value: function refreshHeader() {\n      this.days = this.utils.getWeekViewHeader({\n        viewDate: this.viewDate,\n        weekStartsOn: this.weekStartsOn,\n        excluded: this.excludeDays,\n        weekendDays: this.weekendDays\n      });\n      this.emitBeforeViewRender();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"refreshBody\",\n    value: function refreshBody() {\n      this.view = this.utils.getWeekView({\n        events: this.events,\n        viewDate: this.viewDate,\n        weekStartsOn: this.weekStartsOn,\n        excluded: this.excludeDays,\n        precision: this.precision,\n        absolutePositionedEvents: true\n      });\n      this.emitBeforeViewRender();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"refreshAll\",\n    value: function refreshAll() {\n      this.refreshHeader();\n      this.refreshBody();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"emitBeforeViewRender\",\n    value: function emitBeforeViewRender() {\n      if (this.days && this.view) {\n        this.beforeViewRender.emit({\n          header: this.days,\n          period: this.view.period\n        });\n      }\n    }\n  }]);\n\n  return CalendarWeekViewComponent;\n}();\n\nCalendarWeekViewComponent.ɵfac = function CalendarWeekViewComponent_Factory(t) {\n  return new (t || CalendarWeekViewComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(CalendarUtils), ɵngcc0.ɵɵdirectiveInject(LOCALE_ID));\n};\n\nCalendarWeekViewComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CalendarWeekViewComponent,\n  selectors: [[\"mwl-calendar-week-view\"]],\n  inputs: {\n    events: \"events\",\n    excludeDays: \"excludeDays\",\n    tooltipPlacement: \"tooltipPlacement\",\n    tooltipAppendToBody: \"tooltipAppendToBody\",\n    precision: \"precision\",\n    locale: \"locale\",\n    viewDate: \"viewDate\",\n    refresh: \"refresh\",\n    tooltipTemplate: \"tooltipTemplate\",\n    weekStartsOn: \"weekStartsOn\",\n    headerTemplate: \"headerTemplate\",\n    eventTemplate: \"eventTemplate\",\n    eventTitleTemplate: \"eventTitleTemplate\",\n    weekendDays: \"weekendDays\"\n  },\n  outputs: {\n    dayHeaderClicked: \"dayHeaderClicked\",\n    eventClicked: \"eventClicked\",\n    eventTimesChanged: \"eventTimesChanged\",\n    beforeViewRender: \"beforeViewRender\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 4,\n  vars: 5,\n  consts: [[1, \"cal-week-view\"], [\"weekViewContainer\", \"\"], [3, \"days\", \"locale\", \"customTemplate\", \"dayHeaderClicked\", \"eventDropped\"], [\"class\", \"cal-events-row\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"cal-events-row\"], [\"eventRowContainer\", \"\"], [\"class\", \"cal-event-container\", \"mwlResizable\", \"\", \"mwlDraggable\", \"\", 3, \"cal-draggable\", \"cal-starts-within-week\", \"cal-ends-within-week\", \"ngClass\", \"width\", \"marginLeft\", \"resizeEdges\", \"resizeSnapGrid\", \"validateResize\", \"dragAxis\", \"dragSnapGrid\", \"validateDrag\", \"resizeStart\", \"resizing\", \"resizeEnd\", \"dragPointerDown\", \"dragEnd\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"mwlResizable\", \"\", \"mwlDraggable\", \"\", 1, \"cal-event-container\", 3, \"ngClass\", \"resizeEdges\", \"resizeSnapGrid\", \"validateResize\", \"dragAxis\", \"dragSnapGrid\", \"validateDrag\", \"resizeStart\", \"resizing\", \"resizeEnd\", \"dragPointerDown\", \"dragEnd\"], [\"event\", \"\"], [3, \"weekEvent\", \"tooltipPlacement\", \"tooltipTemplate\", \"tooltipAppendToBody\", \"customTemplate\", \"eventTitleTemplate\", \"eventClicked\"]],\n  template: function CalendarWeekViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵelementStart(2, \"mwl-calendar-week-view-header\", 2);\n      ɵngcc0.ɵɵlistener(\"dayHeaderClicked\", function CalendarWeekViewComponent_Template_mwl_calendar_week_view_header_dayHeaderClicked_2_listener($event) {\n        return ctx.dayHeaderClicked.emit($event);\n      })(\"eventDropped\", function CalendarWeekViewComponent_Template_mwl_calendar_week_view_header_eventDropped_2_listener($event) {\n        return ctx.eventTimesChanged.emit($event);\n      });\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(3, CalendarWeekViewComponent_div_3_Template, 3, 2, \"div\", 3);\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"days\", ctx.days)(\"locale\", ctx.locale)(\"customTemplate\", ctx.headerTemplate);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.view.eventRows)(\"ngForTrackBy\", ctx.trackByIndex);\n    }\n  },\n  directives: function directives() {\n    return [CalendarWeekViewHeaderComponent, ɵngcc1.NgForOf, ɵngcc3.ResizableDirective, ɵngcc2.ɵa, ɵngcc1.NgClass, CalendarWeekViewEventComponent];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nCalendarWeekViewComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: CalendarUtils\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [LOCALE_ID]\n    }]\n  }];\n};\n\nCalendarWeekViewComponent.propDecorators = {\n  \"viewDate\": [{\n    type: Input\n  }],\n  \"events\": [{\n    type: Input\n  }],\n  \"excludeDays\": [{\n    type: Input\n  }],\n  \"refresh\": [{\n    type: Input\n  }],\n  \"locale\": [{\n    type: Input\n  }],\n  \"tooltipPlacement\": [{\n    type: Input\n  }],\n  \"tooltipTemplate\": [{\n    type: Input\n  }],\n  \"tooltipAppendToBody\": [{\n    type: Input\n  }],\n  \"weekStartsOn\": [{\n    type: Input\n  }],\n  \"headerTemplate\": [{\n    type: Input\n  }],\n  \"eventTemplate\": [{\n    type: Input\n  }],\n  \"eventTitleTemplate\": [{\n    type: Input\n  }],\n  \"precision\": [{\n    type: Input\n  }],\n  \"weekendDays\": [{\n    type: Input\n  }],\n  \"dayHeaderClicked\": [{\n    type: Output\n  }],\n  \"eventClicked\": [{\n    type: Output\n  }],\n  \"eventTimesChanged\": [{\n    type: Output\n  }],\n  \"beforeViewRender\": [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarWeekViewComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mwl-calendar-week-view',\n      template: \"\\n    <div class=\\\"cal-week-view\\\" #weekViewContainer>\\n      <mwl-calendar-week-view-header\\n        [days]=\\\"days\\\"\\n        [locale]=\\\"locale\\\"\\n        [customTemplate]=\\\"headerTemplate\\\"\\n        (dayHeaderClicked)=\\\"dayHeaderClicked.emit($event)\\\"\\n        (eventDropped)=\\\"eventTimesChanged.emit($event)\\\">\\n      </mwl-calendar-week-view-header>\\n      <div *ngFor=\\\"let eventRow of view.eventRows; trackBy:trackByIndex\\\" #eventRowContainer class=\\\"cal-events-row\\\">\\n        <div\\n          *ngFor=\\\"let weekEvent of eventRow.row; trackBy:trackByEventId\\\"\\n          #event\\n          class=\\\"cal-event-container\\\"\\n          [class.cal-draggable]=\\\"weekEvent.event.draggable\\\"\\n          [class.cal-starts-within-week]=\\\"!weekEvent.startsBeforeWeek\\\"\\n          [class.cal-ends-within-week]=\\\"!weekEvent.endsAfterWeek\\\"\\n          [ngClass]=\\\"weekEvent.event?.cssClass\\\"\\n          [style.width]=\\\"((100 / days.length) * weekEvent.span) + '%'\\\"\\n          [style.marginLeft]=\\\"((100 / days.length) * weekEvent.offset) + '%'\\\"\\n          mwlResizable\\n          [resizeEdges]=\\\"{left: weekEvent.event?.resizable?.beforeStart, right: weekEvent.event?.resizable?.afterEnd}\\\"\\n          [resizeSnapGrid]=\\\"{left: dayColumnWidth, right: dayColumnWidth}\\\"\\n          [validateResize]=\\\"validateResize\\\"\\n          (resizeStart)=\\\"resizeStarted(weekViewContainer, weekEvent, $event)\\\"\\n          (resizing)=\\\"resizing(weekEvent, $event, dayColumnWidth)\\\"\\n          (resizeEnd)=\\\"resizeEnded(weekEvent)\\\"\\n          mwlDraggable\\n          [dragAxis]=\\\"{x: weekEvent.event.draggable && currentResizes.size === 0, y: false}\\\"\\n          [dragSnapGrid]=\\\"{x: dayColumnWidth}\\\"\\n          [validateDrag]=\\\"validateDrag\\\"\\n          (dragPointerDown)=\\\"dragStart(weekViewContainer, event)\\\"\\n          (dragEnd)=\\\"eventDragged(weekEvent, $event.x, dayColumnWidth)\\\">\\n          <mwl-calendar-week-view-event\\n            [weekEvent]=\\\"weekEvent\\\"\\n            [tooltipPlacement]=\\\"tooltipPlacement\\\"\\n            [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n            [tooltipAppendToBody]=\\\"tooltipAppendToBody\\\"\\n            [customTemplate]=\\\"eventTemplate\\\"\\n            [eventTitleTemplate]=\\\"eventTitleTemplate\\\"\\n            (eventClicked)=\\\"eventClicked.emit({event: weekEvent.event})\\\">\\n          </mwl-calendar-week-view-event>\\n        </div>\\n      </div>\\n    </div>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: CalendarUtils\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, {\n    events: [{\n      type: Input\n    }],\n    excludeDays: [{\n      type: Input\n    }],\n    tooltipPlacement: [{\n      type: Input\n    }],\n    tooltipAppendToBody: [{\n      type: Input\n    }],\n    precision: [{\n      type: Input\n    }],\n    dayHeaderClicked: [{\n      type: Output\n    }],\n    eventClicked: [{\n      type: Output\n    }],\n    eventTimesChanged: [{\n      type: Output\n    }],\n    beforeViewRender: [{\n      type: Output\n    }],\n    locale: [{\n      type: Input\n    }],\n    viewDate: [{\n      type: Input\n    }],\n    refresh: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    weekStartsOn: [{\n      type: Input\n    }],\n    headerTemplate: [{\n      type: Input\n    }],\n    eventTemplate: [{\n      type: Input\n    }],\n    eventTitleTemplate: [{\n      type: Input\n    }],\n    weekendDays: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar CalendarWeekViewHeaderComponent = function CalendarWeekViewHeaderComponent() {\n  _classCallCheck(this, CalendarWeekViewHeaderComponent);\n\n  this.dayHeaderClicked = new EventEmitter();\n  this.eventDropped = new EventEmitter();\n  this.trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\n};\n\nCalendarWeekViewHeaderComponent.ɵfac = function CalendarWeekViewHeaderComponent_Factory(t) {\n  return new (t || CalendarWeekViewHeaderComponent)();\n};\n\nCalendarWeekViewHeaderComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CalendarWeekViewHeaderComponent,\n  selectors: [[\"mwl-calendar-week-view-header\"]],\n  inputs: {\n    days: \"days\",\n    locale: \"locale\",\n    customTemplate: \"customTemplate\"\n  },\n  outputs: {\n    dayHeaderClicked: \"dayHeaderClicked\",\n    eventDropped: \"eventDropped\"\n  },\n  decls: 3,\n  vars: 7,\n  consts: [[\"defaultTemplate\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"cal-day-headers\"], [\"class\", \"cal-header\", \"mwlDroppable\", \"\", 3, \"cal-past\", \"cal-today\", \"cal-future\", \"cal-weekend\", \"cal-drag-over\", \"ngClass\", \"mwlClick\", \"dragEnter\", \"dragLeave\", \"drop\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"mwlDroppable\", \"\", 1, \"cal-header\", 3, \"ngClass\", \"mwlClick\", \"dragEnter\", \"dragLeave\", \"drop\"]],\n  template: function CalendarWeekViewHeaderComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, CalendarWeekViewHeaderComponent_ng_template_0_Template, 2, 2, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, CalendarWeekViewHeaderComponent_ng_template_2_Template, 0, 0, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      var _r0 = ɵngcc0.ɵɵreference(1);\n\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.customTemplate || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction4(2, _c10, ctx.days, ctx.locale, ctx.dayHeaderClicked, ctx.eventDropped));\n    }\n  },\n  directives: [ɵngcc1.NgTemplateOutlet, ɵngcc1.NgForOf, ɵngcc2.ɵb, ɵngcc1.NgClass, ClickDirective],\n  pipes: [CalendarDatePipe],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nCalendarWeekViewHeaderComponent.propDecorators = {\n  \"days\": [{\n    type: Input\n  }],\n  \"locale\": [{\n    type: Input\n  }],\n  \"customTemplate\": [{\n    type: Input\n  }],\n  \"dayHeaderClicked\": [{\n    type: Output\n  }],\n  \"eventDropped\": [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarWeekViewHeaderComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mwl-calendar-week-view-header',\n      template: \"\\n    <ng-template\\n      #defaultTemplate\\n      let-days=\\\"days\\\"\\n      let-locale=\\\"locale\\\"\\n      let-dayHeaderClicked=\\\"dayHeaderClicked\\\"\\n      let-eventDropped=\\\"eventDropped\\\">\\n      <div class=\\\"cal-day-headers\\\">\\n        <div\\n          class=\\\"cal-header\\\"\\n          *ngFor=\\\"let day of days; trackBy:trackByWeekDayHeaderDate\\\"\\n          [class.cal-past]=\\\"day.isPast\\\"\\n          [class.cal-today]=\\\"day.isToday\\\"\\n          [class.cal-future]=\\\"day.isFuture\\\"\\n          [class.cal-weekend]=\\\"day.isWeekend\\\"\\n          [class.cal-drag-over]=\\\"day.dragOver\\\"\\n          [ngClass]=\\\"day.cssClass\\\"\\n          (mwlClick)=\\\"dayHeaderClicked.emit({day: day})\\\"\\n          mwlDroppable\\n          (dragEnter)=\\\"day.dragOver = true\\\"\\n          (dragLeave)=\\\"day.dragOver = false\\\"\\n          (drop)=\\\"day.dragOver = false; eventDropped.emit({event: $event.dropData.event, newStart: day.date})\\\">\\n          <b>{{ day.date | calendarDate:'weekViewColumnHeader':locale }}</b><br>\\n          <span>{{ day.date | calendarDate:'weekViewColumnSubHeader':locale }}</span>\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\n      [ngTemplateOutletContext]=\\\"{days: days, locale: locale, dayHeaderClicked: dayHeaderClicked, eventDropped: eventDropped}\\\">\\n    </ng-template>\\n  \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    dayHeaderClicked: [{\n      type: Output\n    }],\n    eventDropped: [{\n      type: Output\n    }],\n    days: [{\n      type: Input\n    }],\n    locale: [{\n      type: Input\n    }],\n    customTemplate: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar CalendarWeekViewEventComponent = function CalendarWeekViewEventComponent() {\n  _classCallCheck(this, CalendarWeekViewEventComponent);\n\n  this.eventClicked = new EventEmitter();\n};\n\nCalendarWeekViewEventComponent.ɵfac = function CalendarWeekViewEventComponent_Factory(t) {\n  return new (t || CalendarWeekViewEventComponent)();\n};\n\nCalendarWeekViewEventComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CalendarWeekViewEventComponent,\n  selectors: [[\"mwl-calendar-week-view-event\"]],\n  inputs: {\n    weekEvent: \"weekEvent\",\n    tooltipPlacement: \"tooltipPlacement\",\n    tooltipAppendToBody: \"tooltipAppendToBody\",\n    customTemplate: \"customTemplate\",\n    eventTitleTemplate: \"eventTitleTemplate\",\n    tooltipTemplate: \"tooltipTemplate\"\n  },\n  outputs: {\n    eventClicked: \"eventClicked\"\n  },\n  decls: 3,\n  vars: 8,\n  consts: [[\"defaultTemplate\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"cal-event\", 3, \"mwlCalendarTooltip\", \"tooltipPlacement\", \"tooltipEvent\", \"tooltipTemplate\", \"tooltipAppendToBody\"], [3, \"event\"], [\"view\", \"week\", 3, \"event\", \"customTemplate\", \"mwlClick\"]],\n  template: function CalendarWeekViewEventComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, CalendarWeekViewEventComponent_ng_template_0_Template, 5, 16, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, CalendarWeekViewEventComponent_ng_template_2_Template, 0, 0, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      var _r0 = ɵngcc0.ɵɵreference(1);\n\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.customTemplate || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction5(2, _c11, ctx.weekEvent, ctx.tooltipPlacement, ctx.eventClicked, ctx.tooltipTemplate, ctx.tooltipAppendToBody));\n    }\n  },\n  directives: [ɵngcc1.NgTemplateOutlet, CalendarTooltipDirective, CalendarEventActionsComponent, CalendarEventTitleComponent, ClickDirective],\n  pipes: [CalendarEventTitlePipe],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nCalendarWeekViewEventComponent.propDecorators = {\n  \"weekEvent\": [{\n    type: Input\n  }],\n  \"tooltipPlacement\": [{\n    type: Input\n  }],\n  \"tooltipAppendToBody\": [{\n    type: Input\n  }],\n  \"customTemplate\": [{\n    type: Input\n  }],\n  \"eventTitleTemplate\": [{\n    type: Input\n  }],\n  \"tooltipTemplate\": [{\n    type: Input\n  }],\n  \"eventClicked\": [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarWeekViewEventComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mwl-calendar-week-view-event',\n      template: \"\\n    <ng-template\\n      #defaultTemplate\\n      let-weekEvent=\\\"weekEvent\\\"\\n      let-tooltipPlacement=\\\"tooltipPlacement\\\"\\n      let-eventClicked=\\\"eventClicked\\\"\\n      let-tooltipTemplate=\\\"tooltipTemplate\\\"\\n      let-tooltipAppendToBody=\\\"tooltipAppendToBody\\\">\\n      <div\\n        class=\\\"cal-event\\\"\\n        [style.backgroundColor]=\\\"weekEvent.event.color?.secondary\\\"\\n        [style.borderColor]=\\\"weekEvent.event.color?.primary\\\"\\n        [mwlCalendarTooltip]=\\\"weekEvent.event.title | calendarEventTitle:'weekTooltip':weekEvent.event\\\"\\n        [tooltipPlacement]=\\\"tooltipPlacement\\\"\\n        [tooltipEvent]=\\\"weekEvent.event\\\"\\n        [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n        [tooltipAppendToBody]=\\\"tooltipAppendToBody\\\">\\n        <mwl-calendar-event-actions [event]=\\\"weekEvent.event\\\"></mwl-calendar-event-actions>\\n        &ngsp;\\n        <mwl-calendar-event-title\\n          [event]=\\\"weekEvent.event\\\"\\n          [customTemplate]=\\\"eventTitleTemplate\\\"\\n          view=\\\"week\\\"\\n          (mwlClick)=\\\"eventClicked.emit()\\\">\\n        </mwl-calendar-event-title>\\n      </div>\\n    </ng-template>\\n    <ng-template\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\n      [ngTemplateOutletContext]=\\\"{\\n        weekEvent: weekEvent,\\n        tooltipPlacement: tooltipPlacement,\\n        eventClicked: eventClicked,\\n        tooltipTemplate: tooltipTemplate,\\n        tooltipAppendToBody: tooltipAppendToBody\\n      }\\\">\\n    </ng-template>\\n  \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    eventClicked: [{\n      type: Output\n    }],\n    weekEvent: [{\n      type: Input\n    }],\n    tooltipPlacement: [{\n      type: Input\n    }],\n    tooltipAppendToBody: [{\n      type: Input\n    }],\n    customTemplate: [{\n      type: Input\n    }],\n    eventTitleTemplate: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar CalendarWeekModule = function CalendarWeekModule() {\n  _classCallCheck(this, CalendarWeekModule);\n};\n\nCalendarWeekModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: CalendarWeekModule\n});\nCalendarWeekModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function CalendarWeekModule_Factory(t) {\n    return new (t || CalendarWeekModule)();\n  },\n  imports: [[CommonModule, ResizableModule, DragAndDropModule, CalendarCommonModule], ResizableModule, DragAndDropModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CalendarWeekModule, {\n    declarations: function declarations() {\n      return [CalendarWeekViewComponent, CalendarWeekViewHeaderComponent, CalendarWeekViewEventComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, ResizableModule, DragAndDropModule, CalendarCommonModule];\n    },\n    exports: function exports() {\n      return [ResizableModule, DragAndDropModule, CalendarWeekViewComponent, CalendarWeekViewHeaderComponent, CalendarWeekViewEventComponent];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarWeekModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ResizableModule, DragAndDropModule, CalendarCommonModule],\n      declarations: [CalendarWeekViewComponent, CalendarWeekViewHeaderComponent, CalendarWeekViewEventComponent],\n      exports: [ResizableModule, DragAndDropModule, CalendarWeekViewComponent, CalendarWeekViewHeaderComponent, CalendarWeekViewEventComponent]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @hidden\n */\n\n\nvar\n/** @type {?} */\nMINUTES_IN_HOUR = 60;\n/**\n * Shows all events on a given day. Example usage:\n *\n * ```typescript\n * <mwl-calendar-day-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-day-view>\n * ```\n */\n\nvar CalendarDayViewComponent = /*#__PURE__*/function () {\n  /**\n   * @hidden\n   * @param {?} cdr\n   * @param {?} utils\n   * @param {?} locale\n   */\n  function CalendarDayViewComponent(cdr, utils, locale) {\n    _classCallCheck(this, CalendarDayViewComponent);\n\n    this.cdr = cdr;\n    this.utils = utils;\n    /**\n     * An array of events to display on view\n     * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n     */\n\n    this.events = [];\n    /**\n     * The number of segments in an hour. Must be <= 6\n     */\n\n    this.hourSegments = 2;\n    /**\n     * The height in pixels of each hour segment\n     */\n\n    this.hourSegmentHeight = 30;\n    /**\n     * The day start hours in 24 hour time. Must be 0-23\n     */\n\n    this.dayStartHour = 0;\n    /**\n     * The day start minutes. Must be 0-59\n     */\n\n    this.dayStartMinute = 0;\n    /**\n     * The day end hours in 24 hour time. Must be 0-23\n     */\n\n    this.dayEndHour = 23;\n    /**\n     * The day end minutes. Must be 0-59\n     */\n\n    this.dayEndMinute = 59;\n    /**\n     * The width in pixels of each event on the view\n     */\n\n    this.eventWidth = 150;\n    /**\n     * The grid size to snap resizing and dragging of events to\n     */\n\n    this.eventSnapSize = this.hourSegmentHeight;\n    /**\n     * The placement of the event tooltip\n     */\n\n    this.tooltipPlacement = 'top';\n    /**\n     * Whether to append tooltips to the body or next to the trigger element\n     */\n\n    this.tooltipAppendToBody = true;\n    /**\n     * Called when an event title is clicked\n     */\n\n    this.eventClicked = new EventEmitter();\n    /**\n     * Called when an hour segment is clicked\n     */\n\n    this.hourSegmentClicked = new EventEmitter();\n    /**\n     * Called when an event is resized or dragged and dropped\n     */\n\n    this.eventTimesChanged = new EventEmitter();\n    /**\n     * An output that will be called before the view is rendered for the current day.\n     * If you add the `cssClass` property to an hour grid segment it will add that class to the hour segment in the template\n     */\n\n    this.beforeViewRender = new EventEmitter();\n    /**\n     * @hidden\n     */\n\n    this.hours = [];\n    /**\n     * @hidden\n     */\n\n    this.width = 0;\n    /**\n     * @hidden\n     */\n\n    this.currentResizes = new Map();\n    /**\n     * @hidden\n     */\n\n    this.trackByEventId = trackByEventId;\n    /**\n     * @hidden\n     */\n\n    this.trackByDayEvent = function (index, dayEvent) {\n      return dayEvent.event.id ? dayEvent.event.id : dayEvent.event;\n    };\n    /**\n     * @hidden\n     */\n\n\n    this.trackByHour = function (index, hour) {\n      return hour.segments[0].date.toISOString();\n    };\n    /**\n     * @hidden\n     */\n\n\n    this.trackByHourSegment = function (index, segment) {\n      return segment.date.toISOString();\n    };\n\n    this.locale = locale;\n  }\n  /**\n   * @hidden\n   * @return {?}\n   */\n\n\n  _createClass(CalendarDayViewComponent, [{\n    key: \"ngOnInit\",\n    value: function ngOnInit() {\n      var _this7 = this;\n\n      if (this.refresh) {\n        this.refreshSubscription = this.refresh.subscribe(function () {\n          _this7.refreshAll();\n\n          _this7.cdr.markForCheck();\n        });\n      }\n    }\n    /**\n     * @hidden\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnDestroy\",\n    value: function ngOnDestroy() {\n      if (this.refreshSubscription) {\n        this.refreshSubscription.unsubscribe();\n      }\n    }\n    /**\n     * @hidden\n     * @param {?} changes\n     * @return {?}\n     */\n\n  }, {\n    key: \"ngOnChanges\",\n    value: function ngOnChanges(changes) {\n      if (changes.viewDate || changes.dayStartHour || changes.dayStartMinute || changes.dayEndHour || changes.dayEndMinute || changes.hourSegments) {\n        this.refreshHourGrid();\n      }\n\n      if (changes.events) {\n        validateEvents$1(this.events);\n      }\n\n      if (changes.viewDate || changes.events || changes.dayStartHour || changes.dayStartMinute || changes.dayEndHour || changes.dayEndMinute || changes.eventWidth) {\n        this.refreshView();\n      }\n    }\n    /**\n     * @param {?} dropEvent\n     * @param {?} segment\n     * @return {?}\n     */\n\n  }, {\n    key: \"eventDropped\",\n    value: function eventDropped(dropEvent, segment) {\n      if (dropEvent.dropData && dropEvent.dropData.event) {\n        this.eventTimesChanged.emit({\n          event: dropEvent.dropData.event,\n          newStart: segment.date\n        });\n      }\n    }\n    /**\n     * @param {?} event\n     * @param {?} resizeEvent\n     * @param {?} dayViewContainer\n     * @return {?}\n     */\n\n  }, {\n    key: \"resizeStarted\",\n    value: function resizeStarted(event, resizeEvent, dayViewContainer) {\n      this.currentResizes.set(event, {\n        originalTop: event.top,\n        originalHeight: event.height,\n        edge: typeof resizeEvent.edges.top !== 'undefined' ? 'top' : 'bottom'\n      });\n      var\n      /** @type {?} */\n      resizeHelper = new CalendarResizeHelper(dayViewContainer);\n\n      this.validateResize = function (_ref29) {\n        var rectangle = _ref29.rectangle;\n        return resizeHelper.validateResize({\n          rectangle: rectangle\n        });\n      };\n\n      this.cdr.markForCheck();\n    }\n    /**\n     * @param {?} event\n     * @param {?} resizeEvent\n     * @return {?}\n     */\n\n  }, {\n    key: \"resizing\",\n    value: function resizing(event, resizeEvent) {\n      var\n      /** @type {?} */\n      currentResize = this.currentResizes.get(event);\n\n      if (resizeEvent.edges.top) {\n        event.top = currentResize.originalTop + +resizeEvent.edges.top;\n        event.height = currentResize.originalHeight - +resizeEvent.edges.top;\n      } else if (resizeEvent.edges.bottom) {\n        event.height = currentResize.originalHeight + +resizeEvent.edges.bottom;\n      }\n    }\n    /**\n     * @param {?} dayEvent\n     * @return {?}\n     */\n\n  }, {\n    key: \"resizeEnded\",\n    value: function resizeEnded(dayEvent) {\n      var\n      /** @type {?} */\n      currentResize = this.currentResizes.get(dayEvent);\n      var\n      /** @type {?} */\n      pixelsMoved;\n\n      if (currentResize.edge === 'top') {\n        pixelsMoved = dayEvent.top - currentResize.originalTop;\n      } else {\n        pixelsMoved = dayEvent.height - currentResize.originalHeight;\n      }\n\n      dayEvent.top = currentResize.originalTop;\n      dayEvent.height = currentResize.originalHeight;\n      var\n      /** @type {?} */\n      pixelAmountInMinutes = MINUTES_IN_HOUR / (this.hourSegments * this.hourSegmentHeight);\n      var\n      /** @type {?} */\n      minutesMoved = pixelsMoved * pixelAmountInMinutes;\n      var\n      /** @type {?} */\n      newStart = dayEvent.event.start;\n      var\n      /** @type {?} */\n      newEnd = dayEvent.event.end;\n\n      if (currentResize.edge === 'top') {\n        newStart = addMinutes(newStart, minutesMoved);\n      } else if (newEnd) {\n        newEnd = addMinutes(newEnd, minutesMoved);\n      }\n\n      this.eventTimesChanged.emit({\n        newStart: newStart,\n        newEnd: newEnd,\n        event: dayEvent.event\n      });\n      this.currentResizes.delete(dayEvent);\n    }\n    /**\n     * @param {?} event\n     * @param {?} dayViewContainer\n     * @return {?}\n     */\n\n  }, {\n    key: \"dragStart\",\n    value: function dragStart(event, dayViewContainer) {\n      var _this8 = this;\n\n      var\n      /** @type {?} */\n      dragHelper = new CalendarDragHelper(dayViewContainer, event);\n\n      this.validateDrag = function (_ref30) {\n        var x = _ref30.x,\n            y = _ref30.y;\n        return _this8.currentResizes.size === 0 && dragHelper.validateDrag({\n          x: x,\n          y: y\n        });\n      };\n\n      this.cdr.markForCheck();\n    }\n    /**\n     * @param {?} dayEvent\n     * @param {?} draggedInPixels\n     * @return {?}\n     */\n\n  }, {\n    key: \"eventDragged\",\n    value: function eventDragged(dayEvent, draggedInPixels) {\n      var\n      /** @type {?} */\n      pixelAmountInMinutes = MINUTES_IN_HOUR / (this.hourSegments * this.hourSegmentHeight);\n      var\n      /** @type {?} */\n      minutesMoved = draggedInPixels * pixelAmountInMinutes;\n      var\n      /** @type {?} */\n      newStart = addMinutes(dayEvent.event.start, minutesMoved);\n      var\n      /** @type {?} */\n      newEnd;\n\n      if (dayEvent.event.end) {\n        newEnd = addMinutes(dayEvent.event.end, minutesMoved);\n      }\n\n      this.eventTimesChanged.emit({\n        newStart: newStart,\n        newEnd: newEnd,\n        event: dayEvent.event\n      });\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"refreshHourGrid\",\n    value: function refreshHourGrid() {\n      this.hours = this.utils.getDayViewHourGrid({\n        viewDate: this.viewDate,\n        hourSegments: this.hourSegments,\n        dayStart: {\n          hour: this.dayStartHour,\n          minute: this.dayStartMinute\n        },\n        dayEnd: {\n          hour: this.dayEndHour,\n          minute: this.dayEndMinute\n        }\n      });\n      this.emitBeforeViewRender();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"refreshView\",\n    value: function refreshView() {\n      this.view = this.utils.getDayView({\n        events: this.events,\n        viewDate: this.viewDate,\n        hourSegments: this.hourSegments,\n        dayStart: {\n          hour: this.dayStartHour,\n          minute: this.dayStartMinute\n        },\n        dayEnd: {\n          hour: this.dayEndHour,\n          minute: this.dayEndMinute\n        },\n        eventWidth: this.eventWidth,\n        segmentHeight: this.hourSegmentHeight\n      });\n      this.emitBeforeViewRender();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"refreshAll\",\n    value: function refreshAll() {\n      this.refreshHourGrid();\n      this.refreshView();\n    }\n    /**\n     * @return {?}\n     */\n\n  }, {\n    key: \"emitBeforeViewRender\",\n    value: function emitBeforeViewRender() {\n      if (this.hours && this.view) {\n        this.beforeViewRender.emit({\n          body: {\n            hourGrid: this.hours\n          },\n          period: this.view.period\n        });\n      }\n    }\n  }]);\n\n  return CalendarDayViewComponent;\n}();\n\nCalendarDayViewComponent.ɵfac = function CalendarDayViewComponent_Factory(t) {\n  return new (t || CalendarDayViewComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ChangeDetectorRef), ɵngcc0.ɵɵdirectiveInject(CalendarUtils), ɵngcc0.ɵɵdirectiveInject(LOCALE_ID));\n};\n\nCalendarDayViewComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CalendarDayViewComponent,\n  selectors: [[\"mwl-calendar-day-view\"]],\n  inputs: {\n    events: \"events\",\n    hourSegments: \"hourSegments\",\n    hourSegmentHeight: \"hourSegmentHeight\",\n    dayStartHour: \"dayStartHour\",\n    dayStartMinute: \"dayStartMinute\",\n    dayEndHour: \"dayEndHour\",\n    dayEndMinute: \"dayEndMinute\",\n    eventWidth: \"eventWidth\",\n    eventSnapSize: \"eventSnapSize\",\n    tooltipPlacement: \"tooltipPlacement\",\n    tooltipAppendToBody: \"tooltipAppendToBody\",\n    locale: \"locale\",\n    viewDate: \"viewDate\",\n    refresh: \"refresh\",\n    tooltipTemplate: \"tooltipTemplate\",\n    hourSegmentTemplate: \"hourSegmentTemplate\",\n    allDayEventTemplate: \"allDayEventTemplate\",\n    eventTemplate: \"eventTemplate\",\n    eventTitleTemplate: \"eventTitleTemplate\"\n  },\n  outputs: {\n    eventClicked: \"eventClicked\",\n    hourSegmentClicked: \"hourSegmentClicked\",\n    eventTimesChanged: \"eventTimesChanged\",\n    beforeViewRender: \"beforeViewRender\"\n  },\n  features: [ɵngcc0.ɵɵNgOnChangesFeature],\n  decls: 7,\n  vars: 6,\n  consts: [[1, \"cal-day-view\"], [\"dayViewContainer\", \"\"], [3, \"event\", \"customTemplate\", \"eventTitleTemplate\", \"eventClicked\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"cal-hour-rows\"], [1, \"cal-events\"], [\"class\", \"cal-event-container\", \"mwlResizable\", \"\", \"mwlDraggable\", \"\", 3, \"cal-draggable\", \"cal-starts-within-day\", \"cal-ends-within-day\", \"ngClass\", \"resizeEdges\", \"resizeSnapGrid\", \"validateResize\", \"dragAxis\", \"dragSnapGrid\", \"validateDrag\", \"marginTop\", \"height\", \"marginLeft\", \"width\", \"resizeStart\", \"resizing\", \"resizeEnd\", \"dragPointerDown\", \"dragEnd\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"class\", \"cal-hour\", 3, \"minWidth\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [3, \"event\", \"customTemplate\", \"eventTitleTemplate\", \"eventClicked\"], [\"mwlResizable\", \"\", \"mwlDraggable\", \"\", 1, \"cal-event-container\", 3, \"ngClass\", \"resizeEdges\", \"resizeSnapGrid\", \"validateResize\", \"dragAxis\", \"dragSnapGrid\", \"validateDrag\", \"resizeStart\", \"resizing\", \"resizeEnd\", \"dragPointerDown\", \"dragEnd\"], [\"event\", \"\"], [3, \"dayEvent\", \"tooltipPlacement\", \"tooltipTemplate\", \"tooltipAppendToBody\", \"customTemplate\", \"eventTitleTemplate\", \"eventClicked\"], [1, \"cal-hour\"], [\"mwlDroppable\", \"\", 3, \"height\", \"segment\", \"segmentHeight\", \"locale\", \"customTemplate\", \"cal-drag-over\", \"click\", \"dragEnter\", \"dragLeave\", \"drop\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"mwlDroppable\", \"\", 3, \"segment\", \"segmentHeight\", \"locale\", \"customTemplate\", \"click\", \"dragEnter\", \"dragLeave\", \"drop\"]],\n  template: function CalendarDayViewComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵelementStart(0, \"div\", 0, 1);\n      ɵngcc0.ɵɵtemplate(2, CalendarDayViewComponent_mwl_calendar_all_day_event_2_Template, 1, 3, \"mwl-calendar-all-day-event\", 2);\n      ɵngcc0.ɵɵelementStart(3, \"div\", 3);\n      ɵngcc0.ɵɵelementStart(4, \"div\", 4);\n      ɵngcc0.ɵɵtemplate(5, CalendarDayViewComponent_div_5_Template, 3, 37, \"div\", 5);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵtemplate(6, CalendarDayViewComponent_div_6_Template, 2, 4, \"div\", 6);\n      ɵngcc0.ɵɵelementEnd();\n      ɵngcc0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.view.allDayEvents)(\"ngForTrackBy\", ctx.trackByEventId);\n      ɵngcc0.ɵɵadvance(3);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.view == null ? null : ctx.view.events)(\"ngForTrackBy\", ctx.trackByDayEvent);\n      ɵngcc0.ɵɵadvance(1);\n      ɵngcc0.ɵɵproperty(\"ngForOf\", ctx.hours)(\"ngForTrackBy\", ctx.trackByHour);\n    }\n  },\n  directives: function directives() {\n    return [ɵngcc1.NgForOf, CalendarAllDayEventComponent, ɵngcc3.ResizableDirective, ɵngcc2.ɵa, ɵngcc1.NgClass, CalendarDayViewEventComponent, CalendarDayViewHourSegmentComponent, ɵngcc2.ɵb];\n  },\n  encapsulation: 2\n});\n/** @nocollapse */\n\nCalendarDayViewComponent.ctorParameters = function () {\n  return [{\n    type: ChangeDetectorRef\n  }, {\n    type: CalendarUtils\n  }, {\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [LOCALE_ID]\n    }]\n  }];\n};\n\nCalendarDayViewComponent.propDecorators = {\n  \"viewDate\": [{\n    type: Input\n  }],\n  \"events\": [{\n    type: Input\n  }],\n  \"hourSegments\": [{\n    type: Input\n  }],\n  \"hourSegmentHeight\": [{\n    type: Input\n  }],\n  \"dayStartHour\": [{\n    type: Input\n  }],\n  \"dayStartMinute\": [{\n    type: Input\n  }],\n  \"dayEndHour\": [{\n    type: Input\n  }],\n  \"dayEndMinute\": [{\n    type: Input\n  }],\n  \"eventWidth\": [{\n    type: Input\n  }],\n  \"refresh\": [{\n    type: Input\n  }],\n  \"locale\": [{\n    type: Input\n  }],\n  \"eventSnapSize\": [{\n    type: Input\n  }],\n  \"tooltipPlacement\": [{\n    type: Input\n  }],\n  \"tooltipTemplate\": [{\n    type: Input\n  }],\n  \"tooltipAppendToBody\": [{\n    type: Input\n  }],\n  \"hourSegmentTemplate\": [{\n    type: Input\n  }],\n  \"allDayEventTemplate\": [{\n    type: Input\n  }],\n  \"eventTemplate\": [{\n    type: Input\n  }],\n  \"eventTitleTemplate\": [{\n    type: Input\n  }],\n  \"eventClicked\": [{\n    type: Output\n  }],\n  \"hourSegmentClicked\": [{\n    type: Output\n  }],\n  \"eventTimesChanged\": [{\n    type: Output\n  }],\n  \"beforeViewRender\": [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarDayViewComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mwl-calendar-day-view',\n      template: \"\\n    <div class=\\\"cal-day-view\\\" #dayViewContainer>\\n      <mwl-calendar-all-day-event\\n        *ngFor=\\\"let event of view.allDayEvents; trackBy:trackByEventId\\\"\\n        [event]=\\\"event\\\"\\n        [customTemplate]=\\\"allDayEventTemplate\\\"\\n        [eventTitleTemplate]=\\\"eventTitleTemplate\\\"\\n        (eventClicked)=\\\"eventClicked.emit({event: event})\\\">\\n      </mwl-calendar-all-day-event>\\n      <div class=\\\"cal-hour-rows\\\">\\n        <div class=\\\"cal-events\\\">\\n          <div\\n            #event\\n            *ngFor=\\\"let dayEvent of view?.events; trackBy:trackByDayEvent\\\"\\n            class=\\\"cal-event-container\\\"\\n            [class.cal-draggable]=\\\"dayEvent.event.draggable\\\"\\n            [class.cal-starts-within-day]=\\\"!dayEvent.startsBeforeDay\\\"\\n            [class.cal-ends-within-day]=\\\"!dayEvent.endsAfterDay\\\"\\n            [ngClass]=\\\"dayEvent.event.cssClass\\\"\\n            mwlResizable\\n            [resizeEdges]=\\\"{top: dayEvent.event?.resizable?.beforeStart, bottom: dayEvent.event?.resizable?.afterEnd}\\\"\\n            [resizeSnapGrid]=\\\"{top: eventSnapSize, bottom: eventSnapSize}\\\"\\n            [validateResize]=\\\"validateResize\\\"\\n            (resizeStart)=\\\"resizeStarted(dayEvent, $event, dayViewContainer)\\\"\\n            (resizing)=\\\"resizing(dayEvent, $event)\\\"\\n            (resizeEnd)=\\\"resizeEnded(dayEvent)\\\"\\n            mwlDraggable\\n            [dragAxis]=\\\"{x: false, y: dayEvent.event.draggable && currentResizes.size === 0}\\\"\\n            [dragSnapGrid]=\\\"{y: eventSnapSize}\\\"\\n            [validateDrag]=\\\"validateDrag\\\"\\n            (dragPointerDown)=\\\"dragStart(event, dayViewContainer)\\\"\\n            (dragEnd)=\\\"eventDragged(dayEvent, $event.y)\\\"\\n            [style.marginTop.px]=\\\"dayEvent.top\\\"\\n            [style.height.px]=\\\"dayEvent.height\\\"\\n            [style.marginLeft.px]=\\\"dayEvent.left + 70\\\"\\n            [style.width.px]=\\\"dayEvent.width - 1\\\">\\n            <mwl-calendar-day-view-event\\n              [dayEvent]=\\\"dayEvent\\\"\\n              [tooltipPlacement]=\\\"tooltipPlacement\\\"\\n              [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n              [tooltipAppendToBody]=\\\"tooltipAppendToBody\\\"\\n              [customTemplate]=\\\"eventTemplate\\\"\\n              [eventTitleTemplate]=\\\"eventTitleTemplate\\\"\\n              (eventClicked)=\\\"eventClicked.emit({event: dayEvent.event})\\\">\\n            </mwl-calendar-day-view-event>\\n          </div>\\n        </div>\\n        <div class=\\\"cal-hour\\\" *ngFor=\\\"let hour of hours; trackBy:trackByHour\\\" [style.minWidth.px]=\\\"view?.width + 70\\\">\\n          <mwl-calendar-day-view-hour-segment\\n            *ngFor=\\\"let segment of hour.segments; trackBy:trackByHourSegment\\\"\\n            [style.height.px]=\\\"hourSegmentHeight\\\"\\n            [segment]=\\\"segment\\\"\\n            [segmentHeight]=\\\"hourSegmentHeight\\\"\\n            [locale]=\\\"locale\\\"\\n            [customTemplate]=\\\"hourSegmentTemplate\\\"\\n            (click)=\\\"hourSegmentClicked.emit({date: segment.date})\\\"\\n            [class.cal-drag-over]=\\\"segment.dragOver\\\"\\n            mwlDroppable\\n            (dragEnter)=\\\"segment.dragOver = true\\\"\\n            (dragLeave)=\\\"segment.dragOver = false\\\"\\n            (drop)=\\\"segment.dragOver = false; eventDropped($event, segment)\\\">\\n          </mwl-calendar-day-view-hour-segment>\\n        </div>\\n      </div>\\n    </div>\\n  \"\n    }]\n  }], function () {\n    return [{\n      type: ɵngcc0.ChangeDetectorRef\n    }, {\n      type: CalendarUtils\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: [LOCALE_ID]\n      }]\n    }];\n  }, {\n    events: [{\n      type: Input\n    }],\n    hourSegments: [{\n      type: Input\n    }],\n    hourSegmentHeight: [{\n      type: Input\n    }],\n    dayStartHour: [{\n      type: Input\n    }],\n    dayStartMinute: [{\n      type: Input\n    }],\n    dayEndHour: [{\n      type: Input\n    }],\n    dayEndMinute: [{\n      type: Input\n    }],\n    eventWidth: [{\n      type: Input\n    }],\n    eventSnapSize: [{\n      type: Input\n    }],\n    tooltipPlacement: [{\n      type: Input\n    }],\n    tooltipAppendToBody: [{\n      type: Input\n    }],\n    eventClicked: [{\n      type: Output\n    }],\n    hourSegmentClicked: [{\n      type: Output\n    }],\n    eventTimesChanged: [{\n      type: Output\n    }],\n    beforeViewRender: [{\n      type: Output\n    }],\n    locale: [{\n      type: Input\n    }],\n    viewDate: [{\n      type: Input\n    }],\n    refresh: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }],\n    hourSegmentTemplate: [{\n      type: Input\n    }],\n    allDayEventTemplate: [{\n      type: Input\n    }],\n    eventTemplate: [{\n      type: Input\n    }],\n    eventTitleTemplate: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar CalendarAllDayEventComponent = function CalendarAllDayEventComponent() {\n  _classCallCheck(this, CalendarAllDayEventComponent);\n\n  this.eventClicked = new EventEmitter();\n};\n\nCalendarAllDayEventComponent.ɵfac = function CalendarAllDayEventComponent_Factory(t) {\n  return new (t || CalendarAllDayEventComponent)();\n};\n\nCalendarAllDayEventComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CalendarAllDayEventComponent,\n  selectors: [[\"mwl-calendar-all-day-event\"]],\n  inputs: {\n    event: \"event\",\n    customTemplate: \"customTemplate\",\n    eventTitleTemplate: \"eventTitleTemplate\"\n  },\n  outputs: {\n    eventClicked: \"eventClicked\"\n  },\n  decls: 3,\n  vars: 5,\n  consts: [[\"defaultTemplate\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"cal-all-day-event\"], [3, \"event\"], [\"view\", \"day\", 3, \"event\", \"customTemplate\", \"mwlClick\"]],\n  template: function CalendarAllDayEventComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, CalendarAllDayEventComponent_ng_template_0_Template, 4, 7, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, CalendarAllDayEventComponent_ng_template_2_Template, 0, 0, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      var _r0 = ɵngcc0.ɵɵreference(1);\n\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.customTemplate || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(2, _c15, ctx.event, ctx.eventClicked));\n    }\n  },\n  directives: [ɵngcc1.NgTemplateOutlet, CalendarEventActionsComponent, CalendarEventTitleComponent, ClickDirective],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nCalendarAllDayEventComponent.propDecorators = {\n  \"event\": [{\n    type: Input\n  }],\n  \"customTemplate\": [{\n    type: Input\n  }],\n  \"eventTitleTemplate\": [{\n    type: Input\n  }],\n  \"eventClicked\": [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarAllDayEventComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mwl-calendar-all-day-event',\n      template: \"\\n    <ng-template\\n      #defaultTemplate\\n      let-event=\\\"event\\\"\\n      let-eventClicked=\\\"eventClicked\\\">\\n      <div\\n        class=\\\"cal-all-day-event\\\"\\n        [style.backgroundColor]=\\\"event.color?.secondary\\\"\\n        [style.borderColor]=\\\"event.color?.primary\\\">\\n        <mwl-calendar-event-actions [event]=\\\"event\\\"></mwl-calendar-event-actions>\\n        &ngsp;\\n        <mwl-calendar-event-title\\n          [event]=\\\"event\\\"\\n          [customTemplate]=\\\"eventTitleTemplate\\\"\\n          view=\\\"day\\\"\\n          (mwlClick)=\\\"eventClicked.emit()\\\">\\n        </mwl-calendar-event-title>\\n      </div>\\n    </ng-template>\\n    <ng-template\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\n      [ngTemplateOutletContext]=\\\"{\\n        event: event,\\n        eventClicked: eventClicked\\n      }\\\">\\n    </ng-template>\\n  \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    eventClicked: [{\n      type: Output\n    }],\n    event: [{\n      type: Input\n    }],\n    customTemplate: [{\n      type: Input\n    }],\n    eventTitleTemplate: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar CalendarDayViewHourSegmentComponent = function CalendarDayViewHourSegmentComponent() {\n  _classCallCheck(this, CalendarDayViewHourSegmentComponent);\n};\n\nCalendarDayViewHourSegmentComponent.ɵfac = function CalendarDayViewHourSegmentComponent_Factory(t) {\n  return new (t || CalendarDayViewHourSegmentComponent)();\n};\n\nCalendarDayViewHourSegmentComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CalendarDayViewHourSegmentComponent,\n  selectors: [[\"mwl-calendar-day-view-hour-segment\"]],\n  inputs: {\n    segment: \"segment\",\n    segmentHeight: \"segmentHeight\",\n    locale: \"locale\",\n    customTemplate: \"customTemplate\"\n  },\n  decls: 3,\n  vars: 5,\n  consts: [[\"defaultTemplate\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"cal-hour-segment\", 3, \"ngClass\"], [1, \"cal-time\"]],\n  template: function CalendarDayViewHourSegmentComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, CalendarDayViewHourSegmentComponent_ng_template_0_Template, 4, 12, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, CalendarDayViewHourSegmentComponent_ng_template_2_Template, 0, 0, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      var _r0 = ɵngcc0.ɵɵreference(1);\n\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.customTemplate || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction2(2, _c16, ctx.segment, ctx.locale));\n    }\n  },\n  directives: [ɵngcc1.NgTemplateOutlet, ɵngcc1.NgClass],\n  pipes: [CalendarDatePipe],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nCalendarDayViewHourSegmentComponent.propDecorators = {\n  \"segment\": [{\n    type: Input\n  }],\n  \"segmentHeight\": [{\n    type: Input\n  }],\n  \"locale\": [{\n    type: Input\n  }],\n  \"customTemplate\": [{\n    type: Input\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarDayViewHourSegmentComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mwl-calendar-day-view-hour-segment',\n      template: \"\\n    <ng-template\\n      #defaultTemplate\\n      let-segment=\\\"segment\\\"\\n      let-locale=\\\"locale\\\">\\n      <div\\n        class=\\\"cal-hour-segment\\\"\\n        [style.height.px]=\\\"segmentHeight\\\"\\n        [class.cal-hour-start]=\\\"segment.isStart\\\"\\n        [class.cal-after-hour-start]=\\\"!segment.isStart\\\"\\n        [ngClass]=\\\"segment.cssClass\\\">\\n        <div class=\\\"cal-time\\\">\\n          {{ segment.date | calendarDate:'dayViewHour':locale }}\\n        </div>\\n      </div>\\n    </ng-template>\\n    <ng-template\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\n      [ngTemplateOutletContext]=\\\"{\\n        segment: segment,\\n        locale: locale\\n      }\\\">\\n    </ng-template>\\n  \"\n    }]\n  }], null, {\n    segment: [{\n      type: Input\n    }],\n    segmentHeight: [{\n      type: Input\n    }],\n    locale: [{\n      type: Input\n    }],\n    customTemplate: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar CalendarDayViewEventComponent = function CalendarDayViewEventComponent() {\n  _classCallCheck(this, CalendarDayViewEventComponent);\n\n  this.eventClicked = new EventEmitter();\n};\n\nCalendarDayViewEventComponent.ɵfac = function CalendarDayViewEventComponent_Factory(t) {\n  return new (t || CalendarDayViewEventComponent)();\n};\n\nCalendarDayViewEventComponent.ɵcmp = ɵngcc0.ɵɵdefineComponent({\n  type: CalendarDayViewEventComponent,\n  selectors: [[\"mwl-calendar-day-view-event\"]],\n  inputs: {\n    dayEvent: \"dayEvent\",\n    tooltipPlacement: \"tooltipPlacement\",\n    tooltipAppendToBody: \"tooltipAppendToBody\",\n    customTemplate: \"customTemplate\",\n    eventTitleTemplate: \"eventTitleTemplate\",\n    tooltipTemplate: \"tooltipTemplate\"\n  },\n  outputs: {\n    eventClicked: \"eventClicked\"\n  },\n  decls: 3,\n  vars: 8,\n  consts: [[\"defaultTemplate\", \"\"], [3, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"cal-event\", 3, \"mwlCalendarTooltip\", \"tooltipPlacement\", \"tooltipEvent\", \"tooltipTemplate\", \"tooltipAppendToBody\"], [3, \"event\"], [\"view\", \"day\", 3, \"event\", \"customTemplate\", \"mwlClick\"]],\n  template: function CalendarDayViewEventComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      ɵngcc0.ɵɵtemplate(0, CalendarDayViewEventComponent_ng_template_0_Template, 5, 16, \"ng-template\", null, 0, ɵngcc0.ɵɵtemplateRefExtractor);\n      ɵngcc0.ɵɵtemplate(2, CalendarDayViewEventComponent_ng_template_2_Template, 0, 0, \"ng-template\", 1);\n    }\n\n    if (rf & 2) {\n      var _r0 = ɵngcc0.ɵɵreference(1);\n\n      ɵngcc0.ɵɵadvance(2);\n      ɵngcc0.ɵɵproperty(\"ngTemplateOutlet\", ctx.customTemplate || _r0)(\"ngTemplateOutletContext\", ɵngcc0.ɵɵpureFunction5(2, _c17, ctx.dayEvent, ctx.tooltipPlacement, ctx.eventClicked, ctx.tooltipTemplate, ctx.tooltipAppendToBody));\n    }\n  },\n  directives: [ɵngcc1.NgTemplateOutlet, CalendarTooltipDirective, CalendarEventActionsComponent, CalendarEventTitleComponent, ClickDirective],\n  pipes: [CalendarEventTitlePipe],\n  encapsulation: 2\n});\n/** @nocollapse */\n\nCalendarDayViewEventComponent.propDecorators = {\n  \"dayEvent\": [{\n    type: Input\n  }],\n  \"tooltipPlacement\": [{\n    type: Input\n  }],\n  \"tooltipAppendToBody\": [{\n    type: Input\n  }],\n  \"customTemplate\": [{\n    type: Input\n  }],\n  \"eventTitleTemplate\": [{\n    type: Input\n  }],\n  \"tooltipTemplate\": [{\n    type: Input\n  }],\n  \"eventClicked\": [{\n    type: Output\n  }]\n};\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarDayViewEventComponent, [{\n    type: Component,\n    args: [{\n      selector: 'mwl-calendar-day-view-event',\n      template: \"\\n    <ng-template\\n      #defaultTemplate\\n      let-dayEvent=\\\"dayEvent\\\"\\n      let-tooltipPlacement=\\\"tooltipPlacement\\\"\\n      let-eventClicked=\\\"eventClicked\\\"\\n      let-tooltipTemplate=\\\"tooltipTemplate\\\"\\n      let-tooltipAppendToBody=\\\"tooltipAppendToBody\\\">\\n      <div\\n        class=\\\"cal-event\\\"\\n        [style.backgroundColor]=\\\"dayEvent.event.color?.secondary\\\"\\n        [style.borderColor]=\\\"dayEvent.event.color?.primary\\\"\\n        [mwlCalendarTooltip]=\\\"dayEvent.event.title | calendarEventTitle:'dayTooltip':dayEvent.event\\\"\\n        [tooltipPlacement]=\\\"tooltipPlacement\\\"\\n        [tooltipEvent]=\\\"dayEvent.event\\\"\\n        [tooltipTemplate]=\\\"tooltipTemplate\\\"\\n        [tooltipAppendToBody]=\\\"tooltipAppendToBody\\\">\\n        <mwl-calendar-event-actions [event]=\\\"dayEvent.event\\\"></mwl-calendar-event-actions>\\n        &ngsp;\\n        <mwl-calendar-event-title\\n          [event]=\\\"dayEvent.event\\\"\\n          [customTemplate]=\\\"eventTitleTemplate\\\"\\n          view=\\\"day\\\"\\n          (mwlClick)=\\\"eventClicked.emit()\\\">\\n        </mwl-calendar-event-title>\\n      </div>\\n    </ng-template>\\n    <ng-template\\n      [ngTemplateOutlet]=\\\"customTemplate || defaultTemplate\\\"\\n      [ngTemplateOutletContext]=\\\"{\\n        dayEvent: dayEvent,\\n        tooltipPlacement: tooltipPlacement,\\n        eventClicked: eventClicked,\\n        tooltipTemplate: tooltipTemplate,\\n        tooltipAppendToBody: tooltipAppendToBody\\n      }\\\">\\n    </ng-template>\\n  \"\n    }]\n  }], function () {\n    return [];\n  }, {\n    eventClicked: [{\n      type: Output\n    }],\n    dayEvent: [{\n      type: Input\n    }],\n    tooltipPlacement: [{\n      type: Input\n    }],\n    tooltipAppendToBody: [{\n      type: Input\n    }],\n    customTemplate: [{\n      type: Input\n    }],\n    eventTitleTemplate: [{\n      type: Input\n    }],\n    tooltipTemplate: [{\n      type: Input\n    }]\n  });\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nvar CalendarDayModule = function CalendarDayModule() {\n  _classCallCheck(this, CalendarDayModule);\n};\n\nCalendarDayModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: CalendarDayModule\n});\nCalendarDayModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function CalendarDayModule_Factory(t) {\n    return new (t || CalendarDayModule)();\n  },\n  imports: [[CommonModule, ResizableModule, DragAndDropModule, CalendarCommonModule], ResizableModule, DragAndDropModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CalendarDayModule, {\n    declarations: function declarations() {\n      return [CalendarDayViewComponent, CalendarAllDayEventComponent, CalendarDayViewHourSegmentComponent, CalendarDayViewEventComponent];\n    },\n    imports: function imports() {\n      return [CommonModule, ResizableModule, DragAndDropModule, CalendarCommonModule];\n    },\n    exports: function exports() {\n      return [ResizableModule, DragAndDropModule, CalendarDayViewComponent, CalendarAllDayEventComponent, CalendarDayViewHourSegmentComponent, CalendarDayViewEventComponent];\n    }\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarDayModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CommonModule, ResizableModule, DragAndDropModule, CalendarCommonModule],\n      declarations: [CalendarDayViewComponent, CalendarAllDayEventComponent, CalendarDayViewHourSegmentComponent, CalendarDayViewEventComponent],\n      exports: [ResizableModule, DragAndDropModule, CalendarDayViewComponent, CalendarAllDayEventComponent, CalendarDayViewHourSegmentComponent, CalendarDayViewEventComponent]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * The main module of this library. Example usage:\n *\n * ```typescript\n * import { CalenderModule } from 'angular-calendar';\n *\n * \\@NgModule({\n *   imports: [\n *     CalenderModule.forRoot()\n *   ]\n * })\n * class MyModule {}\n * ```\n *\n */\n\n\nvar CalendarModule = /*#__PURE__*/function () {\n  function CalendarModule() {\n    _classCallCheck(this, CalendarModule);\n  }\n\n  _createClass(CalendarModule, null, [{\n    key: \"forRoot\",\n    value:\n    /**\n     * @param {?=} config\n     * @return {?}\n     */\n    function forRoot() {\n      var config = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return {\n        ngModule: CalendarModule,\n        providers: [DraggableHelper, config.eventTitleFormatter || CalendarEventTitleFormatter, config.dateFormatter || CalendarDateFormatter, config.utils || CalendarUtils]\n      };\n    }\n  }]);\n\n  return CalendarModule;\n}();\n\nCalendarModule.ɵmod = ɵngcc0.ɵɵdefineNgModule({\n  type: CalendarModule\n});\nCalendarModule.ɵinj = ɵngcc0.ɵɵdefineInjector({\n  factory: function CalendarModule_Factory(t) {\n    return new (t || CalendarModule)();\n  },\n  imports: [[CalendarCommonModule, CalendarMonthModule, CalendarWeekModule, CalendarDayModule], CalendarCommonModule, CalendarMonthModule, CalendarWeekModule, CalendarDayModule]\n});\n\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(CalendarModule, {\n    imports: [CalendarCommonModule, CalendarMonthModule, CalendarWeekModule, CalendarDayModule],\n    exports: [CalendarCommonModule, CalendarMonthModule, CalendarWeekModule, CalendarDayModule]\n  });\n})();\n\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(CalendarModule, [{\n    type: NgModule,\n    args: [{\n      imports: [CalendarCommonModule, CalendarMonthModule, CalendarWeekModule, CalendarDayModule],\n      exports: [CalendarCommonModule, CalendarMonthModule, CalendarWeekModule, CalendarDayModule]\n    }]\n  }], null, null);\n})();\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\n\n\nexport { CalendarModule, CalendarCommonModule, CalendarEventTitleFormatter, MOMENT, CalendarMomentDateFormatter, CalendarNativeDateFormatter, CalendarAngularDateFormatter, CalendarDateFormatter, CalendarUtils, CalendarMonthViewComponent, CalendarMonthModule, CalendarWeekViewComponent, CalendarWeekModule, CalendarDayViewComponent, CalendarDayModule, CalendarDatePipe as ɵh, CalendarEventActionsComponent as ɵa, CalendarEventTitleComponent as ɵb, CalendarEventTitlePipe as ɵi, CalendarNextViewDirective as ɵf, CalendarPreviousViewDirective as ɵe, CalendarTodayDirective as ɵg, CalendarTooltipDirective as ɵd, CalendarTooltipWindowComponent as ɵc, ClickDirective as ɵj, CalendarAllDayEventComponent as ɵp, CalendarDayViewEventComponent as ɵr, CalendarDayViewHourSegmentComponent as ɵq, CalendarMonthCellComponent as ɵk, CalendarMonthViewHeaderComponent as ɵm, CalendarOpenDayEventsComponent as ɵl, CalendarWeekViewEventComponent as ɵo, CalendarWeekViewHeaderComponent as ɵn };","map":{"version":3,"sources":["angular-calendar/modules/common/util.ts","angular-calendar/modules/common/calendar-event-actions.component.ts","angular-calendar/modules/common/calendar-event-title.component.ts","angular-calendar/modules/common/calendar-tooltip.directive.ts","angular-calendar/modules/common/calendar-previous-view.directive.ts","angular-calendar/modules/common/calendar-next-view.directive.ts","angular-calendar/modules/common/calendar-today.directive.ts","angular-calendar/modules/common/calendar-angular-date-formatter.provider.ts","angular-calendar/modules/common/calendar-date-formatter.provider.ts","angular-calendar/modules/common/calendar-date.pipe.ts","angular-calendar/modules/common/calendar-event-title-formatter.provider.ts","angular-calendar/modules/common/calendar-event-title.pipe.ts","angular-calendar/modules/common/click.directive.ts","angular-calendar/modules/common/calendar-utils.provider.ts","angular-calendar/modules/common/calendar-moment-date-formatter.provider.ts","angular-calendar/modules/common/calendar-native-date-formatter.provider.ts","angular-calendar/modules/common/calendar-common.module.ts","angular-calendar/modules/month/calendar-month-view.component.ts","angular-calendar/modules/month/calendar-month-view-header.component.ts","angular-calendar/modules/month/calendar-month-cell.component.ts","angular-calendar/modules/month/calendar-open-day-events.component.ts","angular-calendar/modules/month/calendar-month.module.ts","angular-calendar/modules/common/calendar-drag-helper.provider.ts","angular-calendar/modules/common/calendar-resize-helper.provider.ts","angular-calendar/modules/week/calendar-week-view.component.ts","angular-calendar/modules/week/calendar-week-view-header.component.ts","angular-calendar/modules/week/calendar-week-view-event.component.ts","angular-calendar/modules/week/calendar-week.module.ts","angular-calendar/modules/day/calendar-day-view.component.ts","angular-calendar/modules/day/calendar-all-day-event.component.ts","angular-calendar/modules/day/calendar-day-view-hour-segment.component.ts","angular-calendar/modules/day/calendar-day-view-event.component.ts","angular-calendar/modules/day/calendar-day.module.ts","angular-calendar/modules/calendar.module.ts"],"names":["validateEvents","validateEventsWithoutLog"],"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","sourcesContent":["import {\n  CalendarEvent,\n  validateEvents as validateEventsWithoutLog,\n  WeekDay\n} from 'calendar-utils';\n\nexport const validateEvents = (events: CalendarEvent[]) => {\n  const warn = (...args) => console.warn('angular-calendar', ...args);\n  return validateEventsWithoutLog(events, warn);\n};\n\nexport function isInside(outer: ClientRect, inner: ClientRect): boolean {\n  return (\n    outer.left <= inner.left &&\n    inner.left <= outer.right &&\n    outer.left <= inner.right &&\n    inner.right <= outer.right &&\n    outer.top <= inner.top &&\n    inner.top <= outer.bottom &&\n    outer.top <= inner.bottom &&\n    inner.bottom <= outer.bottom\n  );\n}\n\nexport const trackByEventId = (index: number, event: CalendarEvent) =>\n  event.id ? event.id : event;\n\nexport const trackByWeekDayHeaderDate = (index: number, day: WeekDay) =>\n  day.date.toISOString();\n\nexport const trackByIndex = (index: number) => index;\n","import { Component, Input } from '@angular/core';\nimport { CalendarEvent } from 'calendar-utils';\nimport { trackByIndex } from './util';\n\n@Component({\n  selector: 'mwl-calendar-event-actions',\n  template: `\n    <span *ngIf=\"event.actions\" class=\"cal-event-actions\">\n      <a\n        class=\"cal-event-action\"\n        href=\"javascript:;\"\n        *ngFor=\"let action of event.actions; trackBy:trackByIndex\"\n        (mwlClick)=\"action.onClick({event: event})\"\n        [ngClass]=\"action.cssClass\"\n        [innerHtml]=\"action.label\">\n      </a>\n    </span>\n  `\n})\nexport class CalendarEventActionsComponent {\n  @Input() event: CalendarEvent;\n  trackByIndex = trackByIndex;\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { CalendarEvent } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-event-title',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-event=\"event\"\n      let-view=\"view\">\n      <a\n        class=\"cal-event-title\"\n        href=\"javascript:;\"\n        [innerHTML]=\"event.title | calendarEventTitle:view:event\">\n      </a>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        event: event,\n        view: view\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarEventTitleComponent {\n  @Input() event: CalendarEvent;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() view: string;\n}\n","import {\n  Directive,\n  Component,\n  HostListener,\n  OnDestroy,\n  Input,\n  ComponentRef,\n  Injector,\n  ComponentFactoryResolver,\n  ViewContainerRef,\n  ElementRef,\n  ComponentFactory,\n  Inject,\n  Renderer2,\n  TemplateRef\n} from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { Positioning } from 'positioning';\nimport { CalendarEvent } from 'calendar-utils';\n\n@Component({\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-contents=\"contents\"\n      let-placement=\"placement\"\n      let-event=\"event\">\n      <div class=\"cal-tooltip\" [ngClass]=\"'cal-tooltip-' + placement\">\n        <div class=\"cal-tooltip-arrow\"></div>\n        <div class=\"cal-tooltip-inner\" [innerHtml]=\"contents\"></div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        contents: contents,\n        placement: placement,\n        event: event\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarTooltipWindowComponent {\n  @Input() contents: string;\n\n  @Input() placement: string;\n\n  @Input() event: CalendarEvent;\n\n  @Input() customTemplate: TemplateRef<any>;\n}\n\n@Directive({\n  selector: '[mwlCalendarTooltip]'\n})\nexport class CalendarTooltipDirective implements OnDestroy {\n  @Input('mwlCalendarTooltip') contents: string; // tslint:disable-line no-input-rename\n\n  @Input('tooltipPlacement') placement: string = 'top'; // tslint:disable-line no-input-rename\n\n  @Input('tooltipTemplate') customTemplate: TemplateRef<any>; // tslint:disable-line no-input-rename\n\n  @Input('tooltipEvent') event: CalendarEvent; // tslint:disable-line no-input-rename\n\n  @Input('tooltipAppendToBody') appendToBody: boolean; // tslint:disable-line no-input-rename\n\n  private tooltipFactory: ComponentFactory<CalendarTooltipWindowComponent>;\n  private tooltipRef: ComponentRef<CalendarTooltipWindowComponent>;\n  private positioning: Positioning = new Positioning();\n\n  constructor(\n    private elementRef: ElementRef,\n    private injector: Injector,\n    private renderer: Renderer2,\n    componentFactoryResolver: ComponentFactoryResolver,\n    private viewContainerRef: ViewContainerRef,\n    @Inject(DOCUMENT) private document //tslint:disable-line\n  ) {\n    this.tooltipFactory = componentFactoryResolver.resolveComponentFactory(\n      CalendarTooltipWindowComponent\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.hide();\n  }\n\n  @HostListener('mouseenter')\n  onMouseOver(): void {\n    this.show();\n  }\n\n  @HostListener('mouseleave')\n  onMouseOut(): void {\n    this.hide();\n  }\n\n  private show(): void {\n    if (!this.tooltipRef && this.contents) {\n      this.tooltipRef = this.viewContainerRef.createComponent(\n        this.tooltipFactory,\n        0,\n        this.injector,\n        []\n      );\n      this.tooltipRef.instance.contents = this.contents;\n      this.tooltipRef.instance.placement = this.placement;\n      this.tooltipRef.instance.customTemplate = this.customTemplate;\n      this.tooltipRef.instance.event = this.event;\n      if (this.appendToBody) {\n        this.document.body.appendChild(this.tooltipRef.location.nativeElement);\n      }\n      requestAnimationFrame(() => {\n        this.positionTooltip();\n      });\n    }\n  }\n\n  private hide(): void {\n    if (this.tooltipRef) {\n      this.viewContainerRef.remove(\n        this.viewContainerRef.indexOf(this.tooltipRef.hostView)\n      );\n      this.tooltipRef = null;\n    }\n  }\n\n  private positionTooltip(): void {\n    if (this.tooltipRef) {\n      const targetPosition: ClientRect = this.positioning.positionElements(\n        this.elementRef.nativeElement,\n        this.tooltipRef.location.nativeElement.children[0],\n        this.placement,\n        this.appendToBody\n      );\n\n      const elm: HTMLElement = this.tooltipRef.location.nativeElement\n        .children[0];\n\n      this.renderer.setStyle(elm, 'top', `${targetPosition.top}px`);\n      this.renderer.setStyle(elm, 'left', `${targetPosition.left}px`);\n    }\n  }\n}\n","import {\n  Directive,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport subDays from 'date-fns/sub_days/index';\nimport subWeeks from 'date-fns/sub_weeks/index';\nimport subMonths from 'date-fns/sub_months/index';\n\n/**\n * Change the view date to the previous view. For example:\n *\n * ```typescript\n * <button\n *  mwlCalendarPreviousView\n *  [(viewDate)]=\"viewDate\"\n *  [view]=\"view\">\n *  Previous\n * </button>\n * ```\n */\n@Directive({\n  selector: '[mwlCalendarPreviousView]'\n})\nexport class CalendarPreviousViewDirective {\n  /**\n   * The current view\n   */\n  @Input() view: string;\n\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * Called when the view date is changed\n   */\n  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();\n\n  /**\n   * @hidden\n   */\n  @HostListener('click')\n  onClick(): void {\n    const subFn: any = {\n      day: subDays,\n      week: subWeeks,\n      month: subMonths\n    }[this.view];\n\n    this.viewDateChange.emit(subFn(this.viewDate, 1));\n  }\n}\n","import {\n  Directive,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport addDays from 'date-fns/add_days/index';\nimport addWeeks from 'date-fns/add_weeks/index';\nimport addMonths from 'date-fns/add_months/index';\n\n/**\n * Change the view date to the next view. For example:\n *\n * ```typescript\n * <button\n *  mwlCalendarNextView\n *  [(viewDate)]=\"viewDate\"\n *  [view]=\"view\">\n *  Next\n * </button>\n * ```\n */\n@Directive({\n  selector: '[mwlCalendarNextView]'\n})\nexport class CalendarNextViewDirective {\n  /**\n   * The current view\n   */\n  @Input() view: string;\n\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * Called when the view date is changed\n   */\n  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();\n\n  /**\n   * @hidden\n   */\n  @HostListener('click')\n  onClick(): void {\n    const addFn: any = {\n      day: addDays,\n      week: addWeeks,\n      month: addMonths\n    }[this.view];\n\n    this.viewDateChange.emit(addFn(this.viewDate, 1));\n  }\n}\n","import {\n  Directive,\n  HostListener,\n  Input,\n  Output,\n  EventEmitter\n} from '@angular/core';\nimport startOfToday from 'date-fns/start_of_today/index';\n\n/**\n * Change the view date to the current day. For example:\n *\n * ```typescript\n * <button\n *  mwlCalendarToday\n *  [(viewDate)]=\"viewDate\">\n *  Today\n * </button>\n * ```\n */\n@Directive({\n  selector: '[mwlCalendarToday]'\n})\nexport class CalendarTodayDirective {\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * Called when the view date is changed\n   */\n  @Output() viewDateChange: EventEmitter<Date> = new EventEmitter();\n\n  /**\n   * @hidden\n   */\n  @HostListener('click')\n  onClick(): void {\n    this.viewDateChange.emit(startOfToday());\n  }\n}\n","import {\n  CalendarDateFormatterInterface,\n  DateFormatterParams\n} from './calendar-date-formatter.interface';\nimport getISOWeek from 'date-fns/get_iso_week/index';\nimport { DatePipe } from '@angular/common';\n\n/**\n * This will use the angular date pipe to do all date formatting. It is the default date formatter used by the calendar.\n */\nexport class CalendarAngularDateFormatter\n  implements CalendarDateFormatterInterface {\n  /**\n   * The month view header week day labels\n   */\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'EEEE', null, locale);\n  }\n\n  /**\n   * The month view cell day number\n   */\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'd', null, locale);\n  }\n\n  /**\n   * The month view title\n   */\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'MMMM y', null, locale);\n  }\n\n  /**\n   * The week view header week day labels\n   */\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'EEEE', null, locale);\n  }\n\n  /**\n   * The week view sub header day and month labels\n   */\n  public weekViewColumnSubHeader({\n    date,\n    locale\n  }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'MMM d', null, locale);\n  }\n\n  /**\n   * The week view title\n   */\n  public weekViewTitle({ date, locale }: DateFormatterParams): string {\n    const year: string = new DatePipe(locale).transform(\n      date,\n      'y',\n      null,\n      locale\n    );\n    const weekNumber: number = getISOWeek(date);\n    return `Week ${weekNumber} of ${year}`;\n  }\n\n  /**\n   * The time formatting down the left hand side of the day view\n   */\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(date, 'h a', null, locale);\n  }\n\n  /**\n   * The day view title\n   */\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\n    return new DatePipe(locale).transform(\n      date,\n      'EEEE, MMMM d, y',\n      null,\n      locale\n    );\n  }\n}\n","import { CalendarAngularDateFormatter } from './calendar-angular-date-formatter.provider';\n\n/**\n * This class is responsible for all formatting of dates. There are 3 implementations available, the `CalendarAngularDateFormatter` (default) which uses the angular date pipe to format dates, the `CalendarNativeDateFormatter` which will use the <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to format dates, or there is the `CalendarMomentDateFormatter` which uses <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a>.\n *\n * If you wish, you may override any of the defaults via angulars DI. For example:\n *\n * ```typescript\n * import { CalendarDateFormatter, DateFormatterParams } from 'angular-calendar';\n * import { DatePipe } from '@angular/common';\n *\n * class CustomDateFormatter extends CalendarDateFormatter {\n *\n *   public monthViewColumnHeader({date, locale}: DateFormatterParams): string {\n *     return new DatePipe(locale).transform(date, 'EEE', locale); // use short week days\n *   }\n *\n * }\n *\n * // in your component that uses the calendar\n * providers: [{\n *   provide: CalendarDateFormatter,\n *   useClass: CustomDateFormatter\n * }]\n * ```\n */\nexport class CalendarDateFormatter extends CalendarAngularDateFormatter {}\n","import { Pipe, PipeTransform, LOCALE_ID, Inject } from '@angular/core';\nimport { CalendarDateFormatter } from './calendar-date-formatter.provider';\n\n/**\n * This pipe is primarily for rendering the current view title. Example usage:\n * ```typescript\n * // where `viewDate` is a `Date` and view is `'month' | 'week' | 'day'`\n * {{ viewDate | calendarDate:(view + 'ViewTitle'):'en' }}\n * ```\n */\n@Pipe({\n  name: 'calendarDate'\n})\nexport class CalendarDatePipe implements PipeTransform {\n  constructor(\n    private dateFormatter: CalendarDateFormatter,\n    @Inject(LOCALE_ID) private locale: string\n  ) {}\n\n  transform(date: Date, method: string, locale: string = this.locale): string {\n    return this.dateFormatter[method]({ date, locale });\n  }\n}\n","import { CalendarEvent } from 'calendar-utils';\n\n/**\n * This class is responsible for displaying all event titles within the calendar. You may override any of its methods via angulars DI to suit your requirements. For example:\n *\n * ```typescript\n * import { CalendarEventTitleFormatter, CalendarEvent } from 'angular-calendar';\n *\n * class CustomEventTitleFormatter extends CalendarEventTitleFormatter {\n *\n *   month(event: CalendarEvent): string {\n *     return `Custom prefix: ${event.title}`;\n *   }\n *\n * }\n *\n * // in your component\n * providers: [{\n *  provide: CalendarEventTitleFormatter,\n *  useClass: CustomEventTitleFormatter\n * }]\n * ```\n */\nexport class CalendarEventTitleFormatter {\n  /**\n   * The month view event title.\n   */\n  month(event: CalendarEvent): string {\n    return event.title;\n  }\n\n  /**\n   * The month view event tooltip. Return a falsey value from this to disable the tooltip.\n   */\n  monthTooltip(event: CalendarEvent): string {\n    return event.title;\n  }\n\n  /**\n   * The week view event title.\n   */\n  week(event: CalendarEvent): string {\n    return event.title;\n  }\n\n  /**\n   * The week view event tooltip. Return a falsey value from this to disable the tooltip.\n   */\n  weekTooltip(event: CalendarEvent): string {\n    return event.title;\n  }\n\n  /**\n   * The day view event title.\n   */\n  day(event: CalendarEvent): string {\n    return event.title;\n  }\n\n  /**\n   * The day view event tooltip. Return a falsey value from this to disable the tooltip.\n   */\n  dayTooltip(event: CalendarEvent): string {\n    return event.title;\n  }\n}\n","import { Pipe, PipeTransform } from '@angular/core';\nimport { CalendarEvent } from 'calendar-utils';\nimport { CalendarEventTitleFormatter } from './calendar-event-title-formatter.provider';\n\n@Pipe({\n  name: 'calendarEventTitle'\n})\nexport class CalendarEventTitlePipe implements PipeTransform {\n  constructor(private calendarEventTitle: CalendarEventTitleFormatter) {}\n\n  transform(title: string, titleType: string, event: CalendarEvent): string {\n    return this.calendarEventTitle[titleType](event);\n  }\n}\n","import {\n  Directive,\n  Renderer2,\n  ElementRef,\n  OnInit,\n  OnDestroy,\n  Output,\n  EventEmitter\n} from '@angular/core';\n\n@Directive({\n  selector: '[mwlClick]'\n})\nexport class ClickDirective implements OnInit, OnDestroy {\n  @Output('mwlClick') click: EventEmitter<MouseEvent> = new EventEmitter(); // tslint:disable-line\n\n  private removeListener: () => void;\n\n  constructor(private renderer: Renderer2, private elm: ElementRef) {}\n\n  ngOnInit(): void {\n    const eventName: string =\n      typeof window !== 'undefined' && typeof window['Hammer'] !== 'undefined'\n        ? 'tap'\n        : 'click';\n    this.removeListener = this.renderer.listen(\n      this.elm.nativeElement,\n      eventName,\n      event => {\n        this.click.next(event);\n      }\n    );\n  }\n\n  ngOnDestroy(): void {\n    this.removeListener();\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {\n  getMonthView,\n  GetMonthViewArgs,\n  MonthView,\n  getWeekViewHeader,\n  GetWeekViewHeaderArgs,\n  WeekDay,\n  getWeekView,\n  GetWeekViewArgs,\n  getDayView,\n  GetDayViewArgs,\n  DayView,\n  getDayViewHourGrid,\n  GetDayViewHourGridArgs,\n  DayViewHour,\n  WeekView\n} from 'calendar-utils';\n\n@Injectable()\nexport class CalendarUtils {\n  getMonthView(args: GetMonthViewArgs): MonthView {\n    return getMonthView(args);\n  }\n\n  getWeekViewHeader(args: GetWeekViewHeaderArgs): WeekDay[] {\n    return getWeekViewHeader(args);\n  }\n\n  getWeekView(args: GetWeekViewArgs): WeekView {\n    return getWeekView(args);\n  }\n\n  getDayView(args: GetDayViewArgs): DayView {\n    return getDayView(args);\n  }\n\n  getDayViewHourGrid(args: GetDayViewHourGridArgs): DayViewHour[] {\n    return getDayViewHourGrid(args);\n  }\n}\n","import { InjectionToken, Inject } from '@angular/core';\nimport {\n  CalendarDateFormatterInterface,\n  DateFormatterParams\n} from './calendar-date-formatter.interface';\n\nexport const MOMENT: InjectionToken<string> = new InjectionToken('Moment');\n\n/**\n * This will use <a href=\"http://momentjs.com/\" target=\"_blank\">moment</a> to do all date formatting. To use this class:\n *\n * ```typescript\n * import { CalendarDateFormatter, CalendarMomentDateFormatter, MOMENT } from 'angular-calendar';\n * import moment from 'moment';\n *\n * // in your component\n * provide: [{\n *   provide: MOMENT, useValue: moment\n * }, {\n *   provide: CalendarDateFormatter, useClass: CalendarMomentDateFormatter\n * }]\n *\n * ```\n */\nexport class CalendarMomentDateFormatter\n  implements CalendarDateFormatterInterface {\n  /**\n   * @hidden\n   */\n  constructor(@Inject(MOMENT) private moment: any) {}\n\n  /**\n   * The month view header week day labels\n   */\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('dddd');\n  }\n\n  /**\n   * The month view cell day number\n   */\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('D');\n  }\n\n  /**\n   * The month view title\n   */\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('MMMM YYYY');\n  }\n\n  /**\n   * The week view header week day labels\n   */\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('dddd');\n  }\n\n  /**\n   * The week view sub header day and month labels\n   */\n  public weekViewColumnSubHeader({\n    date,\n    locale\n  }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('D MMM');\n  }\n\n  /**\n   * The week view title\n   */\n  public weekViewTitle({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('[Week] W [of] YYYY');\n  }\n\n  /**\n   * The time formatting down the left hand side of the day view\n   */\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('ha');\n  }\n\n  /**\n   * The day view title\n   */\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\n    return this.moment(date)\n      .locale(locale)\n      .format('dddd, D MMMM, YYYY');\n  }\n}\n","import {\n  CalendarDateFormatterInterface,\n  DateFormatterParams\n} from './calendar-date-formatter.interface';\nimport getISOWeek from 'date-fns/get_iso_week/index';\n\n/**\n * This will use <a href=\"https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Intl\" target=\"_blank\">Intl</a> API to do all date formatting.\n *\n * You will need to include a <a href=\"https://github.com/andyearnshaw/Intl.js/\">polyfill</a> for older browsers.\n */\nexport class CalendarNativeDateFormatter\n  implements CalendarDateFormatterInterface {\n  /**\n   * The month view header week day labels\n   */\n  public monthViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\n  }\n\n  /**\n   * The month view cell day number\n   */\n  public monthViewDayNumber({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { day: 'numeric' }).format(date);\n  }\n\n  /**\n   * The month view title\n   */\n  public monthViewTitle({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, {\n      year: 'numeric',\n      month: 'long'\n    }).format(date);\n  }\n\n  /**\n   * The week view header week day labels\n   */\n  public weekViewColumnHeader({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { weekday: 'long' }).format(date);\n  }\n\n  /**\n   * The week view sub header day and month labels\n   */\n  public weekViewColumnSubHeader({\n    date,\n    locale\n  }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, {\n      day: 'numeric',\n      month: 'short'\n    }).format(date);\n  }\n\n  /**\n   * The week view title\n   */\n  public weekViewTitle({ date, locale }: DateFormatterParams): string {\n    const year: string = new Intl.DateTimeFormat(locale, {\n      year: 'numeric'\n    }).format(date);\n    const weekNumber: number = getISOWeek(date);\n    return `Week ${weekNumber} of ${year}`;\n  }\n\n  /**\n   * The time formatting down the left hand side of the day view\n   */\n  public dayViewHour({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, { hour: 'numeric' }).format(date);\n  }\n\n  /**\n   * The day view title\n   */\n  public dayViewTitle({ date, locale }: DateFormatterParams): string {\n    return new Intl.DateTimeFormat(locale, {\n      day: 'numeric',\n      month: 'long',\n      year: 'numeric',\n      weekday: 'long'\n    }).format(date);\n  }\n}\n","import { ModuleWithProviders, NgModule, Provider } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DraggableHelper } from 'angular-draggable-droppable';\nimport { CalendarEventActionsComponent } from './calendar-event-actions.component';\nimport { CalendarEventTitleComponent } from './calendar-event-title.component';\nimport {\n  CalendarTooltipDirective,\n  CalendarTooltipWindowComponent\n} from './calendar-tooltip.directive';\nimport { CalendarPreviousViewDirective } from './calendar-previous-view.directive';\nimport { CalendarNextViewDirective } from './calendar-next-view.directive';\nimport { CalendarTodayDirective } from './calendar-today.directive';\nimport { CalendarDatePipe } from './calendar-date.pipe';\nimport { CalendarEventTitlePipe } from './calendar-event-title.pipe';\nimport { ClickDirective } from './click.directive';\nimport { CalendarEventTitleFormatter } from './calendar-event-title-formatter.provider';\nimport { CalendarDateFormatter } from './calendar-date-formatter.provider';\nimport { CalendarUtils } from './calendar-utils.provider';\n\nexport interface CalendarModuleConfig {\n  eventTitleFormatter?: Provider;\n  dateFormatter?: Provider;\n  utils?: Provider;\n}\n\nexport * from './calendar-event-title-formatter.provider';\nexport * from './calendar-moment-date-formatter.provider';\nexport * from './calendar-native-date-formatter.provider';\nexport * from './calendar-angular-date-formatter.provider';\nexport * from './calendar-date-formatter.provider';\nexport * from './calendar-utils.provider';\nexport * from './calendar-date-formatter.interface';\nexport * from './calendar-event-times-changed-event.interface';\n\nexport {\n  CalendarEvent,\n  EventAction as CalendarEventAction,\n  DAYS_OF_WEEK,\n  ViewPeriod as CalendarViewPeriod\n} from 'calendar-utils';\n\n/**\n * Import this module to if you're just using a singular view and want to save on bundle size. Example usage:\n *\n * ```typescript\n * import { CalendarCommonModule } from 'angular-calendar/modules/common';\n * import { CalendarMonthModule } from 'angular-calendar/modules/month';\n *\n * @NgModule({\n *   imports: [\n *     CalendarCommonModule.forRoot(),\n *     CalendarMonthModule\n *   ]\n * })\n * class MyModule {}\n * ```\n *\n */\n@NgModule({\n  declarations: [\n    CalendarEventActionsComponent,\n    CalendarEventTitleComponent,\n    CalendarTooltipWindowComponent,\n    CalendarTooltipDirective,\n    CalendarPreviousViewDirective,\n    CalendarNextViewDirective,\n    CalendarTodayDirective,\n    CalendarDatePipe,\n    CalendarEventTitlePipe,\n    ClickDirective\n  ],\n  imports: [CommonModule],\n  exports: [\n    CalendarEventActionsComponent,\n    CalendarEventTitleComponent,\n    CalendarTooltipWindowComponent,\n    CalendarTooltipDirective,\n    CalendarPreviousViewDirective,\n    CalendarNextViewDirective,\n    CalendarTodayDirective,\n    CalendarDatePipe,\n    CalendarEventTitlePipe,\n    ClickDirective\n  ],\n  entryComponents: [CalendarTooltipWindowComponent]\n})\nexport class CalendarCommonModule {\n  static forRoot(config: CalendarModuleConfig = {}): ModuleWithProviders {\n    return {\n      ngModule: CalendarCommonModule,\n      providers: [\n        DraggableHelper,\n        config.eventTitleFormatter || CalendarEventTitleFormatter,\n        config.dateFormatter || CalendarDateFormatter,\n        config.utils || CalendarUtils\n      ]\n    };\n  }\n}\n","import {\n  Component,\n  OnChanges,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  OnInit,\n  OnDestroy,\n  LOCALE_ID,\n  Inject,\n  TemplateRef\n} from '@angular/core';\nimport {\n  CalendarEvent,\n  WeekDay,\n  MonthView,\n  MonthViewDay,\n  ViewPeriod\n} from 'calendar-utils';\nimport { Subject, Subscription } from 'rxjs';\nimport isSameDay from 'date-fns/is_same_day/index';\nimport setDate from 'date-fns/set_date/index';\nimport setMonth from 'date-fns/set_month/index';\nimport setYear from 'date-fns/set_year/index';\nimport getDate from 'date-fns/get_date/index';\nimport getMonth from 'date-fns/get_month/index';\nimport getYear from 'date-fns/get_year/index';\nimport differenceInSeconds from 'date-fns/difference_in_seconds/index';\nimport addSeconds from 'date-fns/add_seconds/index';\nimport { CalendarEventTimesChangedEvent } from '../common/calendar-event-times-changed-event.interface';\nimport { CalendarUtils } from '../common/calendar-utils.provider';\nimport { validateEvents, trackByIndex } from '../common/util';\n\nexport interface CalendarMonthViewBeforeRenderEvent {\n  header: WeekDay[];\n  body: MonthViewDay[];\n  period: ViewPeriod;\n}\n\nexport interface CalendarMonthViewEventTimesChangedEvent\n  extends CalendarEventTimesChangedEvent {\n  day: MonthViewDay;\n}\n\n/**\n * Shows all events on a given month. Example usage:\n *\n * ```typescript\n * <mwl-calendar-month-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-month-view>\n * ```\n */\n@Component({\n  selector: 'mwl-calendar-month-view',\n  template: `\n    <div class=\"cal-month-view\">\n      <mwl-calendar-month-view-header\n        [days]=\"columnHeaders\"\n        [locale]=\"locale\"\n        [customTemplate]=\"headerTemplate\">\n      </mwl-calendar-month-view-header>\n      <div class=\"cal-days\">\n        <div *ngFor=\"let rowIndex of view.rowOffsets; trackByIndex\">\n          <div class=\"cal-cell-row\">\n            <mwl-calendar-month-cell\n              *ngFor=\"let day of (view.days | slice : rowIndex : rowIndex + (view.totalDaysVisibleInWeek)); trackBy:trackByDate\"\n              [class.cal-drag-over]=\"day.dragOver\"\n              [ngClass]=\"day?.cssClass\"\n              [day]=\"day\"\n              [openDay]=\"openDay\"\n              [locale]=\"locale\"\n              [tooltipPlacement]=\"tooltipPlacement\"\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [customTemplate]=\"cellTemplate\"\n              (click)=\"handleDayClick($event, day)\"\n              (highlightDay)=\"toggleDayHighlight($event.event, true)\"\n              (unhighlightDay)=\"toggleDayHighlight($event.event, false)\"\n              mwlDroppable\n              (dragEnter)=\"day.dragOver = true\"\n              (dragLeave)=\"day.dragOver = false\"\n              (drop)=\"day.dragOver = false; eventDropped(day, $event.dropData.event)\"\n              (eventClicked)=\"eventClicked.emit({event: $event.event})\">\n            </mwl-calendar-month-cell>\n          </div>\n          <mwl-calendar-open-day-events\n            [isOpen]=\"openRowIndex === rowIndex\"\n            [events]=\"openDay?.events\"\n            [customTemplate]=\"openDayEventsTemplate\"\n            [eventTitleTemplate]=\"eventTitleTemplate\"\n            (eventClicked)=\"eventClicked.emit({event: $event.event})\">\n          </mwl-calendar-open-day-events>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class CalendarMonthViewComponent\n  implements OnChanges, OnInit, OnDestroy {\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * An array of events to display on view.\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n   */\n  @Input() events: CalendarEvent[] = [];\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n   */\n  @Input() excludeDays: number[] = [];\n\n  /**\n   * Whether the events list for the day of the `viewDate` option is visible or not\n   */\n  @Input() activeDayIsOpen: boolean = false;\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n  @Input() refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n  @Input() locale: string;\n\n  /**\n   * The placement of the event tooltip\n   */\n  @Input() tooltipPlacement: string = 'top';\n\n  /**\n   * A custom template to use for the event tooltips\n   */\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  /**\n   * Whether to append tooltips to the body or next to the trigger element\n   */\n  @Input() tooltipAppendToBody: boolean = true;\n\n  /**\n   * The start number of the week\n   */\n  @Input() weekStartsOn: number;\n\n  /**\n   * A custom template to use to replace the header\n   */\n  @Input() headerTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use to replace the day cell\n   */\n  @Input() cellTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for the slide down box of events for the active day\n   */\n  @Input() openDayEventsTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event titles\n   */\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that indicate which days are weekends\n   */\n  @Input() weekendDays: number[];\n\n  /**\n   * An output that will be called before the view is rendered for the current month.\n   * If you add the `cssClass` property to a day in the body it will add that class to the cell element in the template\n   */\n  @Output()\n  beforeViewRender = new EventEmitter<CalendarMonthViewBeforeRenderEvent>();\n\n  /**\n   * Called when the day cell is clicked\n   */\n  @Output()\n  dayClicked = new EventEmitter<{\n    day: MonthViewDay;\n  }>();\n\n  /**\n   * Called when the event title is clicked\n   */\n  @Output()\n  eventClicked = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  /**\n   * Called when an event is dragged and dropped\n   */\n  @Output()\n  eventTimesChanged = new EventEmitter<\n    CalendarMonthViewEventTimesChangedEvent\n  >();\n\n  /**\n   * @hidden\n   */\n  columnHeaders: WeekDay[];\n\n  /**\n   * @hidden\n   */\n  view: MonthView;\n\n  /**\n   * @hidden\n   */\n  openRowIndex: number;\n\n  /**\n   * @hidden\n   */\n  openDay: MonthViewDay;\n\n  /**\n   * @hidden\n   */\n  refreshSubscription: Subscription;\n\n  /**\n   * @hidden\n   */\n  trackByIndex = trackByIndex;\n\n  /**\n   * @hidden\n   */\n  trackByDate = (index: number, day: MonthViewDay) => day.date.toISOString();\n\n  /**\n   * @hidden\n   */\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private utils: CalendarUtils,\n    @Inject(LOCALE_ID) locale: string\n  ) {\n    this.locale = locale;\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.refreshAll();\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: any): void {\n    if (changes.viewDate || changes.excludeDays || changes.weekendDays) {\n      this.refreshHeader();\n    }\n\n    if (changes.events) {\n      validateEvents(this.events);\n    }\n\n    if (\n      changes.viewDate ||\n      changes.events ||\n      changes.excludeDays ||\n      changes.weekendDays\n    ) {\n      this.refreshBody();\n    }\n\n    if (\n      changes.activeDayIsOpen ||\n      changes.viewDate ||\n      changes.events ||\n      changes.excludeDays\n    ) {\n      this.checkActiveDayIsOpen();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  toggleDayHighlight(event: CalendarEvent, isHighlighted: boolean): void {\n    this.view.days.forEach(day => {\n      if (isHighlighted && day.events.indexOf(event) > -1) {\n        day.backgroundColor =\n          (event.color && event.color.secondary) || '#D1E8FF';\n      } else {\n        delete day.backgroundColor;\n      }\n    });\n  }\n\n  /**\n   * @hidden\n   */\n  eventDropped(day: MonthViewDay, event: CalendarEvent): void {\n    const year: number = getYear(day.date);\n    const month: number = getMonth(day.date);\n    const date: number = getDate(day.date);\n    const newStart: Date = setDate(\n      setMonth(setYear(event.start, year), month),\n      date\n    );\n    let newEnd: Date;\n    if (event.end) {\n      const secondsDiff: number = differenceInSeconds(newStart, event.start);\n      newEnd = addSeconds(event.end, secondsDiff);\n    }\n    this.eventTimesChanged.emit({ event, newStart, newEnd, day });\n  }\n\n  /**\n   * @hidden\n   */\n  handleDayClick(clickEvent: any, day: MonthViewDay) {\n    // when using hammerjs, stopPropagation doesn't work. See https://github.com/mattlewis92/angular-calendar/issues/318\n    if (!clickEvent.target.classList.contains('cal-event')) {\n      this.dayClicked.emit({ day });\n    }\n  }\n\n  private refreshHeader(): void {\n    this.columnHeaders = this.utils.getWeekViewHeader({\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      weekendDays: this.weekendDays\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private refreshBody(): void {\n    this.view = this.utils.getMonthView({\n      events: this.events,\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      weekendDays: this.weekendDays\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private checkActiveDayIsOpen(): void {\n    if (this.activeDayIsOpen === true) {\n      this.openDay = this.view.days.find(day =>\n        isSameDay(day.date, this.viewDate)\n      );\n      const index: number = this.view.days.indexOf(this.openDay);\n      this.openRowIndex =\n        Math.floor(index / this.view.totalDaysVisibleInWeek) *\n        this.view.totalDaysVisibleInWeek;\n    } else {\n      this.openRowIndex = null;\n      this.openDay = null;\n    }\n  }\n\n  private refreshAll(): void {\n    this.columnHeaders = null;\n    this.view = null;\n    this.refreshHeader();\n    this.refreshBody();\n    this.checkActiveDayIsOpen();\n  }\n\n  private emitBeforeViewRender(): void {\n    if (this.columnHeaders && this.view) {\n      this.beforeViewRender.emit({\n        header: this.columnHeaders,\n        body: this.view.days,\n        period: this.view.period\n      });\n    }\n  }\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { WeekDay } from 'calendar-utils';\nimport { trackByWeekDayHeaderDate } from '../common/util';\n\n@Component({\n  selector: 'mwl-calendar-month-view-header',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-days=\"days\"\n      let-locale=\"locale\">\n      <div class=\"cal-cell-row cal-header\">\n        <div\n          class=\"cal-cell\"\n          *ngFor=\"let day of days; trackBy:trackByWeekDayHeaderDate\"\n          [class.cal-past]=\"day.isPast\"\n          [class.cal-today]=\"day.isToday\"\n          [class.cal-future]=\"day.isFuture\"\n          [class.cal-weekend]=\"day.isWeekend\"\n          [ngClass]=\"day.cssClass\">\n          {{ day.date | calendarDate:'monthViewColumnHeader':locale }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{days: days, locale: locale}\">\n    </ng-template>\n  `\n})\nexport class CalendarMonthViewHeaderComponent {\n  @Input() days: WeekDay[];\n\n  @Input() locale: string;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { MonthViewDay, CalendarEvent } from 'calendar-utils';\nimport { trackByEventId } from '../common/util';\n\n@Component({\n  selector: 'mwl-calendar-month-cell',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-day=\"day\"\n      let-openDay=\"openDay\"\n      let-locale=\"locale\"\n      let-tooltipPlacement=\"tooltipPlacement\"\n      let-highlightDay=\"highlightDay\"\n      let-unhighlightDay=\"unhighlightDay\"\n      let-eventClicked=\"eventClicked\"\n      let-tooltipTemplate=\"tooltipTemplate\"\n      let-tooltipAppendToBody=\"tooltipAppendToBody\">\n      <div class=\"cal-cell-top\">\n        <span class=\"cal-day-badge\" *ngIf=\"day.badgeTotal > 0\">{{ day.badgeTotal }}</span>\n        <span class=\"cal-day-number\">{{ day.date | calendarDate:'monthViewDayNumber':locale }}</span>\n      </div>\n      <div class=\"cal-events\" *ngIf=\"day.events.length > 0\">\n        <div\n          class=\"cal-event\"\n          *ngFor=\"let event of day.events; trackBy:trackByEventId\"\n          [style.backgroundColor]=\"event.color?.primary\"\n          [ngClass]=\"event?.cssClass\"\n          (mouseenter)=\"highlightDay.emit({event: event})\"\n          (mouseleave)=\"unhighlightDay.emit({event: event})\"\n          [mwlCalendarTooltip]=\"event.title | calendarEventTitle:'monthTooltip':event\"\n          [tooltipPlacement]=\"tooltipPlacement\"\n          [tooltipEvent]=\"event\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [tooltipAppendToBody]=\"tooltipAppendToBody\"\n          mwlDraggable\n          [dropData]=\"{event: event}\"\n          [dragAxis]=\"{x: event.draggable, y: event.draggable}\"\n          (mwlClick)=\"eventClicked.emit({ event: event })\">\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        day: day,\n        openDay: openDay,\n        locale: locale,\n        tooltipPlacement: tooltipPlacement,\n        highlightDay: highlightDay,\n        unhighlightDay: unhighlightDay,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody\n      }\">\n    </ng-template>\n  `,\n  host: {\n    class: 'cal-cell cal-day-cell',\n    '[class.cal-past]': 'day.isPast',\n    '[class.cal-today]': 'day.isToday',\n    '[class.cal-future]': 'day.isFuture',\n    '[class.cal-weekend]': 'day.isWeekend',\n    '[class.cal-in-month]': 'day.inMonth',\n    '[class.cal-out-month]': '!day.inMonth',\n    '[class.cal-has-events]': 'day.events.length > 0',\n    '[class.cal-open]': 'day === openDay',\n    '[style.backgroundColor]': 'day.backgroundColor'\n  }\n})\nexport class CalendarMonthCellComponent {\n  @Input() day: MonthViewDay;\n\n  @Input() openDay: MonthViewDay;\n\n  @Input() locale: string;\n\n  @Input() tooltipPlacement: string;\n\n  @Input() tooltipAppendToBody: boolean;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Output() highlightDay: EventEmitter<any> = new EventEmitter();\n\n  @Output() unhighlightDay: EventEmitter<any> = new EventEmitter();\n\n  @Output()\n  eventClicked: EventEmitter<{ event: CalendarEvent }> = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  trackByEventId = trackByEventId;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { trigger, style, transition, animate } from '@angular/animations';\nimport { CalendarEvent } from 'calendar-utils';\nimport { trackByEventId } from '../common/util';\n\n@Component({\n  selector: 'mwl-calendar-open-day-events',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-events=\"events\"\n      let-eventClicked=\"eventClicked\">\n      <div\n        *ngFor=\"let event of events; trackBy:trackByEventId\"\n        [ngClass]=\"event?.cssClass\"\n        mwlDraggable\n        [dropData]=\"{event: event}\"\n        [dragAxis]=\"{x: event.draggable, y: event.draggable}\">\n        <span\n          class=\"cal-event\"\n          [style.backgroundColor]=\"event.color?.primary\">\n        </span>\n        &ngsp;\n        <mwl-calendar-event-title\n          [event]=\"event\"\n          [customTemplate]=\"eventTitleTemplate\"\n          view=\"month\"\n          (mwlClick)=\"eventClicked.emit({event: event})\">\n        </mwl-calendar-event-title>\n        &ngsp;\n        <mwl-calendar-event-actions [event]=\"event\"></mwl-calendar-event-actions>\n      </div>\n    </ng-template>\n    <div class=\"cal-open-day-events\" [@collapse] *ngIf=\"isOpen\">\n      <ng-template\n        [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n        [ngTemplateOutletContext]=\"{\n          events: events,\n          eventClicked: eventClicked\n        }\">\n      </ng-template>\n    </div>\n  `,\n  animations: [\n    trigger('collapse', [\n      transition('void => *', [\n        style({ height: 0, overflow: 'hidden' }),\n        animate('150ms', style({ height: '*' }))\n      ]),\n      transition('* => void', [\n        style({ height: '*', overflow: 'hidden' }),\n        animate('150ms', style({ height: 0 }))\n      ])\n    ])\n  ]\n})\nexport class CalendarOpenDayEventsComponent {\n  @Input() isOpen: boolean = false;\n\n  @Input() events: CalendarEvent[];\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  @Output()\n  eventClicked: EventEmitter<{ event: CalendarEvent }> = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  trackByEventId = trackByEventId;\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { DragAndDropModule } from 'angular-draggable-droppable';\nimport { CalendarMonthViewComponent } from './calendar-month-view.component';\nimport { CalendarMonthViewHeaderComponent } from './calendar-month-view-header.component';\nimport { CalendarMonthCellComponent } from './calendar-month-cell.component';\nimport { CalendarOpenDayEventsComponent } from './calendar-open-day-events.component';\nimport { CalendarCommonModule } from '../common/calendar-common.module';\n\nexport {\n  CalendarMonthViewComponent,\n  CalendarMonthViewBeforeRenderEvent,\n  CalendarMonthViewEventTimesChangedEvent\n} from './calendar-month-view.component';\nexport { MonthViewDay as CalendarMonthViewDay } from 'calendar-utils';\n\n@NgModule({\n  imports: [CommonModule, DragAndDropModule, CalendarCommonModule],\n  declarations: [\n    CalendarMonthViewComponent,\n    CalendarMonthCellComponent,\n    CalendarOpenDayEventsComponent,\n    CalendarMonthViewHeaderComponent\n  ],\n  exports: [\n    DragAndDropModule,\n    CalendarMonthViewComponent,\n    CalendarMonthCellComponent,\n    CalendarOpenDayEventsComponent,\n    CalendarMonthViewHeaderComponent\n  ]\n})\nexport class CalendarMonthModule {}\n","import { isInside } from './util';\n\nexport class CalendarDragHelper {\n  startPosition: ClientRect;\n\n  constructor(\n    private dragContainerElement: HTMLElement,\n    draggableElement: HTMLElement\n  ) {\n    this.startPosition = draggableElement.getBoundingClientRect();\n  }\n\n  validateDrag({ x, y }: { x: number; y: number }): boolean {\n    const newRect: ClientRect = Object.assign({}, this.startPosition, {\n      left: this.startPosition.left + x,\n      right: this.startPosition.right + x,\n      top: this.startPosition.top + y,\n      bottom: this.startPosition.bottom + y\n    });\n\n    return isInside(this.dragContainerElement.getBoundingClientRect(), newRect);\n  }\n}\n","import { isInside } from './util';\n\nexport class CalendarResizeHelper {\n  constructor(\n    private resizeContainerElement: HTMLElement,\n    private minWidth?: number\n  ) {}\n\n  validateResize({ rectangle }: { rectangle: ClientRect }): boolean {\n    if (this.minWidth && rectangle.width < this.minWidth) {\n      return false;\n    }\n\n    return isInside(\n      this.resizeContainerElement.getBoundingClientRect(),\n      rectangle\n    );\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  OnChanges,\n  OnInit,\n  OnDestroy,\n  LOCALE_ID,\n  Inject,\n  TemplateRef\n} from '@angular/core';\nimport { Subject, Subscription } from 'rxjs';\nimport {\n  WeekDay,\n  CalendarEvent,\n  WeekViewEvent,\n  WeekView,\n  ViewPeriod\n} from 'calendar-utils';\nimport { ResizeEvent } from 'angular-resizable-element';\nimport addDays from 'date-fns/add_days/index';\nimport { CalendarDragHelper } from '../common/calendar-drag-helper.provider';\nimport { CalendarResizeHelper } from '../common/calendar-resize-helper.provider';\nimport { CalendarEventTimesChangedEvent } from '../common/calendar-event-times-changed-event.interface';\nimport { CalendarUtils } from '../common/calendar-utils.provider';\nimport { validateEvents, trackByIndex } from '../common/util';\n\nexport interface WeekViewEventResize {\n  originalOffset: number;\n  originalSpan: number;\n  edge: string;\n}\n\nexport interface CalendarWeekViewBeforeRenderEvent {\n  header: WeekDay[];\n  period: ViewPeriod;\n}\n\n/**\n * Shows all events on a given week. Example usage:\n *\n * ```typescript\n * <mwl-calendar-week-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-week-view>\n * ```\n */\n@Component({\n  selector: 'mwl-calendar-week-view',\n  template: `\n    <div class=\"cal-week-view\" #weekViewContainer>\n      <mwl-calendar-week-view-header\n        [days]=\"days\"\n        [locale]=\"locale\"\n        [customTemplate]=\"headerTemplate\"\n        (dayHeaderClicked)=\"dayHeaderClicked.emit($event)\"\n        (eventDropped)=\"eventTimesChanged.emit($event)\">\n      </mwl-calendar-week-view-header>\n      <div *ngFor=\"let eventRow of view.eventRows; trackBy:trackByIndex\" #eventRowContainer class=\"cal-events-row\">\n        <div\n          *ngFor=\"let weekEvent of eventRow.row; trackBy:trackByEventId\"\n          #event\n          class=\"cal-event-container\"\n          [class.cal-draggable]=\"weekEvent.event.draggable\"\n          [class.cal-starts-within-week]=\"!weekEvent.startsBeforeWeek\"\n          [class.cal-ends-within-week]=\"!weekEvent.endsAfterWeek\"\n          [ngClass]=\"weekEvent.event?.cssClass\"\n          [style.width]=\"((100 / days.length) * weekEvent.span) + '%'\"\n          [style.marginLeft]=\"((100 / days.length) * weekEvent.offset) + '%'\"\n          mwlResizable\n          [resizeEdges]=\"{left: weekEvent.event?.resizable?.beforeStart, right: weekEvent.event?.resizable?.afterEnd}\"\n          [resizeSnapGrid]=\"{left: dayColumnWidth, right: dayColumnWidth}\"\n          [validateResize]=\"validateResize\"\n          (resizeStart)=\"resizeStarted(weekViewContainer, weekEvent, $event)\"\n          (resizing)=\"resizing(weekEvent, $event, dayColumnWidth)\"\n          (resizeEnd)=\"resizeEnded(weekEvent)\"\n          mwlDraggable\n          [dragAxis]=\"{x: weekEvent.event.draggable && currentResizes.size === 0, y: false}\"\n          [dragSnapGrid]=\"{x: dayColumnWidth}\"\n          [validateDrag]=\"validateDrag\"\n          (dragPointerDown)=\"dragStart(weekViewContainer, event)\"\n          (dragEnd)=\"eventDragged(weekEvent, $event.x, dayColumnWidth)\">\n          <mwl-calendar-week-view-event\n            [weekEvent]=\"weekEvent\"\n            [tooltipPlacement]=\"tooltipPlacement\"\n            [tooltipTemplate]=\"tooltipTemplate\"\n            [tooltipAppendToBody]=\"tooltipAppendToBody\"\n            [customTemplate]=\"eventTemplate\"\n            [eventTitleTemplate]=\"eventTitleTemplate\"\n            (eventClicked)=\"eventClicked.emit({event: weekEvent.event})\">\n          </mwl-calendar-week-view-event>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class CalendarWeekViewComponent implements OnChanges, OnInit, OnDestroy {\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * An array of events to display on view\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n   */\n  @Input() events: CalendarEvent[] = [];\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that will be hidden on the view\n   */\n  @Input() excludeDays: number[] = [];\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n  @Input() refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n  @Input() locale: string;\n\n  /**\n   * The placement of the event tooltip\n   */\n  @Input() tooltipPlacement: string = 'bottom';\n\n  /**\n   * A custom template to use for the event tooltips\n   */\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  /**\n   * Whether to append tooltips to the body or next to the trigger element\n   */\n  @Input() tooltipAppendToBody: boolean = true;\n\n  /**\n   * The start number of the week\n   */\n  @Input() weekStartsOn: number;\n\n  /**\n   * A custom template to use to replace the header\n   */\n  @Input() headerTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for week view events\n   */\n  @Input() eventTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event titles\n   */\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  /**\n   * The precision to display events.\n   * `days` will round event start and end dates to the nearest day and `minutes` will not do this rounding\n   */\n  @Input() precision: 'days' | 'minutes' = 'days';\n\n  /**\n   * An array of day indexes (0 = sunday, 1 = monday etc) that indicate which days are weekends\n   */\n  @Input() weekendDays: number[];\n\n  /**\n   * Called when a header week day is clicked. Adding a `cssClass` property on `$event.day` will add that class to the header element\n   */\n  @Output()\n  dayHeaderClicked: EventEmitter<{ day: WeekDay }> = new EventEmitter<{\n    day: WeekDay;\n  }>();\n\n  /**\n   * Called when the event title is clicked\n   */\n  @Output()\n  eventClicked: EventEmitter<{ event: CalendarEvent }> = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  /**\n   * Called when an event is resized or dragged and dropped\n   */\n  @Output()\n  eventTimesChanged: EventEmitter<\n    CalendarEventTimesChangedEvent\n  > = new EventEmitter<CalendarEventTimesChangedEvent>();\n\n  /**\n   * An output that will be called before the view is rendered for the current week.\n   * If you add the `cssClass` property to a day in the header it will add that class to the cell element in the template\n   */\n  @Output()\n  beforeViewRender = new EventEmitter<CalendarWeekViewBeforeRenderEvent>();\n\n  /**\n   * @hidden\n   */\n  days: WeekDay[];\n\n  /**\n   * @hidden\n   */\n  view: WeekView;\n\n  /**\n   * @hidden\n   */\n  refreshSubscription: Subscription;\n\n  /**\n   * @hidden\n   */\n  currentResizes: Map<WeekViewEvent, WeekViewEventResize> = new Map();\n\n  /**\n   * @hidden\n   */\n  validateDrag: (args: any) => boolean;\n\n  /**\n   * @hidden\n   */\n  validateResize: (args: any) => boolean;\n\n  /**\n   * @hidden\n   */\n  dayColumnWidth: number;\n\n  /**\n   * @hidden\n   */\n  trackByIndex = trackByIndex;\n\n  /**\n   * @hidden\n   */\n  trackByEventId = (index: number, weekEvent: WeekViewEvent) =>\n    weekEvent.event.id ? weekEvent.event.id : weekEvent;\n\n  /**\n   * @hidden\n   */\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private utils: CalendarUtils,\n    @Inject(LOCALE_ID) locale: string\n  ) {\n    this.locale = locale;\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.refreshAll();\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: any): void {\n    if (changes.viewDate || changes.excludeDays || changes.weekendDays) {\n      this.refreshHeader();\n    }\n\n    if (changes.events) {\n      validateEvents(this.events);\n    }\n\n    if (changes.events || changes.viewDate || changes.excludeDays) {\n      this.refreshBody();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  resizeStarted(\n    weekViewContainer: HTMLElement,\n    weekEvent: WeekViewEvent,\n    resizeEvent: ResizeEvent\n  ): void {\n    this.currentResizes.set(weekEvent, {\n      originalOffset: weekEvent.offset,\n      originalSpan: weekEvent.span,\n      edge: typeof resizeEvent.edges.left !== 'undefined' ? 'left' : 'right'\n    });\n    this.dayColumnWidth = this.getDayColumnWidth(weekViewContainer);\n    const resizeHelper: CalendarResizeHelper = new CalendarResizeHelper(\n      weekViewContainer,\n      this.dayColumnWidth\n    );\n    this.validateResize = ({ rectangle }) =>\n      resizeHelper.validateResize({ rectangle });\n    this.cdr.markForCheck();\n  }\n\n  /**\n   * @hidden\n   */\n  resizing(\n    weekEvent: WeekViewEvent,\n    resizeEvent: ResizeEvent,\n    dayWidth: number\n  ): void {\n    const currentResize: WeekViewEventResize = this.currentResizes.get(\n      weekEvent\n    );\n\n    if (resizeEvent.edges.left) {\n      const diff: number = Math.round(+resizeEvent.edges.left / dayWidth);\n      weekEvent.offset = currentResize.originalOffset + diff;\n      weekEvent.span = currentResize.originalSpan - diff;\n    } else if (resizeEvent.edges.right) {\n      const diff: number = Math.round(+resizeEvent.edges.right / dayWidth);\n      weekEvent.span = currentResize.originalSpan + diff;\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  resizeEnded(weekEvent: WeekViewEvent): void {\n    const currentResize: WeekViewEventResize = this.currentResizes.get(\n      weekEvent\n    );\n\n    let daysDiff: number;\n    if (currentResize.edge === 'left') {\n      daysDiff = weekEvent.offset - currentResize.originalOffset;\n    } else {\n      daysDiff = weekEvent.span - currentResize.originalSpan;\n    }\n\n    weekEvent.offset = currentResize.originalOffset;\n    weekEvent.span = currentResize.originalSpan;\n\n    let newStart: Date = weekEvent.event.start;\n    let newEnd: Date = weekEvent.event.end;\n    if (currentResize.edge === 'left') {\n      newStart = addDays(newStart, daysDiff);\n    } else if (newEnd) {\n      newEnd = addDays(newEnd, daysDiff);\n    }\n\n    this.eventTimesChanged.emit({ newStart, newEnd, event: weekEvent.event });\n    this.currentResizes.delete(weekEvent);\n  }\n\n  /**\n   * @hidden\n   */\n  eventDragged(\n    weekEvent: WeekViewEvent,\n    draggedByPx: number,\n    dayWidth: number\n  ): void {\n    const daysDragged: number = draggedByPx / dayWidth;\n    const newStart: Date = addDays(weekEvent.event.start, daysDragged);\n    let newEnd: Date;\n    if (weekEvent.event.end) {\n      newEnd = addDays(weekEvent.event.end, daysDragged);\n    }\n\n    this.eventTimesChanged.emit({ newStart, newEnd, event: weekEvent.event });\n  }\n\n  /**\n   * @hidden\n   */\n  getDayColumnWidth(eventRowContainer: HTMLElement): number {\n    return Math.floor(eventRowContainer.offsetWidth / this.days.length);\n  }\n\n  /**\n   * @hidden\n   */\n  dragStart(weekViewContainer: HTMLElement, event: HTMLElement): void {\n    this.dayColumnWidth = this.getDayColumnWidth(weekViewContainer);\n    const dragHelper: CalendarDragHelper = new CalendarDragHelper(\n      weekViewContainer,\n      event\n    );\n    this.validateDrag = ({ x, y }) =>\n      this.currentResizes.size === 0 && dragHelper.validateDrag({ x, y });\n    this.cdr.markForCheck();\n  }\n\n  private refreshHeader(): void {\n    this.days = this.utils.getWeekViewHeader({\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      weekendDays: this.weekendDays\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private refreshBody(): void {\n    this.view = this.utils.getWeekView({\n      events: this.events,\n      viewDate: this.viewDate,\n      weekStartsOn: this.weekStartsOn,\n      excluded: this.excludeDays,\n      precision: this.precision,\n      absolutePositionedEvents: true\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private refreshAll(): void {\n    this.refreshHeader();\n    this.refreshBody();\n  }\n\n  private emitBeforeViewRender(): void {\n    if (this.days && this.view) {\n      this.beforeViewRender.emit({\n        header: this.days,\n        period: this.view.period\n      });\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { CalendarEvent, WeekDay } from 'calendar-utils';\nimport { trackByWeekDayHeaderDate } from '../common/util';\n\n@Component({\n  selector: 'mwl-calendar-week-view-header',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-days=\"days\"\n      let-locale=\"locale\"\n      let-dayHeaderClicked=\"dayHeaderClicked\"\n      let-eventDropped=\"eventDropped\">\n      <div class=\"cal-day-headers\">\n        <div\n          class=\"cal-header\"\n          *ngFor=\"let day of days; trackBy:trackByWeekDayHeaderDate\"\n          [class.cal-past]=\"day.isPast\"\n          [class.cal-today]=\"day.isToday\"\n          [class.cal-future]=\"day.isFuture\"\n          [class.cal-weekend]=\"day.isWeekend\"\n          [class.cal-drag-over]=\"day.dragOver\"\n          [ngClass]=\"day.cssClass\"\n          (mwlClick)=\"dayHeaderClicked.emit({day: day})\"\n          mwlDroppable\n          (dragEnter)=\"day.dragOver = true\"\n          (dragLeave)=\"day.dragOver = false\"\n          (drop)=\"day.dragOver = false; eventDropped.emit({event: $event.dropData.event, newStart: day.date})\">\n          <b>{{ day.date | calendarDate:'weekViewColumnHeader':locale }}</b><br>\n          <span>{{ day.date | calendarDate:'weekViewColumnSubHeader':locale }}</span>\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{days: days, locale: locale, dayHeaderClicked: dayHeaderClicked, eventDropped: eventDropped}\">\n    </ng-template>\n  `\n})\nexport class CalendarWeekViewHeaderComponent {\n  @Input() days: WeekDay[];\n\n  @Input() locale: string;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Output()\n  dayHeaderClicked: EventEmitter<{ day: WeekDay }> = new EventEmitter<{\n    day: WeekDay;\n  }>();\n\n  @Output()\n  eventDropped: EventEmitter<{\n    event: CalendarEvent;\n    newStart: Date;\n  }> = new EventEmitter<{ event: CalendarEvent; newStart: Date }>();\n\n  trackByWeekDayHeaderDate = trackByWeekDayHeaderDate;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { WeekViewEvent } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-week-view-event',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-weekEvent=\"weekEvent\"\n      let-tooltipPlacement=\"tooltipPlacement\"\n      let-eventClicked=\"eventClicked\"\n      let-tooltipTemplate=\"tooltipTemplate\"\n      let-tooltipAppendToBody=\"tooltipAppendToBody\">\n      <div\n        class=\"cal-event\"\n        [style.backgroundColor]=\"weekEvent.event.color?.secondary\"\n        [style.borderColor]=\"weekEvent.event.color?.primary\"\n        [mwlCalendarTooltip]=\"weekEvent.event.title | calendarEventTitle:'weekTooltip':weekEvent.event\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipEvent]=\"weekEvent.event\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipAppendToBody]=\"tooltipAppendToBody\">\n        <mwl-calendar-event-actions [event]=\"weekEvent.event\"></mwl-calendar-event-actions>\n        &ngsp;\n        <mwl-calendar-event-title\n          [event]=\"weekEvent.event\"\n          [customTemplate]=\"eventTitleTemplate\"\n          view=\"week\"\n          (mwlClick)=\"eventClicked.emit()\">\n        </mwl-calendar-event-title>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        weekEvent: weekEvent,\n        tooltipPlacement: tooltipPlacement,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarWeekViewEventComponent {\n  @Input() weekEvent: WeekViewEvent;\n\n  @Input() tooltipPlacement: string;\n\n  @Input() tooltipAppendToBody: boolean;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Output() eventClicked: EventEmitter<any> = new EventEmitter();\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ResizableModule } from 'angular-resizable-element';\nimport { DragAndDropModule } from 'angular-draggable-droppable';\nimport { CalendarWeekViewComponent } from './calendar-week-view.component';\nimport { CalendarWeekViewHeaderComponent } from './calendar-week-view-header.component';\nimport { CalendarWeekViewEventComponent } from './calendar-week-view-event.component';\nimport { CalendarCommonModule } from '../common/calendar-common.module';\n\nexport {\n  CalendarWeekViewComponent,\n  CalendarWeekViewBeforeRenderEvent\n} from './calendar-week-view.component';\nexport {\n  WeekViewEvent as CalendarWeekViewEvent,\n  WeekViewEventRow as CalendarWeekViewEventRow,\n  GetWeekViewArgs as CalendarGetWeekViewArgs\n} from 'calendar-utils';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ResizableModule,\n    DragAndDropModule,\n    CalendarCommonModule\n  ],\n  declarations: [\n    CalendarWeekViewComponent,\n    CalendarWeekViewHeaderComponent,\n    CalendarWeekViewEventComponent\n  ],\n  exports: [\n    ResizableModule,\n    DragAndDropModule,\n    CalendarWeekViewComponent,\n    CalendarWeekViewHeaderComponent,\n    CalendarWeekViewEventComponent\n  ]\n})\nexport class CalendarWeekModule {}\n","import {\n  Component,\n  Input,\n  OnChanges,\n  Output,\n  EventEmitter,\n  ChangeDetectorRef,\n  LOCALE_ID,\n  Inject,\n  OnInit,\n  OnDestroy,\n  TemplateRef\n} from '@angular/core';\nimport {\n  CalendarEvent,\n  DayView,\n  DayViewHour,\n  DayViewHourSegment,\n  DayViewEvent,\n  ViewPeriod\n} from 'calendar-utils';\nimport { Subject, Subscription } from 'rxjs';\nimport { ResizeEvent } from 'angular-resizable-element';\nimport addMinutes from 'date-fns/add_minutes/index';\nimport { CalendarDragHelper } from '../common/calendar-drag-helper.provider';\nimport { CalendarResizeHelper } from '../common/calendar-resize-helper.provider';\nimport { CalendarEventTimesChangedEvent } from '../common/calendar-event-times-changed-event.interface';\nimport { CalendarUtils } from '../common/calendar-utils.provider';\nimport { validateEvents, trackByEventId } from '../common/util';\n\nexport interface CalendarDayViewBeforeRenderEvent {\n  body: {\n    hourGrid: DayViewHour[];\n  };\n  period: ViewPeriod;\n}\n\n/**\n * @hidden\n */\nconst MINUTES_IN_HOUR: number = 60;\n\n/**\n * @hidden\n */\nexport interface DayViewEventResize {\n  originalTop: number;\n  originalHeight: number;\n  edge: string;\n}\n\n/**\n * Shows all events on a given day. Example usage:\n *\n * ```typescript\n * <mwl-calendar-day-view\n *  [viewDate]=\"viewDate\"\n *  [events]=\"events\">\n * </mwl-calendar-day-view>\n * ```\n */\n@Component({\n  selector: 'mwl-calendar-day-view',\n  template: `\n    <div class=\"cal-day-view\" #dayViewContainer>\n      <mwl-calendar-all-day-event\n        *ngFor=\"let event of view.allDayEvents; trackBy:trackByEventId\"\n        [event]=\"event\"\n        [customTemplate]=\"allDayEventTemplate\"\n        [eventTitleTemplate]=\"eventTitleTemplate\"\n        (eventClicked)=\"eventClicked.emit({event: event})\">\n      </mwl-calendar-all-day-event>\n      <div class=\"cal-hour-rows\">\n        <div class=\"cal-events\">\n          <div\n            #event\n            *ngFor=\"let dayEvent of view?.events; trackBy:trackByDayEvent\"\n            class=\"cal-event-container\"\n            [class.cal-draggable]=\"dayEvent.event.draggable\"\n            [class.cal-starts-within-day]=\"!dayEvent.startsBeforeDay\"\n            [class.cal-ends-within-day]=\"!dayEvent.endsAfterDay\"\n            [ngClass]=\"dayEvent.event.cssClass\"\n            mwlResizable\n            [resizeEdges]=\"{top: dayEvent.event?.resizable?.beforeStart, bottom: dayEvent.event?.resizable?.afterEnd}\"\n            [resizeSnapGrid]=\"{top: eventSnapSize, bottom: eventSnapSize}\"\n            [validateResize]=\"validateResize\"\n            (resizeStart)=\"resizeStarted(dayEvent, $event, dayViewContainer)\"\n            (resizing)=\"resizing(dayEvent, $event)\"\n            (resizeEnd)=\"resizeEnded(dayEvent)\"\n            mwlDraggable\n            [dragAxis]=\"{x: false, y: dayEvent.event.draggable && currentResizes.size === 0}\"\n            [dragSnapGrid]=\"{y: eventSnapSize}\"\n            [validateDrag]=\"validateDrag\"\n            (dragPointerDown)=\"dragStart(event, dayViewContainer)\"\n            (dragEnd)=\"eventDragged(dayEvent, $event.y)\"\n            [style.marginTop.px]=\"dayEvent.top\"\n            [style.height.px]=\"dayEvent.height\"\n            [style.marginLeft.px]=\"dayEvent.left + 70\"\n            [style.width.px]=\"dayEvent.width - 1\">\n            <mwl-calendar-day-view-event\n              [dayEvent]=\"dayEvent\"\n              [tooltipPlacement]=\"tooltipPlacement\"\n              [tooltipTemplate]=\"tooltipTemplate\"\n              [tooltipAppendToBody]=\"tooltipAppendToBody\"\n              [customTemplate]=\"eventTemplate\"\n              [eventTitleTemplate]=\"eventTitleTemplate\"\n              (eventClicked)=\"eventClicked.emit({event: dayEvent.event})\">\n            </mwl-calendar-day-view-event>\n          </div>\n        </div>\n        <div class=\"cal-hour\" *ngFor=\"let hour of hours; trackBy:trackByHour\" [style.minWidth.px]=\"view?.width + 70\">\n          <mwl-calendar-day-view-hour-segment\n            *ngFor=\"let segment of hour.segments; trackBy:trackByHourSegment\"\n            [style.height.px]=\"hourSegmentHeight\"\n            [segment]=\"segment\"\n            [segmentHeight]=\"hourSegmentHeight\"\n            [locale]=\"locale\"\n            [customTemplate]=\"hourSegmentTemplate\"\n            (click)=\"hourSegmentClicked.emit({date: segment.date})\"\n            [class.cal-drag-over]=\"segment.dragOver\"\n            mwlDroppable\n            (dragEnter)=\"segment.dragOver = true\"\n            (dragLeave)=\"segment.dragOver = false\"\n            (drop)=\"segment.dragOver = false; eventDropped($event, segment)\">\n          </mwl-calendar-day-view-hour-segment>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class CalendarDayViewComponent implements OnChanges, OnInit, OnDestroy {\n  /**\n   * The current view date\n   */\n  @Input() viewDate: Date;\n\n  /**\n   * An array of events to display on view\n   * The schema is available here: https://github.com/mattlewis92/calendar-utils/blob/c51689985f59a271940e30bc4e2c4e1fee3fcb5c/src/calendarUtils.ts#L49-L63\n   */\n  @Input() events: CalendarEvent[] = [];\n\n  /**\n   * The number of segments in an hour. Must be <= 6\n   */\n  @Input() hourSegments: number = 2;\n\n  /**\n   * The height in pixels of each hour segment\n   */\n  @Input() hourSegmentHeight: number = 30;\n\n  /**\n   * The day start hours in 24 hour time. Must be 0-23\n   */\n  @Input() dayStartHour: number = 0;\n\n  /**\n   * The day start minutes. Must be 0-59\n   */\n  @Input() dayStartMinute: number = 0;\n\n  /**\n   * The day end hours in 24 hour time. Must be 0-23\n   */\n  @Input() dayEndHour: number = 23;\n\n  /**\n   * The day end minutes. Must be 0-59\n   */\n  @Input() dayEndMinute: number = 59;\n\n  /**\n   * The width in pixels of each event on the view\n   */\n  @Input() eventWidth: number = 150;\n\n  /**\n   * An observable that when emitted on will re-render the current view\n   */\n  @Input() refresh: Subject<any>;\n\n  /**\n   * The locale used to format dates\n   */\n  @Input() locale: string;\n\n  /**\n   * The grid size to snap resizing and dragging of events to\n   */\n  @Input() eventSnapSize: number = this.hourSegmentHeight;\n\n  /**\n   * The placement of the event tooltip\n   */\n  @Input() tooltipPlacement: string = 'top';\n\n  /**\n   * A custom template to use for the event tooltips\n   */\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  /**\n   * Whether to append tooltips to the body or next to the trigger element\n   */\n  @Input() tooltipAppendToBody: boolean = true;\n\n  /**\n   * A custom template to use to replace the hour segment\n   */\n  @Input() hourSegmentTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for all day events\n   */\n  @Input() allDayEventTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for day view events\n   */\n  @Input() eventTemplate: TemplateRef<any>;\n\n  /**\n   * A custom template to use for event titles\n   */\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  /**\n   * Called when an event title is clicked\n   */\n  @Output()\n  eventClicked = new EventEmitter<{\n    event: CalendarEvent;\n  }>();\n\n  /**\n   * Called when an hour segment is clicked\n   */\n  @Output()\n  hourSegmentClicked = new EventEmitter<{\n    date: Date;\n  }>();\n\n  /**\n   * Called when an event is resized or dragged and dropped\n   */\n  @Output()\n  eventTimesChanged = new EventEmitter<CalendarEventTimesChangedEvent>();\n\n  /**\n   * An output that will be called before the view is rendered for the current day.\n   * If you add the `cssClass` property to an hour grid segment it will add that class to the hour segment in the template\n   */\n  @Output()\n  beforeViewRender = new EventEmitter<CalendarDayViewBeforeRenderEvent>();\n\n  /**\n   * @hidden\n   */\n  hours: DayViewHour[] = [];\n\n  /**\n   * @hidden\n   */\n  view: DayView;\n\n  /**\n   * @hidden\n   */\n  width: number = 0;\n\n  /**\n   * @hidden\n   */\n  refreshSubscription: Subscription;\n\n  /**\n   * @hidden\n   */\n  currentResizes: Map<DayViewEvent, DayViewEventResize> = new Map();\n\n  /**\n   * @hidden\n   */\n  validateDrag: (args: any) => boolean;\n\n  /**\n   * @hidden\n   */\n  validateResize: (args: any) => boolean;\n\n  /**\n   * @hidden\n   */\n  trackByEventId = trackByEventId;\n\n  /**\n   * @hidden\n   */\n  trackByDayEvent = (index: number, dayEvent: DayViewEvent) =>\n    dayEvent.event.id ? dayEvent.event.id : dayEvent.event;\n\n  /**\n   * @hidden\n   */\n  trackByHour = (index: number, hour: DayViewHour) =>\n    hour.segments[0].date.toISOString();\n\n  /**\n   * @hidden\n   */\n  trackByHourSegment = (index: number, segment: DayViewHourSegment) =>\n    segment.date.toISOString();\n\n  /**\n   * @hidden\n   */\n  constructor(\n    private cdr: ChangeDetectorRef,\n    private utils: CalendarUtils,\n    @Inject(LOCALE_ID) locale: string\n  ) {\n    this.locale = locale;\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnInit(): void {\n    if (this.refresh) {\n      this.refreshSubscription = this.refresh.subscribe(() => {\n        this.refreshAll();\n        this.cdr.markForCheck();\n      });\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnDestroy(): void {\n    if (this.refreshSubscription) {\n      this.refreshSubscription.unsubscribe();\n    }\n  }\n\n  /**\n   * @hidden\n   */\n  ngOnChanges(changes: any): void {\n    if (\n      changes.viewDate ||\n      changes.dayStartHour ||\n      changes.dayStartMinute ||\n      changes.dayEndHour ||\n      changes.dayEndMinute ||\n      changes.hourSegments\n    ) {\n      this.refreshHourGrid();\n    }\n\n    if (changes.events) {\n      validateEvents(this.events);\n    }\n\n    if (\n      changes.viewDate ||\n      changes.events ||\n      changes.dayStartHour ||\n      changes.dayStartMinute ||\n      changes.dayEndHour ||\n      changes.dayEndMinute ||\n      changes.eventWidth\n    ) {\n      this.refreshView();\n    }\n  }\n\n  eventDropped(\n    dropEvent: { dropData?: { event?: CalendarEvent } },\n    segment: DayViewHourSegment\n  ): void {\n    if (dropEvent.dropData && dropEvent.dropData.event) {\n      this.eventTimesChanged.emit({\n        event: dropEvent.dropData.event,\n        newStart: segment.date\n      });\n    }\n  }\n\n  resizeStarted(\n    event: DayViewEvent,\n    resizeEvent: ResizeEvent,\n    dayViewContainer: HTMLElement\n  ): void {\n    this.currentResizes.set(event, {\n      originalTop: event.top,\n      originalHeight: event.height,\n      edge: typeof resizeEvent.edges.top !== 'undefined' ? 'top' : 'bottom'\n    });\n    const resizeHelper: CalendarResizeHelper = new CalendarResizeHelper(\n      dayViewContainer\n    );\n    this.validateResize = ({ rectangle }) =>\n      resizeHelper.validateResize({ rectangle });\n    this.cdr.markForCheck();\n  }\n\n  resizing(event: DayViewEvent, resizeEvent: ResizeEvent): void {\n    const currentResize: DayViewEventResize = this.currentResizes.get(event);\n    if (resizeEvent.edges.top) {\n      event.top = currentResize.originalTop + +resizeEvent.edges.top;\n      event.height = currentResize.originalHeight - +resizeEvent.edges.top;\n    } else if (resizeEvent.edges.bottom) {\n      event.height = currentResize.originalHeight + +resizeEvent.edges.bottom;\n    }\n  }\n\n  resizeEnded(dayEvent: DayViewEvent): void {\n    const currentResize: DayViewEventResize = this.currentResizes.get(dayEvent);\n\n    let pixelsMoved: number;\n    if (currentResize.edge === 'top') {\n      pixelsMoved = dayEvent.top - currentResize.originalTop;\n    } else {\n      pixelsMoved = dayEvent.height - currentResize.originalHeight;\n    }\n\n    dayEvent.top = currentResize.originalTop;\n    dayEvent.height = currentResize.originalHeight;\n\n    const pixelAmountInMinutes: number =\n      MINUTES_IN_HOUR / (this.hourSegments * this.hourSegmentHeight);\n    const minutesMoved: number = pixelsMoved * pixelAmountInMinutes;\n    let newStart: Date = dayEvent.event.start;\n    let newEnd: Date = dayEvent.event.end;\n    if (currentResize.edge === 'top') {\n      newStart = addMinutes(newStart, minutesMoved);\n    } else if (newEnd) {\n      newEnd = addMinutes(newEnd, minutesMoved);\n    }\n\n    this.eventTimesChanged.emit({ newStart, newEnd, event: dayEvent.event });\n    this.currentResizes.delete(dayEvent);\n  }\n\n  dragStart(event: HTMLElement, dayViewContainer: HTMLElement): void {\n    const dragHelper: CalendarDragHelper = new CalendarDragHelper(\n      dayViewContainer,\n      event\n    );\n    this.validateDrag = ({ x, y }) =>\n      this.currentResizes.size === 0 && dragHelper.validateDrag({ x, y });\n    this.cdr.markForCheck();\n  }\n\n  eventDragged(dayEvent: DayViewEvent, draggedInPixels: number): void {\n    const pixelAmountInMinutes: number =\n      MINUTES_IN_HOUR / (this.hourSegments * this.hourSegmentHeight);\n    const minutesMoved: number = draggedInPixels * pixelAmountInMinutes;\n    const newStart: Date = addMinutes(dayEvent.event.start, minutesMoved);\n    let newEnd: Date;\n    if (dayEvent.event.end) {\n      newEnd = addMinutes(dayEvent.event.end, minutesMoved);\n    }\n    this.eventTimesChanged.emit({ newStart, newEnd, event: dayEvent.event });\n  }\n\n  private refreshHourGrid(): void {\n    this.hours = this.utils.getDayViewHourGrid({\n      viewDate: this.viewDate,\n      hourSegments: this.hourSegments,\n      dayStart: {\n        hour: this.dayStartHour,\n        minute: this.dayStartMinute\n      },\n      dayEnd: {\n        hour: this.dayEndHour,\n        minute: this.dayEndMinute\n      }\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private refreshView(): void {\n    this.view = this.utils.getDayView({\n      events: this.events,\n      viewDate: this.viewDate,\n      hourSegments: this.hourSegments,\n      dayStart: {\n        hour: this.dayStartHour,\n        minute: this.dayStartMinute\n      },\n      dayEnd: {\n        hour: this.dayEndHour,\n        minute: this.dayEndMinute\n      },\n      eventWidth: this.eventWidth,\n      segmentHeight: this.hourSegmentHeight\n    });\n    this.emitBeforeViewRender();\n  }\n\n  private refreshAll(): void {\n    this.refreshHourGrid();\n    this.refreshView();\n  }\n\n  private emitBeforeViewRender(): void {\n    if (this.hours && this.view) {\n      this.beforeViewRender.emit({\n        body: {\n          hourGrid: this.hours\n        },\n        period: this.view.period\n      });\n    }\n  }\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { CalendarEvent } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-all-day-event',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-event=\"event\"\n      let-eventClicked=\"eventClicked\">\n      <div\n        class=\"cal-all-day-event\"\n        [style.backgroundColor]=\"event.color?.secondary\"\n        [style.borderColor]=\"event.color?.primary\">\n        <mwl-calendar-event-actions [event]=\"event\"></mwl-calendar-event-actions>\n        &ngsp;\n        <mwl-calendar-event-title\n          [event]=\"event\"\n          [customTemplate]=\"eventTitleTemplate\"\n          view=\"day\"\n          (mwlClick)=\"eventClicked.emit()\">\n        </mwl-calendar-event-title>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        event: event,\n        eventClicked: eventClicked\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarAllDayEventComponent {\n  @Input() event: CalendarEvent;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  @Output() eventClicked: EventEmitter<any> = new EventEmitter();\n}\n","import { Component, Input, TemplateRef } from '@angular/core';\nimport { DayViewHourSegment } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-day-view-hour-segment',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-segment=\"segment\"\n      let-locale=\"locale\">\n      <div\n        class=\"cal-hour-segment\"\n        [style.height.px]=\"segmentHeight\"\n        [class.cal-hour-start]=\"segment.isStart\"\n        [class.cal-after-hour-start]=\"!segment.isStart\"\n        [ngClass]=\"segment.cssClass\">\n        <div class=\"cal-time\">\n          {{ segment.date | calendarDate:'dayViewHour':locale }}\n        </div>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        segment: segment,\n        locale: locale\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarDayViewHourSegmentComponent {\n  @Input() segment: DayViewHourSegment;\n\n  @Input() segmentHeight: number;\n\n  @Input() locale: string;\n\n  @Input() customTemplate: TemplateRef<any>;\n}\n","import {\n  Component,\n  Input,\n  Output,\n  EventEmitter,\n  TemplateRef\n} from '@angular/core';\nimport { DayViewEvent } from 'calendar-utils';\n\n@Component({\n  selector: 'mwl-calendar-day-view-event',\n  template: `\n    <ng-template\n      #defaultTemplate\n      let-dayEvent=\"dayEvent\"\n      let-tooltipPlacement=\"tooltipPlacement\"\n      let-eventClicked=\"eventClicked\"\n      let-tooltipTemplate=\"tooltipTemplate\"\n      let-tooltipAppendToBody=\"tooltipAppendToBody\">\n      <div\n        class=\"cal-event\"\n        [style.backgroundColor]=\"dayEvent.event.color?.secondary\"\n        [style.borderColor]=\"dayEvent.event.color?.primary\"\n        [mwlCalendarTooltip]=\"dayEvent.event.title | calendarEventTitle:'dayTooltip':dayEvent.event\"\n        [tooltipPlacement]=\"tooltipPlacement\"\n        [tooltipEvent]=\"dayEvent.event\"\n        [tooltipTemplate]=\"tooltipTemplate\"\n        [tooltipAppendToBody]=\"tooltipAppendToBody\">\n        <mwl-calendar-event-actions [event]=\"dayEvent.event\"></mwl-calendar-event-actions>\n        &ngsp;\n        <mwl-calendar-event-title\n          [event]=\"dayEvent.event\"\n          [customTemplate]=\"eventTitleTemplate\"\n          view=\"day\"\n          (mwlClick)=\"eventClicked.emit()\">\n        </mwl-calendar-event-title>\n      </div>\n    </ng-template>\n    <ng-template\n      [ngTemplateOutlet]=\"customTemplate || defaultTemplate\"\n      [ngTemplateOutletContext]=\"{\n        dayEvent: dayEvent,\n        tooltipPlacement: tooltipPlacement,\n        eventClicked: eventClicked,\n        tooltipTemplate: tooltipTemplate,\n        tooltipAppendToBody: tooltipAppendToBody\n      }\">\n    </ng-template>\n  `\n})\nexport class CalendarDayViewEventComponent {\n  @Input() dayEvent: DayViewEvent;\n\n  @Input() tooltipPlacement: string;\n\n  @Input() tooltipAppendToBody: boolean;\n\n  @Input() customTemplate: TemplateRef<any>;\n\n  @Input() eventTitleTemplate: TemplateRef<any>;\n\n  @Input() tooltipTemplate: TemplateRef<any>;\n\n  @Output() eventClicked: EventEmitter<any> = new EventEmitter();\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ResizableModule } from 'angular-resizable-element';\nimport { DragAndDropModule } from 'angular-draggable-droppable';\nimport { CalendarDayViewComponent } from './calendar-day-view.component';\nimport { CalendarAllDayEventComponent } from './calendar-all-day-event.component';\nimport { CalendarDayViewHourSegmentComponent } from './calendar-day-view-hour-segment.component';\nimport { CalendarDayViewEventComponent } from './calendar-day-view-event.component';\nimport { CalendarCommonModule } from '../common/calendar-common.module';\n\nexport {\n  CalendarDayViewComponent,\n  CalendarDayViewBeforeRenderEvent\n} from './calendar-day-view.component';\n\n@NgModule({\n  imports: [\n    CommonModule,\n    ResizableModule,\n    DragAndDropModule,\n    CalendarCommonModule\n  ],\n  declarations: [\n    CalendarDayViewComponent,\n    CalendarAllDayEventComponent,\n    CalendarDayViewHourSegmentComponent,\n    CalendarDayViewEventComponent\n  ],\n  exports: [\n    ResizableModule,\n    DragAndDropModule,\n    CalendarDayViewComponent,\n    CalendarAllDayEventComponent,\n    CalendarDayViewHourSegmentComponent,\n    CalendarDayViewEventComponent\n  ]\n})\nexport class CalendarDayModule {}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { DraggableHelper } from 'angular-draggable-droppable';\nimport {\n  CalendarCommonModule,\n  CalendarModuleConfig,\n  CalendarEventTitleFormatter,\n  CalendarDateFormatter,\n  CalendarUtils\n} from './common/calendar-common.module';\nimport { CalendarMonthModule } from './month/calendar-month.module';\nimport { CalendarWeekModule } from './week/calendar-week.module';\nimport { CalendarDayModule } from './day/calendar-day.module';\n\nexport * from './common/calendar-common.module';\nexport * from './month/calendar-month.module';\nexport * from './week/calendar-week.module';\nexport * from './day/calendar-day.module';\n\n/**\n * The main module of this library. Example usage:\n *\n * ```typescript\n * import { CalenderModule } from 'angular-calendar';\n *\n * @NgModule({\n *   imports: [\n *     CalenderModule.forRoot()\n *   ]\n * })\n * class MyModule {}\n * ```\n *\n */\n@NgModule({\n  imports: [\n    CalendarCommonModule,\n    CalendarMonthModule,\n    CalendarWeekModule,\n    CalendarDayModule\n  ],\n  exports: [\n    CalendarCommonModule,\n    CalendarMonthModule,\n    CalendarWeekModule,\n    CalendarDayModule\n  ]\n})\nexport class CalendarModule {\n  static forRoot(config: CalendarModuleConfig = {}): ModuleWithProviders {\n    return {\n      ngModule: CalendarModule,\n      providers: [\n        DraggableHelper,\n        config.eventTitleFormatter || CalendarEventTitleFormatter,\n        config.dateFormatter || CalendarDateFormatter,\n        config.utils || CalendarUtils\n      ]\n    };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}